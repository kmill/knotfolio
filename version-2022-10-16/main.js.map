{"version":3,"file":"main.js","sources":["../src/util.mjs","../src/integers.mjs","../src/kq.mjs","../src/poly.mjs","../src/expr.mjs","../src/laurent.mjs","../src/pd.mjs","../src/geom2d.mjs","../src/knotgraph.mjs","../src/tl.mjs","../src/invariants.mjs","../src/jones.mjs","../src/matrix.mjs","../src/fga.mjs","../src/alexander.mjs","../src/ratfun.mjs","../src/conway.mjs","../src/mlaurent.mjs","../src/atl.mjs","../src/arrow.mjs","../src/knotdata.mjs","../src/identify.mjs","../src/constants.mjs","../src/KnotDiagramView.mjs","../src/KnotRasterView.mjs","../src/StackBlur.mjs","../src/KnotImageImportView.mjs","../src/undostack.mjs","../src/main.mjs"],"sourcesContent":["export function assert(b) {\n  /* Asserts that the argument is true. */\n  if (!b) {\n    debugger;\n    throw new Error(\"assertion failed\");\n  }\n}\nexport function assert_fails(f) {\n  try {\n    f();\n  } catch (x) {\n    return;\n  }\n  debugger;\n  throw new Error(\"assertion failed\");\n}\n\nexport function test(name, f) {\n  try {\n    f();\n  } catch (x) {\n    console.error(\"FAILED: \" + name);\n    throw x;\n  }\n  console.log(\"passed: \" + name);\n}\n\nexport async function test_async(name, f) {\n  try {\n    await f();\n  } catch (x) {\n    console.error(\"FAILED: \" + name);\n    if (x.stack) {\n      console.error(x.stack);\n    }\n    process.exit(1);\n  }\n  console.log(\"passed: \" + name);\n}\n\nexport function remove_value(list, value) {\n  /* Removes the first occurance of value from the given list.\n     Returns a boolean indicating whether a value was removed. */\n  let idx = list.indexOf(value);\n  if (idx >= 0) {\n    list.splice(idx, 1);\n    return true;\n  } else {\n    return false;\n  }\n}\n\n// // Changing the prototype!\n// Function.prototype.def_methods = function (source) {\n//   /* Define prototype methods, copied from the source object. */\n//   for (var key in source) {\n//     if (Object.prototype.hasOwnProperty.call(source, key)) {\n//       this.prototype[key] = source[key];\n//     }\n//   }\n//   return this;\n// };\n\nexport function equal(a, b) {\n  /* A structural equality function that looks for an equals method\n     on the first argument.  Handles arrays recursively, and otherwise\n     falls back to ===. */\n  if (typeof a === \"object\") {\n    if (typeof b === \"object\") {\n      if (a.equal) {\n        return a.equal(b);\n      }\n      if (a instanceof Array) {\n        if (!(b instanceof Array) || a.constructor !== b.constructor) {\n          return false;\n        }\n        if (a.length !== b.length) {\n          return false;\n        }\n        for (let i = 0; i < a.length; i++) {\n          if (!equal(a[i], b[i])) {\n            return false;\n          }\n        }\n        return true;\n      }\n    }\n  }\n  return a === b;\n}\n\nexport function compare(a, b) {\n  /* Returns \"a - b\" for comparison purposes. Does lexicographical\n  ordering for things that are instanceof Array after sorting by\n  length. Requires that arguments have same type. */\n  assert(typeof a === typeof b);\n  if (typeof a === \"object\") {\n    if (a.compare) {\n      return a.compare(b);\n    } else if (a instanceof Array) {\n      assert(b instanceof Array);\n      assert(a.constructor === b.constructor);\n      if (a.length !== b.length) {\n        return a.length - b.length;\n      }\n      for (let i = 0; i < a.length; i++) {\n        let c = compare(a[i], b[i]);\n        if (c !== 0) return c;\n      }\n      return 0;\n    } else {\n      throw new TypeError;\n    }\n  } else if (typeof a === \"number\" || typeof a === \"boolean\") {\n    return a - b;\n  } else if (typeof a === \"string\") {\n    return a.localeCompare(b);\n  } else if (typeof a === \"null\" || typeof a === \"undefined\") {\n    return 0;\n  } else {\n    throw new Error(\"Unexpected type \" + typeof a);\n  }\n}\n\nfunction escapeChar(c) {\n  /* Given a character, returns a string that can appear in a JavaScript string literal. */\n  switch (c) {\n  case \"\\0\": return \"\\\\0\";\n  case \"\\\"\": return \"\\\\\\\"\";\n  case \"\\\\\": return \"\\\\\\\\\";\n  case \"\\n\": return \"\\\\n\";\n  case \"\\r\": return \"\\\\r\";\n  case \"\\v\": return \"\\\\v\";\n  case \"\\t\": return \"\\\\t\";\n  case \"\\b\": return \"\\\\b\";\n  case \"\\f\": return \"\\\\f\";\n  }\n  var code = c.charCodeAt(0);\n  if (32 <= code && code < 127) {\n    return c;\n  } else if (code < 256) {\n    return \"\\\\x\" + (code < 0x10 ? \"0\" : \"\") + code.toString(16).toUpperCase();\n  } else {\n    return \"\\\\u\" + (code < 0x1000 ? \"0\" : \"\") + code.toString(16).toUpperCase();\n  }\n}\n\nexport function toString(o) {\n  /* Give a string representation that tries somewhat to be valid\n     JavaScript code.  This is somewhat like repr in Python. */\n\n  if (o instanceof Array && o.toString === Array.prototype.toString) {\n    return \"[\" + o.map(toString).join(\", \") + \"]\";\n  } else if (typeof o === \"object\") {\n    return o.toString();\n  } else if (typeof o === \"string\") {\n    let s = \"'\";\n    for (let i = 0; i < o.length; i++) {\n      s += escapeChar(o.charAt(i));\n    }\n    return s + \"'\";\n  } else {\n    return ''+o;\n  }\n}\n\nexport class SimpleType extends Array {\n  /* A Mathematica-like type where the \"head\" is the constructor. */\n  constructor() {\n    /* Extremely annoyingly, the Array constructor with one argument\n       means to construct an array of a particular size.  This object\n       must comply.  Use the static method make instead. */\n    if (arguments.length === 1) {\n      super(arguments[0]);\n    } else {\n      super(arguments.length);\n      for (let i = 0; i < arguments.length; i++) {\n        this[i] = arguments[i];\n      }\n    }\n  }\n  equal(b) {\n    assert(b.constructor === this.constructor);\n    if (this.length !== b.length)\n      return false;\n    for (let i = 0; i < this.length; i++) {\n      if (!equal(this[i], b[i]))\n        return false;\n    }\n    return true;\n  }\n  compare(b) {\n    assert(b.constructor === this.constructor);\n    if (this.length !== b.length)\n      return this.length - b.length;\n    for (let i = 0; i < this.length; i++) {\n      let c = compare(this[i], b[i]);\n      if (c !== 0) return c;\n    }\n    return 0;\n  }\n  toString() {\n    return this.constructor.name + \".make(\" + this.map(toString).join(\", \") + \")\";\n  }\n\n  static make(/*args*/) {\n    /* A sane constructor. */\n    let o = new this(arguments.length);\n    for (let i = 0; i < arguments.length; i++) {\n      o[i] = arguments[i];\n    }\n    return o;\n  }\n}\n\nexport function clamp(val, lo, hi) {\n  /* Clamps the value to the range [lo, hi]. */\n  return Math.max(lo, Math.min(hi, val));\n}\n\nexport function hex_to_rgb(h) {\n  /* Takes an 0xrrggbb integer and outputs a \"#rrggbb\" string */\n  let b = h & 0xFF;\n  h = h >>> 8;\n  let g = h & 0xFF;\n  h = h >>> 8;\n  let r = h & 0xFF;\n  function s(i) {\n    if (i < 16) {\n      return \"0\" + i.toString(16);\n    } else {\n      return i.toString(16);\n    }\n  }\n  return \"#\" + s(r) + s(g) + s(b);\n}\n","import {assert} from \"./util.mjs\";\n\nexport const Integers = {\n  zero: 0,\n  unit: 1,\n  add: (a, b) => a + b,\n  mul: (a, b) => a * b,\n  negate: a => -a\n};\n\nexport function gcd(a, b) {\n  /* Calculates the greatest common divisor of the two arguments. */\n  assert(a === (0|a));\n  assert(b === (0|b));\n  a = Math.abs(a);\n  b = Math.abs(b);\n  if (a < b) {\n    [a, b] = [b, a];\n  }\n  while (b !== 0) {\n    [a, b] = [b, a % b];\n  }\n  return a;\n}\n","// kq - a knockoff jquery\n\nexport default function Q(node) {\n  if (node instanceof Q) {\n    return node;\n  } else if (typeof node === \"string\") {\n    return Q.query(node);\n  } else if (!this || this === window) {\n    return new Q(node);\n  } else if (arguments.length === 0) {\n    this.length = 0;\n  } else if (node === null) {\n    this.length = 0;\n  } else if (node instanceof Element || node === window) {\n    this[0] = node;\n    this.length = 1;\n  } else if (node instanceof NodeList) {\n    this.length = node.length;\n    for (let i = 0; i < node.length; i++) {\n      this[i] = node[i];\n    }\n  } else if (node instanceof Array) {\n    this.length = 0;\n    for (let i = 0; i < node.length; i++) {\n      if (node[i] instanceof Q) {\n        for (let j = 0; j < node[i].length; j++) {\n          this[this.length++] = node[i][j];\n        }\n      } else {\n        this[this.length++] = node[i];\n      }\n    }\n  } else if (typeof node === \"function\") {\n    this[0] = window;\n    this.length = 1;\n    this.on('load', node);\n  } else {\n    throw new Error(\"Invalid argument to Q\");\n  }\n};\n\nQ.create = function (tagname, props) {\n  /* Takes the tagname (a string), optionally an object of properties (or null), and finally a list of things to append. */\n  let el = new Q(document.createElement(tagname));\n  let i = 1;\n  if (typeof props === \"object\" && !(props instanceof Q)) {\n    i++;\n    if (props) {\n      for (let key in props) {\n        el[0][key] = props[key];\n      }\n    }\n  }\n  for (; i < arguments.length; i++) {\n    el.append(arguments[i]);\n  }\n  return el;\n};\nQ.textNode = function (s) {\n  return new Q(document.createTextNode(s));\n};\nQ.withId = function (id) {\n  return new Q(document.getElementById(id));\n};\nQ.query = function (q) {\n  return new Q(document.querySelectorAll(q));\n};\nQ.prototype.query = function (q) {\n  var list = new Q();\n  var j = 0;\n  for (var i = 0; i < this.length; i++) {\n    this[i].querySelectorAll(q).forEach(e => {\n      list[j++] = e;\n    });\n  }\n  list.length = j;\n  return list;\n};\nQ.prototype.forEach = function (f) {\n  for (var i = 0; i < this.length; i++) {\n    f(new Q(this[i]), i);\n  }\n};\nQ.prototype.append = function (/*varargs*/) {\n  for (let i = 0; i < arguments.length; i++) {\n    let node = arguments[i];\n    if (node instanceof Q) {\n      node.appendTo(this);\n    } else if (node instanceof Element) {\n      this[0].appendChild(node);\n    } else if (node instanceof Array) {\n      node.forEach(n => this.append(n));\n    } else {\n      this[0].appendChild(document.createTextNode('' + node));\n    }\n  }\n  return this;\n};\nQ.prototype.appendTo = function (node) {\n  if (node instanceof Q) {\n    node = node[0];\n  }\n  for (var i = 0; i < this.length; i++) {\n    node.appendChild(this[i]);\n  }\n  return this;\n};\nQ.prototype.remove = function () {\n  for (var i = 0; i < this.length; i++) {\n    if (this[i].parentNode !== null) {\n      this[i].parentNode.removeChild(this[i]);\n    }\n  }\n  return this;\n};\nQ.prototype.addClass = function (cls) {\n  for (var i = 0; i < this.length; i++) {\n    this[i].classList.add(cls);\n  }\n  return this;\n};\nQ.prototype.removeClass = function (cls) {\n  for (var i = 0; i < this.length; i++) {\n    this[i].classList.remove(cls);\n  }\n  return this;\n};\nQ.prototype.toggleClass = function (cls, /*opt*/toggle) {\n  for (var i = 0; i < this.length; i++) {\n    if (arguments.length >= 2) {\n      this[i].classList.toggle(cls, toggle);\n    } else {\n      this[i].classList.toggle(cls);\n    }\n  }\n  return this;\n};\nQ.prototype.on = function (event, handler, useCapture) {\n  var events = event.split(' ');\n  for (var j = 0; j < events.length; j++) {\n    if (events[j] !== '') {\n      for (var i = 0; i < this.length; i++) {\n        this[i].addEventListener(events[j], handler, !!useCapture);\n      }\n    }\n  }\n  return this;\n};\nQ.prototype.off = function (event, handler) {\n  var events = event.split(' ');\n  for (var j = 0; j < events.length; j++) {\n    if (events[j] !== '') {\n      for (var i = 0; i < this.length; i++) {\n        this[i].removeEventListener(events[j], handler);\n      }\n    }\n  }\n  return this;    \n};\nQ.prototype.empty = function () {\n  for (var i = 0; i < this.length; i++) {\n    var node = this[i];\n    while (node.firstChild) {\n      node.removeChild(node.firstChild);\n    }\n  }\n  return this;\n};\nQ.prototype.attr = function (k, /*opt*/v) {\n  if (arguments.length === 1) {\n    return this[0].getAttribute(k);\n  } else {\n    for (var i = 0; i < this.length; i++) {\n      this[i].setAttribute(k, v);\n    }\n    return this;\n  }\n};\nQ.prototype.prop = function (k, /*opt*/v) {\n  if (arguments.length === 1) {\n    return this[0][k];\n  } else {\n    for (var i = 0; i < this.length; i++) {\n      this[i][k] = v;\n    }\n    return this;\n  }\n};\nQ.prototype.value = function (/*opt*/v) {\n  if (arguments.length === 0) {\n    return this[0].value;\n  } else {\n    for (var i = 0; i < this.length; i++) {\n      this[i].value = v;\n    }\n    return this;\n  }\n};\nQ.prototype.css = function (k, /*opt*/v) {\n  if (arguments.length === 1) {\n    return this[0].style[k];\n  } else {\n    for (var i = 0; i < this.length; i++) {\n      this[i].style[k] = v;\n    }\n    return this;\n  }\n};\n\nfunction tag(tagname) {\n  Q[tagname] = function () {\n    return Q.create(tagname, ...arguments);\n  };\n}\n\ntag('div'); tag('span');\ntag('p');\ntag('ol'); tag('ul'); tag('li');\ntag('sup');\ntag('a');\n","// Plain polynomials, stored as lists of coefficients.\n// For routines like GCD, assumes these are polynomials with integer coefficients.\n\nimport {assert, SimpleType} from \"./util.mjs\";\nimport {gcd} from \"./integers.mjs\";\nimport Q from \"./kq.mjs\";\n\nexport class Poly extends SimpleType {\n  copy() {\n    return this.slice();\n  }\n  normalize() {\n    /* Normalize the polynomial representation in place */\n    while (this.length > 0 && this[this.length - 1] === 0) {\n      this.pop();\n    }\n    return this;\n  }\n  degree() {\n    /* The degree of the polynomial.  The constant-zero polynomial has degree -1. */\n    this.normalize();\n    return this.length - 1;\n  }\n  is_zero() {\n    return this.length === 0;\n  }\n  is_unit() {\n    return this.length === 1 && this[0] === 1;\n  }\n  leading_coeff() {\n    if (this.length === 0) {\n      return 0;\n    } else {\n      return this[this.length - 1];\n    }\n  }\n  is_monic(allow_negative=false) {\n    if (this.length > 0) {\n      let c = this[this.length - 1];\n      if (allow_negative) {\n        c = Math.abs(c);\n      }\n      return c === 1;\n    } else {\n      return false;\n    }\n  }\n  min_exp() {\n    /* Returns the number of times x divides the polynomial.  If this===0, then returns Infinity. */\n    if (this.length === 0) {\n      return Infinity;\n    } else {\n      for (let i = 0; i < this.length; i++) {\n        if (this[i] !== 0) {\n          return i;\n        }\n      }\n      return assert(false);\n    }\n  }\n  mul_x(s) {\n    /* Multiplies by x^s.  Allowed to be negative. */\n    if (this.length === 0) {\n      return Poly.zero;\n    } else if (s >= 0) {\n      let p = this.slice();\n      for (let i = 0; i < s; i++) {\n        p.unshift(0);\n      }\n      return p;\n    } else {\n      let p = this.slice();\n      s = -s;\n      for (let i = 0; i < s; i++) {\n        let c = p.shift();\n        assert(c === 0);\n      }\n      return p;\n    }\n  }\n  add(p2) {\n    /* Adds this polynomial to p2. */\n    assert(p2 instanceof Poly);\n    let p1 = this;\n    if (p1.length < p2.length) {\n      [p1, p2] = [p2, p1];\n    }\n    let p = p1.slice();\n    for (let i = 0; i < p2.length; i++) {\n      p[i] += p2[i];\n    }\n    return p.normalize();\n  }\n  mul(p2) {\n    /* Multiply this polynomial by p2. Assumes both are normalized. */\n    assert(p2 instanceof Poly);\n    let p1 = this;\n    if (p1.length === 0 || p2.length === 0) {\n      return Poly.zero;\n    }\n    let p = new Poly(p1.length + p2.length - 1);\n    p.fill(0);\n    for (let i1 = 0; i1 < p1.length; i1++) {\n      for (let i2 = 0; i2 < p2.length; i2++) {\n        p[i1 + i2] += p1[i1] * p2[i2];\n      }\n    }\n    return p; // no need to normalize\n  }\n  scale(c) {\n    /* Gives the polynomial times the scalar c. */\n    assert(typeof c === \"number\");\n    if (c === 0) {\n      return Poly.zero;\n    }\n    return this.map(coeff => coeff * c);\n  }\n\n  content() {\n    /* The content of a polynomial is the GCD of its coefficients */\n    return this.reduce((g, c) => gcd(g, c), 0);\n  }\n\n  z_divisible(c) {\n    /* Checks whether the polynomial is divisible by the scalar c. */\n    assert(typeof c === \"number\" && c !== 0);\n    return this.every(coeff => coeff % c === 0);\n  }\n\n  gcd(p2) {\n    /* Compute the gcd of this and p2, two polynomials with integer coefficients. */\n    assert(p2 instanceof Poly);\n    let C1 = this.slice(),\n        C2 = p2.slice();\n    C1.forEach(c => assert(c === (0|c)));\n    C2.forEach(c => assert(c === (0|c)));\n\n    let cont_gcd = gcd(C1.content(), C2.content());\n\n    // denominators for C1 and C2\n    let d1 = 1;\n    let d2 = 1;\n\n    function normalize_and_swap() {\n      C1.normalize();\n      if (C1.length === 0) {\n        d1 = 1;\n      } else {\n        let q = C1.content();\n        q *= Math.sign(C1[C1.length - 1]);\n        for (let i = 0; i < C1.length; i++) {\n          C1[i] /= q;\n        }\n        d1 = C1[C1.length - 1];\n      }\n      C2.normalize();\n      if (C2.length === 0) {\n        d2 = 1;\n      } else {\n        let q = C2.content();\n        q *= Math.sign(C2[C2.length - 1]);\n        for (let i = 0; i < C2.length; i++) {\n          C2[i] /= q;\n        }\n        d2 = C2[C2.length - 1];\n      }\n      if (C1.length < C2.length) {\n        [C1,d1, C2,d2] = [C2,d2, C1,d1];\n      }\n      let d_gcd = gcd(d1, d2);\n      d1 /= d_gcd;\n      d2 /= d_gcd;\n    }\n\n    normalize_and_swap();\n\n    while (C2.length > 0) {\n      for (let i = 0; i < C1.length; i++) {\n        C1[i] *= d2;\n      }\n      let k = C1.length - C2.length;\n      for (let i = 0; i < C2.length; i++) {\n        C1[i + k] -= d1 * C2[i];\n      }\n      normalize_and_swap();\n    }\n\n    for (let i = 0; i < C1.length; i++) {\n      C1[i] = C1[i] * cont_gcd;\n    }\n\n    return C1;\n  }\n\n  divide(q) {\n    /* Divide by the polynomial q, returning the quotient. */\n    assert(q instanceof Poly);\n    assert(q.degree() >= 0);\n    if (q.degree() === 0) {\n      return this.map(c => c / q[0]);\n    }\n    let q_lead = q.leading_coeff();\n    let r = this;\n    let d = Poly.zero;\n    while (true) {\n      let i = r.degree() - q.degree();\n      if (i < 0) break;\n      let c = r.leading_coeff() / q_lead;\n      d = d.add(Poly.incl(c).mul_x(i));\n      r = r.add(q.scale(-c).mul_x(i));\n    }\n    // now this == q * d + r\n    //console.log(\"divided \" + this + \" by \" + q);\n    //console.log(\"  got \" + d + \" rem \" + r);\n    return d;\n  }\n\n  static incl(c) {\n    /* The natural inclusion from the base ring. */\n    return Poly.make(c);\n  }\n}\n\nPoly.zero = Poly.make();\nPoly.unit = Poly.make(1);\n","// Some symbolic expressions, mainly for the purpose of pretty printing.\n\nimport {assert, SimpleType, toString} from \"./util.mjs\";\nimport {gcd} from \"./integers.mjs\";\nimport Q from \"./kq.mjs\";\n\nfunction is_zero(e) {\n  return e instanceof IntConst && e[0] === 0;\n}\n\nfunction is_one(e) {\n  return e instanceof IntConst && e[0] === 1 && e[1] === 1;\n}\n\nclass ExprType extends SimpleType {\n  toMathematica() {\n    return toMathematica(this);\n  }\n  toDOM() {\n    return toDOM(this);\n  }\n}\n\nclass Const extends ExprType {\n  static make(s) {\n    assert(typeof s === \"string\");\n    let o = new Const();\n    o.push(s);\n    return o;\n  }\n  simplify() {\n    return this;\n  }\n}\n\nclass IntConst extends ExprType {\n  simplify() {\n    return this;\n  }\n  static make(a, b=1) {\n    let d = gcd(a, b);\n    a /= d;\n    b /= d;\n    if (b < 0) {\n      a = -a;\n      b = -b;\n    }\n    if (a === 0) {\n      b = 1;\n    }\n    return new IntConst(a, b);\n  }\n  neg() {\n    return IntConst.make(-this[0], this[1]);\n  }\n}\n\nclass Var extends ExprType {\n  simplify() {\n    return this;\n  }\n}\n\nclass Plus extends ExprType {\n  simplify() {\n    let i = 0;\n    while (i < this.length) {\n      this[i] = this[i].simplify();\n      if (is_zero(this[i])) {\n        this.splice(i, 1);\n      } else if (this[i] instanceof Plus) {\n        this.splice(i, 1, ...this[i]);\n      } else {\n        i++;\n      }\n    }\n    if (this.length === 0) {\n      return make_int_const(0);\n    }\n    if (this.length === 1) {\n      return this[0];\n    }\n    return this;\n  }\n}\n\nclass Times extends ExprType {\n  simplify() {\n    let c = 1, denom = 1;\n    let i = 0;\n    while (i < this.length) {\n      this[i] = this[i].simplify();\n      if (is_zero(this[i])) {\n        return this[i];\n      } else if (this[i] instanceof IntConst) {\n        c *= this[i][0];\n        denom *= this[i][1];\n        this.splice(i, 1);\n      } else if (this[i] instanceof Times) {\n        this.splice(i, 1, ...this[i]);\n      } else {\n        i++;\n      }\n    }\n    if (c !== denom) {\n      this.unshift(make_int_const(c, denom));\n    }\n    if (this.length === 0) {\n      return make_int_const(1);\n    }\n    if (this.length === 1) {\n      return this[0];\n    }\n    return this;\n  }\n}\n\nclass Pow extends ExprType {\n  simplify() {\n    this[0] = this[0].simplify();\n    this[1] = this[1].simplify();\n    if (is_one(this[1])) {\n      return this[0];\n    } else if (is_zero(this[1])) {\n      return make_int_const(1);\n    } else {\n      return this;\n    }\n  }\n}\n\nexport function make_int_const(a, b=1) {\n  return IntConst.make(a, b);\n}\n\nexport function make_const(s) {\n  assert(typeof s === \"string\");\n  return Const.make(s);\n}\n\nexport function plus(...xs) {\n  return Plus.make(...xs).simplify();\n}\n\nexport function times(...xs) {\n  return Times.make(...xs).simplify();\n}\n\nexport function pow(a, b) {\n  return Pow.make(a, b).simplify();\n}\n\nexport function make_var(v) {\n  return Var.make(v);\n}\n\nconst LIT_PREC = 20,\n      POW_PREC = 15,\n      NEG_PREC = 13,\n      DIV_PREC = 12,\n      TIMES_PREC = 10,\n      PLUS_PREC = 5;\n\nfunction parens(oprec, a) {\n  if (oprec < a.prec) {\n    return a.s;\n  } else {\n    return \"(\" + a.s + \")\";\n  }\n}\n\nfunction toMathPrec(o) {\n  if (o instanceof IntConst) {\n    if (o[1] !== 1) {\n      return {prec: DIV_PREC, s: ''+o[0] + \"/\" + o[1]};\n    } else if (o[0] < 0) {\n      return {prec: NEG_PREC, s: ''+o[0]};\n    } else {\n      return {prec: LIT_PREC, s: ''+o[0]};\n    }\n  } else if (o instanceof Const) {\n    return {prec: LIT_PREC, s: o[0]};\n  } else if (o instanceof Var) {\n    return {prec: LIT_PREC, s: ''+o[0]};\n  } else if (o instanceof Pow) {\n    return {prec: POW_PREC,\n            s: parens(POW_PREC, toMathPrec(o[0])) + \"^\" + parens(POW_PREC, toMathPrec(o[1]))};\n  } else if (o instanceof Times) {\n    let neg = false;\n    if (o[0] instanceof IntConst && o[0][0] === -1 && o[0][1] === 1) {\n      neg = true;\n      o = Array.from(o);\n      o.shift();\n    }\n    return {prec: TIMES_PREC,\n            s: (neg ? \"-\" : \"\") + o.map(part => parens(TIMES_PREC, toMathPrec(part))).join(\" \")};\n  } else if (o instanceof Plus) {\n    let parts = o.map((part, i) => {\n      let neg = false;\n      if (i > 0 && part instanceof Times && part[0] instanceof IntConst && part[0][0] < 0) {\n        neg = true;\n        part = times(part[0].neg(), part.slice(1));\n      } else if (i > 0 && part instanceof IntConst && part[0] < 0) {\n        neg = true;\n        part = part.neg();\n      }\n      return {neg: neg,\n              s: parens(PLUS_PREC, toMathPrec(part))};\n    });\n    let s = \"\";\n    parts.forEach(spec => {\n      if (spec.neg) {\n        s += \" - \" + spec.s;\n      } else if (s.length > 0) {\n        s += \" + \" + spec.s;\n      } else {\n        s += spec.s;\n      }\n    });\n    return {prec: PLUS_PREC,\n            s: s};\n  } else {\n    assert(false);\n    throw new Error(\"Invalid expression\");\n  }\n}\n\nfunction toMathematica(o) {\n  return parens(-1, toMathPrec(o));\n}\n\n\n\nfunction dparens(oprec, a) {\n  if (oprec < a.prec) {\n    return a.dom;\n  } else {\n    return [\"(\", ...a.dom, \")\"];\n  }\n}\n\nfunction toDOMPrec(o) {\n  if (o instanceof IntConst) {\n    if (o[1] !== 1) {\n      return {prec: DIV_PREC, dom: [(o[0] < 0 ? '\\u2212' : '') + Math.abs(o[0]) + \"/\" + o[1]]};\n    } else if (o[0] < 0) {\n      return {prec: NEG_PREC, dom: ['\\u2212'+(-o[0])]};\n    } else {\n      return {prec: LIT_PREC, dom: [''+o[0]]};\n    }\n  } else if (o instanceof Const) {\n    return {prec: LIT_PREC, dom: [o[0]]};\n  } else if (o instanceof Var) {\n    return {prec: LIT_PREC, dom: [Q.create(\"var\", ''+o[0])]};\n  } else if (o instanceof Pow) {\n    return {prec: LIT_PREC,\n            dom: [dparens(POW_PREC, toDOMPrec(o[0])),\n                  Q.create(\"sup\", {}, dparens(-1, toDOMPrec(o[1])))]};\n  } else if (o instanceof Times) {\n    let neg = false;\n    if (o[0] instanceof IntConst && o[0][0] === -1 && o[0][1] === 1) {\n      neg = true;\n      o = Array.from(o);\n      o.shift();\n    }\n    let res = [];\n    if (neg) {\n      res.push(\"\\u2212\");\n    }\n    o.forEach((part, i) => {\n      if (i > 0) {\n        res.push(\" \");\n      }\n      res.push(dparens(TIMES_PREC, toDOMPrec(part)));\n    });\n    return {prec: TIMES_PREC, dom: res};\n  } else if (o instanceof Plus) {\n    let parts = o.map((part, i) => {\n      let neg = false;\n      if (i > 0 && part instanceof Times && part[0] instanceof IntConst && part[0][0] < 0) {\n        neg = true;\n        part = times(part[0].neg(), part.slice(1));\n      } else if (i > 0 && part instanceof IntConst && part[0] < 0) {\n        neg = true;\n        part = part.neg();\n      }\n      return {neg: neg,\n              dom: dparens(PLUS_PREC, toDOMPrec(part))};\n    });\n    let res = [];\n    parts.forEach(spec => {\n      if (spec.neg) {\n        res.push(\" \\u2212 \", spec.dom);\n      } else if (res.length > 0) {\n        res.push(\" + \", spec.dom);\n      } else {\n        res.push(spec.dom);\n      }\n    });\n    return {prec: PLUS_PREC,\n            dom: res};\n  } else {\n    assert(false);\n    throw new Error(\"Invalid expression\");\n  }\n}\n\nfunction toDOM(o) {\n  return Q.create(\"span\", {}, dparens(-1, toDOMPrec(o)));\n}\n","import {assert, SimpleType} from \"./util.mjs\";\nimport {gcd} from \"./integers.mjs\";\nimport {Poly} from \"./poly.mjs\";\nimport * as expr from \"./expr.mjs\";\nimport Q from \"./kq.mjs\";\n\n// A Laurent polynomial is a list of coefficients and an offset.\n\nexport class Laurent {\n  constructor(offset, coeffs) {\n    this._offset = offset;\n    this._coeffs = coeffs;\n  }\n\n  copy() {\n    return new Laurent(this._offset, this._coeffs); // ok since terms are immutable\n  }\n  is_zero() {\n    // valid for normalized laurent polynomials\n    return this._coeffs.length === 0;\n  }\n  normalize() {\n    /* Destructively simplify the polynomial */\n    let coeffs = this._coeffs;\n    while (coeffs.length > 0 && coeffs[coeffs.length - 1] === 0) {\n      coeffs.pop();\n    }\n    while (coeffs.length > 0 && coeffs[0] === 0) {\n      coeffs.shift();\n      this._offset++;\n    }\n    if (this._coeffs.length === 0) {\n      this._offset = 0;\n    }\n    return this;\n  }\n  toListString() {\n    /* Outputs an [exponent; coefficient...] list. */\n    this.normalize();\n    if (this._coeffs.length === 0) {\n      return \"[0; 0]\";\n    }\n    return \"[\" + this._offset + \"; \" + this._coeffs + \"]\";\n  }\n\n  toExpr(variable=\"t\", exp_divisor=1) {\n    /* Returns an expression as in the expr module. */\n    this.normalize();\n    let e = expr.make_int_const(0);\n    let evar = expr.make_var(variable);\n    for (let i = 0; i < this._coeffs.length; i++) {\n      let coeff = this._coeffs[i];\n      if (coeff === 0) continue;\n      let exp = i + this._offset;\n      e = expr.plus(e, expr.times(expr.make_int_const(coeff),\n                                  expr.pow(evar,\n                                           expr.make_int_const(exp, exp_divisor))));\n    }\n    return e;\n  }\n\n  add(p2, c=1, exp_offset=0) {\n    /* assumes both polynomials are simplified. returns a simplified\n       polynomial. calculates this + c*p2*t^exp_offset. */\n    assert(p2 instanceof Laurent);\n    let p1 = this;\n    if (p1._coeffs.length === 0) {\n      return p2.simple_mul(c, exp_offset);\n    }\n    if (p2._coeffs.length === 0 || c === 0) {\n      return p1;\n    }\n    //console.log(\"%s.add(%s, %s, %s)\", p1.toListString(), p2.toListString(), c, exp_offset);\n    let minexp = Math.min(p1._offset, p2._offset + exp_offset);\n    let maxexp = Math.max(p1._offset + p1._coeffs.length - 1, p2._offset + exp_offset + p2._coeffs.length - 1);\n\n    let coeffs = new Array(maxexp - minexp + 1).fill(0);\n\n    for (let i = 0; i < p1._coeffs.length; i++) {\n      let j = i + p1._offset - minexp;\n      coeffs[j] = p1._coeffs[i];\n    }\n    for (let i = 0; i < p2._coeffs.length; i++) {\n      let j = i + p2._offset + exp_offset - minexp;\n      coeffs[j] += c * p2._coeffs[i];\n    }\n\n    return new Laurent(minexp, coeffs).normalize();\n  }\n\n  mul(p2) {\n    /* Assumes this and p2 are simplified. Returns this*p2, simplified.\n       Does the grade-school algorithm using each term of p2.*/\n    assert(p2 instanceof Laurent);\n    //console.log(\"%s.mul(%s)\", this.toListString(), p2.toListString());\n    let p = Laurent.zero;\n    for (let i = 0; i < p2._coeffs.length; i++) {\n      let exp = i + p2._offset;\n      //console.log(\"step (%s, %s, %s)\", p.toListString(), p2._coeffs[i], exp);\n      let c = p2._coeffs[i];\n      if (c !== 0) {\n        p = p.add(this, p2._coeffs[i], exp);\n      }\n      //console.log(\"now p = %s\", p.toListString());\n    }\n    return p;\n  }\n  simple_mul(c=1, exp=0) {\n    /* Returns c*this*t^exp. */\n    assert(typeof c === \"number\" && typeof exp === \"number\");\n    if (c === 0) {\n      return Laurent.zero;\n    } else if (c === 1 && exp === 0) {\n      return this;\n    } else {\n      return new Laurent(this._offset + exp, this._coeffs.map(coeff => c * coeff));\n    }\n  }\n\n  equal(p2) {\n    assert(p2 instanceof Laurent);\n    let p1 = this;\n    if (p1._offset !== p2._offset || p1._coeffs.length !== p2._coeffs.length) {\n      return false;\n    }\n    for (let i = 0; i < p1._coeffs.length; i++) {\n      if (p1._coeffs[i] !== p2._coeffs[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  negate() {\n    return this.simple_mul(-1);\n  }\n\n  to_poly(preserve_degree=false) {\n    /* Multiplies the Laurent polynomial so that the min degree is 0, returning a Poly. */\n    this.normalize();\n    if (preserve_degree) {\n      assert(this._offset >= 0);\n      let coeffs = new Array(this._offset).fill(0).concat(this._coeffs);\n      return Poly.make(...coeffs);\n    } else {\n      return Poly.make(...this._coeffs);\n    }\n  }\n\n  coeffs() {\n    return this._coeffs.slice();\n  }\n  static fromCoeffs(coeffs, offset=0) {\n    return new Laurent(offset, coeffs.slice()).normalize();\n  }\n\n  minexp() {\n    return this._offset;\n  }\n  maxexp() {\n    return this._offset + this._coeffs.length - 1;\n  }\n\n  div_by_loop() {\n    /* Divides by -t^2-t^(-2), which is important for the Kauffman bracket. */\n\n    // divide by 1+t^4 and renormalize\n\n    if (this._coeffs.length === 0) {\n      return Laurent.zero;\n    }\n\n    let coeffs = this.coeffs();\n    let minexp = this.minexp();\n    let q = [];\n    let state = [0,0,0,0];\n    for (let i = 0; i < coeffs.length; i++) {\n      let a = coeffs[i] - state[3];\n      state.pop();\n      state.unshift(a);\n      q.push(-a);\n    }\n    assert(state.every(x => x === 0));\n    return new Laurent(minexp + 2, q).normalize();\n  }\n\n  gcd(p2) {\n    /* Compute the gcd of two Laurent polynomials with integer coefficients */\n    assert(p2 instanceof Laurent);\n\n    return Laurent.fromCoeffs([...this.to_poly().gcd(p2.to_poly())]);\n  }\n\n  toString() {\n    return \"Laurent.fromCoeffs(\" + toString(this._coeffs) + \", \" + this._offset + \")\";\n  }\n\n  // Making this a NumberSystem\n  static add(a, b) {\n    return a.add(b);\n  }\n  static mul(a, b) {\n    return a.mul(b);\n  }\n  static negate(a) {\n    return a.simple_mul(-1, 0);\n  }\n  static incl(v) {\n    /* The natural inclusion of the base field. */\n    assert(typeof v === \"number\");\n    if (v === 0) {\n      return new Laurent(0, []);\n    } else {\n      return new Laurent(0, [v]);\n    }\n  }\n\n  static is_zero(a) {\n    return a.is_zero();\n  }\n}\n\nLaurent.zero = Laurent.incl(0);\nLaurent.unit = Laurent.incl(1);\nLaurent.t = Laurent.fromCoeffs([1],1);\nLaurent.tinv = Laurent.fromCoeffs([1],-1);\n","// Planar diagrams\n//\n// http://www.katlas.org/wiki/Planar_Diagrams\n// https://snappy.math.uic.edu/spherogram.html\n// https://bitbucket.org/t3m/spherogram/raw/tip/spherogram_src/links/doc.pdf\n\nimport {assert, SimpleType} from \"./util.mjs\";\n\nexport class PD extends SimpleType {\n  toMathematica() {\n    return \"PD[\" + this.map(x => x.toMathematica()).join(\", \") + \"]\";\n  }\n  toSnappy() {\n    /* Gives the unoriented PD (Xp and Xm degrade to X). */\n    let crossings = this.map(x => {\n      if (x instanceof P) {\n        throw new Error(\"SnapPy doesn't support P paths\");\n      } else {\n        return x.toSnappy();\n      }\n    });\n    return \"Link([\" + crossings.join(\", \") + \"])\";\n  }\n}\n\nexport class X extends SimpleType {\n  static make(a, b, c, d) {\n    /* Represents a crossing like\n       \n         c \\ / b\n            /\n         d / \\ a\n\n       where a, b, c, and d are edge ids.\n    */\n\n    assert(arguments.length === 4);\n    return super.make(a, b, c, d);\n  }\n  toMathematica() {\n    return \"X[\" + this.join(\",\") + \"]\";\n  }\n  toSnappy() {\n    return \"(\" + this.join(\",\") + \")\";\n  }\n}\n\nexport class P extends SimpleType {\n  static make(a, b) {\n    /* Represents a path between edge ids a and b. */\n    assert(arguments.length === 2);\n    return super.make(a, b);\n  }\n  toMathematica() {\n    return \"P[\" + this.join(\",\") + \"]\";\n  }\n}\n\nexport class Xp extends X {\n  /* Represents a right-handed oriented crossing like\n       \n       c ^ ^ b\n          /\n       d / \\ a\n\n     where a, b, c, and d are edge ids. */\n\n  toMathematica() {\n    return \"Xp[\" + this.join(\",\") + \"]\";\n  }\n}\n\nexport class Xm extends X {\n  /* Represents a left-handed oriented crossing like\n       \n       d ^ ^ c\n          \\\n       a / \\ b\n\n     where a, b, c, and d are edge ids. */\n\n  toMathematica() {\n    return \"Xm[\" + this.join(\",\") + \"]\";\n  }\n}\n\nexport class Virtual extends SimpleType {\n  static make(a, b, c, d) {\n    /* Represents a virtual crossing like\n\n         c \\ / b\n            O\n         d / \\ a\n\n       where a, b, c, and d are edge ids.\n    */\n\n    assert(arguments.length === 4);\n    return super.make(a, b, c, d);\n  }\n  toMathematica() {\n    let [a, b, c, d] = this;\n    return \"P[\" + a + \",\" + c + \"], P[\" + b + \",\" + d + \"]\";\n  }\n  toSnappy() {\n    let [a, b, c, d] = this;\n    return \"(\" + a + \",\" + c + \"), (\" + b + \",\" + d + \")\";\n  }\n}\n\nexport function pd_eliminate_paths(diagram) {\n  /* Takes a PD diagram, returns {unknots: int, diagram: PD}, where\n  the resulting diagram has no P or Virtual entities anymore. */\n  assert(diagram instanceof PD);\n\n  let n_unknots = 0;\n  diagram = diagram.map(entity => entity.slice());\n\n  function join(a, b) {\n    if (a === b) {\n      n_unknots++;\n    } else {\n      for (let j = 0; j < diagram.length; j++) {\n        diagram[j] = diagram[j].map(arc => arc === b ? a : arc);\n      }\n    }\n  }\n\n  for (let i = 0; i < diagram.length;) {\n    let entity = diagram[i];\n    if (entity.constructor === P) {\n      join(entity[0], entity[1]);\n      diagram.splice(i, 1);\n    } else if (entity.constructor === Virtual) {\n      join(entity[0], entity[2]);\n      join(entity[1], entity[3]);\n      diagram.splice(i, 1);\n    } else {\n      i++;\n    }\n  }\n\n  return {\n    unknots: n_unknots,\n    diagram: diagram\n  };\n}\n\nexport function pd_first_free_id(diagram) {\n  assert(diagram instanceof PD);\n  let free_id = 1;\n  diagram.forEach(entity => {\n    entity.forEach(i => {\n      free_id = Math.max(free_id, i + 1);\n    });\n  });\n  return free_id;\n}\n\nexport function pd_writhe_normalize(diagram) {\n  /* Given an oriented PD, returns a PD with each component having zero writhe.\n     Each crossing must be an Xp or Xm node. */\n  assert(diagram instanceof PD);\n\n  let eliminated = pd_eliminate_paths(diagram);\n  let n_unknots = eliminated.unknots;\n  diagram = eliminated.diagram;\n\n  // Calculate writhes of components\n  let arc_comps = new Map; // arc_id -> component_id (a canonical arc id)\n  function arc_find(arc) {\n    while (arc_comps.has(arc)) {\n      arc = arc_comps.get(arc);\n    }\n    return arc;\n  }\n  function arc_join(arc1, arc2) {\n    arc1 = arc_find(arc1);\n    arc2 = arc_find(arc2);\n    if (arc1 !== arc2) {\n      arc_comps.set(arc2, arc1);\n    }\n  }\n  diagram.forEach(entity => {\n    if (entity.constructor === Xp || entity.constructor === Xm) {\n      arc_join(entity[0], entity[2]);\n      arc_join(entity[1], entity[3]);\n    } else {\n      throw new TypeError;\n    }\n  });\n  let writhes = new Map;\n  function update_writhe(arc, delta) {\n    arc = arc_find(arc);\n    if (writhes.has(arc)) {\n      writhes.set(arc, writhes.get(arc) + delta);\n    } else {\n      writhes.set(arc, delta);\n    }\n  }\n  diagram.forEach(entity => {\n    if (arc_find(entity[0]) === arc_find(entity[1])) {\n      if (entity.constructor === Xp) {\n        update_writhe(entity[0], 1);\n      } else {\n        update_writhe(entity[1], -1);\n      }\n    }\n  });\n\n  let free_id = pd_first_free_id(diagram);\n\n  let new_entities = [];\n  function maybe_insert_twists(entity, idx) {\n    let i = entity[idx];\n    if (!writhes.has(i))\n      return;\n    let wr = writhes.get(i);\n    writhes.delete(i);\n\n    while (wr > 0) {\n      wr--;\n      let j = free_id++;\n      let k = free_id++;\n      new_entities.push(Xm.make(j, k, k, i));\n      i = j;\n    }\n    while (wr < 0) {\n      wr++;\n      let j = free_id++;\n      let k = free_id++;\n      new_entities.push(Xp.make(k, k, i, j));\n      i = j;\n    }\n    entity[idx] = i;\n  }\n  diagram.forEach(entity => {\n    if (entity.constructor === Xp) {\n      maybe_insert_twists(entity, 1);\n      maybe_insert_twists(entity, 2);\n    } else {\n      maybe_insert_twists(entity, 2);\n      maybe_insert_twists(entity, 3);\n    }\n  });\n\n  diagram = diagram.concat(new_entities);\n\n  // Reinsert unknots\n  for (let i = 0; i < n_unknots; i++) {\n    let a = free_id++;\n    diagram.push(P.make(a, a));\n  }\n\n  return diagram;\n}\n\nexport function pd_form_cabling(diagram, cables) {\n  diagram = pd_writhe_normalize(diagram);\n\n  let eliminated = pd_eliminate_paths(diagram);\n  let n_unknots = eliminated.unknots;\n  diagram = eliminated.diagram;\n\n  let free_id = pd_first_free_id(diagram);\n\n  free_id = 1 + cables + cables * free_id;\n  let cabled = PD.make();\n  diagram.forEach(entity => {\n    let idxs = [], endidxs = [];\n    if (entity.constructor === Xp) {\n      for (let i = 0; i < cables; i++) {\n        idxs.push(cables*entity[3] + i);\n        endidxs.push(cables*entity[1] + i);\n      }\n    } else {\n      for (let i = 0; i < cables; i++) {\n        idxs.push(cables*entity[3] + (cables - i - 1));\n        endidxs.push(cables*entity[1] + (cables - i - 1));\n      }\n    }\n\n    for (let j = 0; j < cables; j++) {\n      let c = cables*entity[2] + j;\n      let idxs2 = [];\n      for (let i = 0; i < cables; i++) {\n        let d = idxs[i];\n        let b = j + 1 === cables ? endidxs[i] : free_id++;\n        let a = i + 1 === cables ? cables*entity[0] + j : free_id++;\n        cabled.push(entity.constructor.make(a, b, c, d));\n        idxs2.push(b);\n        c = a;\n      }\n      idxs = idxs2;\n    }\n  });\n\n  // Reinsert unknots\n  for (let i = 0; i < n_unknots * cables; i++) {\n    let a = free_id++;\n    cabled.push(P.make(a, a));\n  }\n\n  return cabled;\n}\n\nexport function pd_renumber(pd) {\n  assert(pd instanceof PD);\n\n  let remap = new Map();\n  let free_id = 0;\n  function get(i) {\n    if (remap.has(i)) {\n      return remap.get(i);\n    } else {\n      let j = free_id++;\n      remap.set(i, j);\n      return j;\n    }\n  }\n\n  return pd.map(entity => entity.map(get));\n}\n\nexport function pd_to_tangle(pd) {\n  /* Open up a PD so that it is a 1-1 tangle.\n     If the PD is empty, returns null.\n     Otherwise, returns `{pd: tangle PD, boundary: [idx1, idx2]}`\n\n     Assumes that the PD is a closed link. */\n  assert(pd instanceof PD);\n\n  if (pd.length === 0) {\n    return null;\n  }\n\n  let idx1 = pd[0][0];\n  let idx2 = pd_first_free_id(pd);\n\n  let pd2 = pd.map(entity => entity.slice());\n  pd2[0][0] = idx2;\n\n  return {\n    pd: pd2,\n    boundary: [idx1, idx2]\n  };\n}\n","import {assert} from \"./util.mjs\";\n\nexport class Point {\n  /* A point in two-dimensional Euclidean space. */\n  constructor (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n  copy() {\n    return new Point(this.x, this.y);\n  }\n  toString() {\n    return \"new Point(\" + this.x + \", \" + this.y + \")\";\n  }\n\n  static equal(p1, p2) {\n    assert(p1 instanceof Point);\n    assert(p2 instanceof Point);\n    return p1.x === p2.x && p1.y === p2.y;\n  }\n\n  static similar(p1, p2, error=1e-10) {\n    /* Checks to see if the points are close to each other, within the\n       given error in each coordinate. */\n    assert(p1 instanceof Point);\n    assert(p2 instanceof Point);\n    return Math.abs(p1.x - p2.x) < error && Math.abs(p1.y - p2.y) < error;\n  }\n\n  static dist(p1, p2) {\n    /* Returns the distance between p1 and p2. */\n    assert(p1 instanceof Point);\n    assert(p2 instanceof Point);\n    var dx = p1.x - p2.x,\n        dy = p1.y - p2.y;\n    return Math.sqrt(dx*dx + dy*dy);\n  }\n\n  static norm_diff(p1, p2) {\n    /* Gives p1 - p2, normalized.  Returns a point even though it\n    should return a vector. Assumes the points are distinct. */\n    assert(p1 instanceof Point);\n    assert(p2 instanceof Point);\n    let dx = p1.x - p2.x,\n        dy = p1.y - p2.y;\n    let norm = Math.sqrt(dx*dx + dy*dy);\n    assert(norm > 0);\n    return new Point(dx/norm, dy/norm);\n  }\n}\n\nexport function calculate_angle(p0, p1, p2) {\n  /* Given segments (p0, p1) and (p0, p2), calculates the angle from p1 to p2. Returns an angle in (-pi,pi].*/\n  assert(p0 instanceof Point);\n  assert(p1 instanceof Point);\n  assert(p2 instanceof Point);\n  let vx = p1.x - p0.x,\n      vy = p1.y - p0.y,\n      wx = p2.x - p0.x,\n      wy = p2.y - p0.y;\n  // Put w into the orthogonal frame given by v\n  let vnorm = Math.sqrt(vx * vx + vy * vy);\n  let x = (vx*wx + vy*wy)/vnorm,\n      y = (-vy*wx + vx*wy)/vnorm;\n  return Math.atan2(y, x);\n}\n\nexport function pseudo_angle(p0, p1) {\n  /* Takes the ray from p0 through p1 and gives an \"angle\" with respect to the x-axis.  The \"angle\" is a monotonically increasing function of angle, and it lies in [0,1). */\n  // Modified from delaunator.js\n  let dx = p1.x - p0.x,\n      dy = p1.y - p0.y;\n  let p = dx / (Math.abs(dx) + Math.abs(dy));\n  return (dy >= 0 ? 1 - p : 3 + p) / 4;\n}\n\nexport function segment_contains_old(p1, p2, q, error=1e-10) {\n  /* Checks if the line segment (p1,p2) contains the point q. Returns a boolean. */\n  assert(!(Point.equal(p1, p2)));\n  assert(q instanceof Point);\n  let vx = p2.x - p1.x,\n      vy = p2.y - p1.y;\n  let wx = q.x - p1.x,\n      wy = q.y - p1.y;\n  let det = -vy*wx + vx*wy;\n  if (Math.abs(det) <= error) {\n    let t = (vx*wx + vy*wy) / (vx*vx + vy*vy);\n    return 0 <= t && t <= 1;\n  } else {\n    return false;\n  }\n}\n\nexport function segment_contains(p1, p2, q, error=1e-10) {\n  return segment_distance(p1, p2, q) <= error;\n}\n\nexport function segment_distance(p1, p2, q) {\n  /* Gives the distance from q to the line segment (p1, p2). */\n  assert(p1 instanceof Point);\n  assert(p2 instanceof Point);\n  assert(q instanceof Point);\n  if (Point.equal(p1, p2)) {\n    return Point.dist(p1, q);\n  }\n  let vx = p2.x - p1.x,\n      vy = p2.y - p1.y;\n  let wx = q.x - p1.x,\n      wy = q.y - p1.y;\n  let norm2 = vx*vx + vy*vy;\n  let t = (vx*wx + vy*wy)/norm2;\n  if (t < 0) {\n    return Point.dist(q, p1);\n  } else if (t > 1) {\n    return Point.dist(q, p2);\n  } else {\n    return Math.abs((-vy*wx + vx*wy)/Math.sqrt(norm2));\n  }\n}\n\nexport function segments_intersect_old(p1, p2, q1, q2) {\n  /* Checks if the line segments (p1,p2) and (q1,q2) intersect.\n     Returns the intersection point if they do intersect. */\n\n  // Thanks to Josh Horowitz, from his Knot Identification Tool\n  // https://github.com/joshuahhh/knot-identification-tool/\n  assert(p1 instanceof Point);\n  assert(p2 instanceof Point);\n  assert(q1 instanceof Point);\n  assert(q2 instanceof Point);\n\n  if (Point.equal(p1, q1) || Point.equal(p1, q2)) {\n    return p1;\n  } else if (Point.equal(p2, q1) || Point.equal(p2, q2)) {\n    return p2;\n  }\n\n  let det = (p1.x-p2.x)*(q1.y-q2.y)-(p1.y-p2.y)*(q1.x-q2.x);\n  if (det === 0) {\n    return null;\n  }\n  let xi = ((p1.x*p2.y-p1.y*p2.x)*(q1.x-q2.x)-(p1.x-p2.x)*(q1.x*q2.y-q1.y*q2.x))/det;\n  if (((p1.x <= xi && xi <= p2.x) || (p2.x <= xi && xi <= p1.x)) &&\n      ((q1.x <= xi && xi <= q2.x) || (q2.x <= xi && xi <= q1.x))) {\n    let yi = ((p1.x*p2.y-p1.y*p2.x)*(q1.y-q2.y)-(p1.y-p2.y)*(q1.x*q2.y-q1.y*q2.x))/det;\n    if (((p1.y <= yi && yi <= p2.y) || (p2.y <= yi && yi <= p1.y)) &&\n        ((q1.y <= yi && yi <= q2.y) || (q2.y <= yi && yi <= q1.y))) {\n      return new Point(xi, yi);\n    }\n  }\n  return null;\n}\n\nexport function lines_intersect(p1, p2, q1, q2) {\n  /* Checks if the lines given by the segments (p1,p2) and (q1,q2) intersect.\n     Returns the intersection point if they do intersect. */\n  assert(p1 instanceof Point);\n  assert(p2 instanceof Point);\n  assert(q1 instanceof Point);\n  assert(q2 instanceof Point);\n\n  let a = p1, b = p2,\n      c = q1, d = q2;\n\n  let det = (a.x-b.x)*(c.y-d.y) - (a.y-b.y)*(c.x-d.x);\n  if (det === 0) {\n    return null;\n  }\n  let d1 = a.x*b.y - a.y*b.x,\n      d2 = c.x*d.y - c.y*d.x;\n  let pt = new Point((d1*(c.x-d.x) - d2*(a.x-b.x)) / det,\n                     (d1*(c.y-d.y) - d2*(a.y-b.y)) / det);\n\n  return pt;\n}\n\nexport function segments_intersect(p1, p2, q1, q2, epsilon=1e-10) {\n  let pt = lines_intersect(p1, p2, q1, q2);\n  if (!pt || segment_distance(p1, p2, pt) > epsilon || segment_distance(q1, q2, pt) > epsilon) {\n    return null;\n  } else {\n    return pt;\n  }\n}\n\nexport function point_along(p1, p2, t) {\n  /* Given a line parameterized so that t=0 is p1 and t=1 is p2,\n     returns the point corresponding to t. */\n  assert(p1 instanceof Point);\n  assert(p2 instanceof Point);\n  return new Point((1-t)*p1.x + t*p2.x,\n                   (1-t)*p1.y + t*p2.y);\n}\n\nexport function* line_points(p1, p2) {\n  /* Bresenham line drawing algorithm. Returns a generator of Points\n     from p1 to p2.  The coordinates of these points are expected to\n     be integers. */\n  assert(p1 instanceof Point);\n  assert(p2 instanceof Point);\n  \n  var x1 = p1.x, y1 = p1.y,\n      x2 = p2.x, y2 = p2.y;\n  var dx = Math.abs(x2-x1),\n      sx = x1 < x2 ? 1 : -1,\n      dy = -Math.abs(y2-y1),\n      sy = y1 < y2 ? 1 : -1;\n  var err = dx+dy;\n\n  while (true) {\n    yield new Point(x1, y1);\n    if (x1 === x2 && y1 === y2) break;\n    var e2 = 2*err;\n    if (e2 >= dy) { err += dy; x1 += sx; }\n    if (e2 <= dx) { err += dx; y1 += sy; }\n  }\n}\n","import {assert, remove_value, toString, compare} from \"./util.mjs\";\nimport {Laurent} from \"./laurent.mjs\";\nimport {Point, segments_intersect} from \"./geom2d.mjs\";\nimport {PD,P,X,Xp,Xm,Virtual} from \"./pd.mjs\";\n\nexport class KnotGraph {\n  constructor(verts, edges, adjs) {\n    this.verts = verts; // [Point,...]\n    this.edges = edges; // [[vtx id, vtx id, comp],...]\n    this.adjs = adjs; // [P or X,...] where the P and X objects contain dart ids\n    // a dart is edgeid+1 or -edgeid-1 depending on which side the edge is\n  }\n\n  copy() {\n    return new KnotGraph(\n      this.verts.map(pt => pt.copy()),\n      this.edges.map(edge => edge.slice()),\n      this.adjs.map(list => list.slice())\n    );\n  }\n\n  consistency_check() {\n    assert(this.verts.length === this.adjs.length);\n    assert(this.verts.every(p => p instanceof Point));\n    assert(this.edges.every(e => e.length >= 3));\n    assert(this.adjs.every(a => a instanceof P || a instanceof X || a instanceof Virtual));\n\n    let seen_darts = new Set();\n    this.adjs.forEach(adj => {\n      adj.forEach(dart => {\n        assert(dart !== 0);\n        assert(Math.abs(dart) - 1 < this.edges.length);\n        seen_darts.add(dart);\n      });\n    });\n    assert(seen_darts.size === 2 * this.edges.length);\n\n    this.edges.forEach((edge, eid) => {\n      assert(0 <= edge[0] && edge[0] < this.verts.length);\n      assert(0 <= edge[1] && edge[1] < this.verts.length);\n      if (this.adjs[edge[0]].includes(eid + 1)) {\n        assert(this.adjs[edge[1]].includes(-eid - 1));\n      } else if (this.adjs[edge[0]].includes(-eid - 1)) {\n        assert(this.adjs[edge[1]].includes(eid + 1));\n      } else {\n        assert(false);\n      }\n    });\n  }\n  \n  ensure_orientation() {\n    /* Goes through edges and makes sure they are oriented so that\n       [dart_start, dart_end] are the two vertices. The first edge in\n       the edge list determines the orientation if there is a\n       discrepancy. */\n    let seen_darts = new Set();\n    this.edges.forEach((edge, eid) => {\n      if (seen_darts.has(eid+1) || seen_darts.has(-eid-1)) {\n        return;\n      }\n      let dart = eid + 1;\n      let d = dart;\n      do {\n        seen_darts.add(d);\n        seen_darts.add(-d);\n        let curr_edge = this.dart_edge(d);\n        if (this.dart_start(d) !== curr_edge[0]) {\n          d = -d;\n\n          // swap vertices on edge\n          [curr_edge[0], curr_edge[1]] = [curr_edge[1], curr_edge[0]];\n\n          // swap darts in adj\n          let adj, idx;\n          adj = this.adjs[curr_edge[0]];\n          idx = adj.indexOf(-d);\n          assert(idx >= 0);\n          adj[idx] = d;\n          \n          adj = this.adjs[curr_edge[1]];\n          idx = adj.indexOf(d);\n          assert(idx >= 0);\n          adj[idx] = -d;\n\n          assert(this.dart_start(d) === curr_edge[0]);\n        }\n        d = this.through_dart(d);\n      } while (d !== dart);\n    });\n    //console.log(\"seen darts \" + seen_darts.size);\n    //console.log(\"edges \" + this.edges.length);\n    this.consistency_check();\n  }\n  \n  reverse_orientation(dart_id) {\n    /* Reverses the orientation of the entire component given by\n       dart_id.  Assumes the diagram is already oriented. */\n    let circuit = this.dart_circuit(dart_id);\n    circuit.forEach(dart => {\n      let edge = this.dart_edge(dart);\n      // edge[0] is dart_start, by assumption\n      \n      // swap vertices on edge\n      [edge[0], edge[1]] = [edge[1], edge[0]];\n\n      // swap darts in adj\n      let adj, idx;\n      adj = this.adjs[edge[1]];\n      idx = adj.indexOf(dart);\n      assert(idx >= 0);\n      adj[idx] = -dart;\n\n      adj = this.adjs[edge[0]];\n      idx = adj.indexOf(-dart);\n      assert(idx >= 0);\n      adj[idx] = dart;\n    });\n    this.consistency_check();\n  }\n  \n  make_alternating() {\n    /* Changes crossings to make this into an alternating\n       diagram. Assumes the diagram is oriented.  Leaves an\n       already-alternating diagram alone. */\n    let seen_edges = [];\n    let to_see = [];\n    let visit_edges = () => {\n      while (to_see.length) {\n        let eid = to_see.pop();\n        if (!seen_edges[eid]) {\n          let sign = null;\n          this.dart_circuit(eid + 1).forEach(dart => {\n            seen_edges[Math.abs(dart) - 1] = true;\n            let vid = this.dart_start(dart);\n            let this_sign = this.adjs[vid].indexOf(dart) % 2 === 0;\n            if (this.adjs[vid] instanceof X) {\n              this.adjs[vid].forEach(dart => to_see.push(Math.abs(dart) - 1));\n              if (sign === this_sign) {\n                this.adjs[vid].push(this.adjs[vid].shift()); // rotate crossing\n                this_sign = !this_sign;\n              }\n              sign = this_sign;\n            }\n          });\n        }\n      }\n    };\n    for (let i = 0; i < this.edges.length; i++) {\n      if (!seen_edges[i]) {\n        to_see.push(i);\n        visit_edges();\n      }\n    }\n    this.consistency_check();\n  }\n\n  is_alternating() {\n    /* Returns whether this is an alternating diagram.  Assumes the diagram is oriented. */\n    let seen_edges = [];\n    for (let eid = 0; eid < this.edges.length; eid++) {\n      if (!seen_edges[eid]) {\n        let sign = null;\n        let circ = this.dart_circuit(eid + 1);\n        for (let di = 0; di < circ.length; di++) {\n          let dart = circ[di];\n          seen_edges[Math.abs(dart) - 1] = true;\n          let vid = this.dart_start(dart);\n          let this_sign = this.adjs[vid].indexOf(dart) % 2 === 0;\n          if (this.adjs[vid] instanceof X) {\n            if (sign === this_sign) {\n              // Not alternating\n              return false;\n            }\n            sign = this_sign;\n          }\n        }\n      }\n    }\n    return true;\n  }\n\n  bridge_number() {\n    /* Returns the bridge number (in the classical sense: the number\n       of arcs that are everywhere-over) of the diagram.  Assumes the\n       diagram is oriented. Split unknotted loops have bridge number 1. */\n    let seen_edges = [];\n    let bridges = 0;\n    for (let eid = 0; eid < this.edges.length; eid++) {\n      if (!seen_edges[eid]) {\n        let dart = eid + 1;\n        let circ = this.dart_circuit(eid + 1);\n        circ.forEach(d => {\n          seen_edges[Math.abs(d) - 1] = true;\n        });\n        if (circ.every(d => this.dart_adj(d) instanceof P || this.dart_adj(d) instanceof Virtual)) {\n          bridges++;\n        } else {\n          circ = circ.filter(d => this.dart_adj(d) instanceof X);\n          let j = 0;\n          while (j < circ.length && this.dart_is_over(circ[j])) {\n            j++;\n          }\n          if (j === circ.length) {\n            // this was an unknot on top of the diagram\n            bridges++;\n            continue;\n          }\n          for (let i = 0; i < circ.length;) {\n            let k = (i + j) % circ.length;\n            assert(!this.dart_is_over(circ[k]));\n            let cr = 0;\n            while(true) {\n              i++;\n              k = (i + j) % circ.length;\n              if (!this.dart_is_over(circ[k])) {\n                break;\n              }\n              cr++;\n            }\n            if (cr > 0) {\n              bridges++;\n            }\n          }\n        }\n      }\n    }\n    return bridges;\n  }\n  \n  auto_color(max_colors) {\n    /* Assigns colors to the components in an arbitrary order */\n    assert(max_colors > 0);\n    let next_color = 0;\n    let seen = new Array(this.edges.length);\n    for (let eid = 0; eid < this.edges.length; eid++) {\n      if (!seen[eid]) {\n        let color = (next_color++) % max_colors;\n        this.dart_circuit(eid + 1).forEach(dart => {\n          let deid = Math.abs(dart) - 1;\n          seen[deid] = true;\n          this.edges[deid][2] = color + 1;\n        });\n      }\n    }\n  }\n  \n  delete_component(dart_id) {\n    /* Deletes the entire component containing the given dart. Assumes\n       the diagram is oriented.*/\n    let edge_ids = this.dart_circuit(dart_id).map(dart => Math.abs(dart) - 1);\n    // remove edges and vertices from the graph by setting them to null, then compact\n    edge_ids.forEach(eid => {\n      let edge = this.edges[eid];\n      remove_value(this.adjs[edge[0]], eid+1);\n      remove_value(this.adjs[edge[0]], -eid-1);\n      remove_value(this.adjs[edge[1]], eid+1);\n      remove_value(this.adjs[edge[1]], -eid-1);\n      this.edges[eid] = null;\n    });\n    this.compact();\n  }\n  \n  compact() {\n    /* The edge and vertex lists are allowed to have nulls.  Deletes\n       any degree-0 vertices, and renumbers everything so there are no\n       nulls. */\n    let newverts = [];\n    for (let i = 0; i < this.verts.length; i++) {\n      if (this.adjs[i] && this.adjs[i].length === 0) {\n        this.verts[i] = null;\n      } else if (this.verts[i] !== null) {\n        let new_vid = newverts.length;\n        newverts.push(this.verts[i]);\n        this.verts[i] = new_vid; // store forwarding pointer\n      }\n    }\n    let newedges = [];\n    for (let i = 0; i < this.edges.length; i++) {\n      let edge = this.edges[i];\n      if (edge !== null) {\n        let new_eid = newedges.length;\n        this.edges[i] = new_eid; // store forwarding pointer\n        newedges.push([this.verts[edge[0]], this.verts[edge[1]], edge[2]]);\n      }\n    }\n    let newadjs = [];\n    for (let i = 0; i < this.verts.length; i++) {\n      let adj = this.adjs[i];\n      if (this.verts[i] !== null) {\n        let adj2 = [];\n        adj.forEach(dart => {\n          let fwd = this.edges[Math.abs(dart)-1];\n          if (fwd !== null) {\n            adj2.push(Math.sign(dart) * (fwd + 1));\n          }\n        });\n        if (adj2.length === 2) {\n          newadjs.push(P.make(...adj2));\n        } else {\n          newadjs.push(adj.constructor.make(...adj2));\n        }\n      }\n    }\n    this.verts = newverts;\n    this.edges = newedges;\n    this.adjs = newadjs;\n    this.consistency_check();\n  }\n\n  dart_start(dart_id) {\n    /* Takes a dart id and returns a vertex id. */\n    return this.dart_edge(dart_id)[dart_id > 0 ? 0 : 1];\n  }\n  dart_end(dart_id) {\n    /* Takes a dart id and returns a vertex id. */\n    assert(typeof dart_id === \"number\");\n    return this.dart_edge(dart_id)[dart_id > 0 ? 1 : 0];\n  }\n  dart_edge(dart_id) {\n    /* Takes a dart id and returns its underlying edge object. */\n    assert(typeof dart_id === \"number\");\n    return this.edges[Math.abs(dart_id)-1];\n  }\n  dart_adj(dart_id) {\n    return this.adjs[this.dart_start(dart_id)];\n  }\n  dart_order(dart_id) {\n    /* Takes a dart id and returns the number of incident darts at its vertex. */\n    return this.dart_adj(dart_id).length;\n  }\n  dart_is_over(dart_id) {\n    /* Assuming the dart id is for a dart at a crossing, gives whether the dart is part of the over-strand. */\n    assert(typeof dart_id === \"number\");\n    let adj = this.adjs[this.dart_start(dart_id)];\n    assert(adj instanceof X);\n    let idx = adj.indexOf(dart_id);\n    assert(idx >= 0);\n    return (idx % 2) === 1;\n  }\n  next_dart(dart_id) {\n    /* Takes a dart id and returns the next dart in counter-clockwise\n       order about its vertex. */\n    assert(typeof dart_id === \"number\");\n    let adj = this.adjs[this.dart_start(dart_id)];\n    let idx = adj.indexOf(dart_id);\n    assert(idx >= 0);\n    return adj[(idx + 1) % adj.length];\n  }\n  prev_dart(dart_id) {\n    /* Takes a dart id and returns the previous dart in counter-clockwise\n       order about its vertex. */\n    assert(typeof dart_id === \"number\");\n    let adj = this.adjs[this.dart_start(dart_id)];\n    let idx = adj.indexOf(dart_id);\n    assert(idx >= 0);\n    return adj[(idx + adj.length - 1) % adj.length];\n  }\n  opp_dart(dart_id) {\n    /* Takes a dart id and returns the other dart on its edge. */\n    assert(typeof dart_id === \"number\");\n    assert(dart_id !== 0 && Math.abs(dart_id) <= this.edges.length);\n    return -dart_id;\n  }\n  dart_oriented(dart_id) {\n    /* Returns whether this dart is pointing in the orientation of its circuit. */\n    let edge = this.dart_edge(dart_id);\n    return this.dart_start(dart_id) === edge[0];\n  }\n  through_dart(dart_id) {\n    /* Takes a dart id and returns the next dart in a circuit. */\n    let d = this.opp_dart(dart_id);\n    switch (this.dart_order(d)) {\n    case 2:\n      return this.next_dart(d);\n    case 4:\n      return this.next_dart(this.next_dart(d));\n    default:\n      throw new Error(\"Unexpected dart order\");\n    }\n  }\n  dart_circuit(dart_id) {\n    /* Takes a dart id and returns the circuit of darts, using through_dart. */\n    let path = [];\n    let d = dart_id;\n    do {\n      path.push(d);\n      d = this.through_dart(d);\n    } while (d !== dart_id);\n    return path;\n  }\n  dart_face(dart_id) {\n    /* Takes a dart id and returns the darts that comprise a face of the ribbon graph\n       associated to the (virtual) knot diagram */\n    let path = [];\n    let d = dart_id;\n    do {\n      path.push(d);\n      d = this.opp_dart(d);\n      if (this.dart_adj(d) instanceof Virtual) {\n        d = this.next_dart(this.next_dart(d));\n      } else {\n        d = this.next_dart(d);\n      }\n    } while (d !== dart_id);\n    return path;\n  }\n\n  crossing_number() {\n    let num = 0;\n    this.adjs.forEach(a => {\n      if (a instanceof X) {\n        num++;\n      }\n    });\n    return num;\n  }\n\n  virtual_crossing_number() {\n    // the number of virtual crossings in this diagram\n    let num = 0;\n    this.adjs.forEach(a => {\n      if (a instanceof Virtual) {\n        num++;\n      }\n    });\n    return num;\n  }\n\n  writhe() {\n    /* Gives the total writhe of the diagram. */\n    let wr = 0;\n    this.adjs.forEach((a, vi) => {\n      if (a instanceof X) {\n        if (this.dart_oriented(a[1]) === this.dart_oriented(a[2])) {\n          wr += 1;\n        } else {\n          wr -= 1;\n        }\n      }\n    });\n    return wr;\n  }\n\n  linking_matrix() {\n    /* Gives the linking numbers between different colored components\n       as a matrix.  The diagonal is the writhe of that colored\n       component. */\n    let matrix = new Map();\n    function ensure_component(c) {\n      if (!matrix.has(c)) {\n        matrix.set(c, new Map());\n        matrix.get(c).set(c, 0);\n      }\n    }\n    function inc(c1, c2, delta) {\n      let m1 = matrix.get(c1);\n      m1.set(c2, (m1.get(c2)||0) + delta);\n      let m2 = matrix.get(c2);\n      m2.set(c1, (m2.get(c1)||0) + delta);\n    }\n    this.adjs.forEach((a, vi) => {\n      if (a instanceof P) {\n        let c = this.dart_edge(a[0])[2];\n        ensure_component(c);\n      } else if (a instanceof Virtual) {\n        let c1 = this.dart_edge(a[1])[2],\n            c2 = this.dart_edge(a[2])[2];\n        ensure_component(c1);\n        ensure_component(c2);\n      } else if (a instanceof X) {\n        // recall: a[0] is dart for undercrossing\n        //  a[2] \\ / a[1]\n        //        /\n        //  a[3] / \\ a[0]\n        let c1 = this.dart_edge(a[1])[2],\n            c2 = this.dart_edge(a[2])[2];\n        ensure_component(c1);\n        ensure_component(c2);\n        if (this.dart_oriented(a[1]) === this.dart_oriented(a[2])) {\n          // so the crossing is positive\n          inc(c1, c2, 1/2);\n        } else {\n          inc(c1, c2, -1/2);\n        }\n      } else {\n        assert(false);\n      }\n    });\n    return matrix;\n  }\n\n  num_components() {\n    // Assumes edges are properly oriented\n    let seen_darts = new Set();\n    let n = 0;\n    for (let edge_i = 0; edge_i < this.edges.length; edge_i++) {\n      if (seen_darts.has(edge_i)) {\n        continue;\n      }\n      n++;\n      this.dart_circuit(edge_i + 1).forEach(dart => {\n        seen_darts.add(dart);\n        seen_darts.add(-dart);\n      });\n    }\n    return n;\n  }\n\n  seifert_circuit(dart) {\n    /* Gives the Seifert circuit through the dart. */\n    let circuit = [];\n    let d = dart;\n    do {\n      circuit.push(d);\n      d = this.opp_dart(d);\n      if (this.dart_adj(d) instanceof P) {\n        d = this.next_dart(d);\n      } else if (this.dart_adj(d) instanceof Virtual) {\n        d = this.next_dart(this.next_dart(d));\n      } else {\n        assert(this.dart_adj(d) instanceof X);\n        if (this.dart_oriented(d) === this.dart_oriented(this.next_dart(d))) {\n          d = this.prev_dart(d);\n        } else {\n          d = this.next_dart(d);\n        }\n      }\n    } while (d !== dart);\n    return circuit;\n  }\n\n  genus() {\n    /* The canonical Seifert genus of this particular diagram. For\n       split diagrams, it is the sum of the genera of each component. */\n\n    assert(this.virtual_genus() === 0);\n\n    let seen_darts = new Set();\n\n    let component_faces = (start_dart) => {\n      let nfaces = 0;\n      let to_see = [start_dart];\n      while (to_see.length > 0) {\n        let dart = to_see.pop();\n        if (seen_darts.has(dart)) {\n          continue;\n        }\n        nfaces++;\n        this.seifert_circuit(dart).forEach(d => {\n          to_see.push(...this.adjs[this.dart_start(d)]);\n          seen_darts.add(d);\n          seen_darts.add(this.opp_dart(d));\n        });\n      }\n      return nfaces;\n    };\n\n    let b_0 = 0;\n    let nfaces = 0;\n    for (let edge_i = 0; edge_i < this.edges.length; edge_i++) {\n      if (!seen_darts.has(edge_i + 1)) {\n        b_0++;\n        nfaces += component_faces(edge_i + 1);\n      }\n    }\n    return b_0 - (nfaces - this.crossing_number() + this.num_components())/2;\n  }\n\n  num_diagram_components() {\n    /* The number of disconnected components of the diagram */\n    let seen_verts = new Set;\n    let b_0 = 0;\n    for (let vid = 0; vid < this.verts.length; vid++) {\n      if (!seen_verts.has(vid)) {\n        b_0++;\n        let to_see = [vid];\n        while (to_see.length > 0) {\n          let vid2 = to_see.pop();\n          if (seen_verts.has(vid2)) {\n            continue;\n          }\n          seen_verts.add(vid2);\n          this.adjs[vid2].forEach(dart => {\n            to_see.push(this.dart_end(dart));\n          });\n        }\n      }\n    }\n    return b_0;\n  }\n\n  virtual_genus() {\n    /* Gives the virtual genus of this particular diagram. Classical\n       knot diagrams have virtual genus 0.  The virtual genus of a\n       virtual knot is the minimum of the virtual genus of all\n       diagrams. */\n    let seen_darts = new Set();\n\n    let nfaces = 0;\n    for (let edge_i = 0; edge_i < this.edges.length; edge_i++) {\n      if (!seen_darts.has(edge_i + 1)) {\n        nfaces++;\n        this.dart_face(edge_i + 1).forEach(dart => seen_darts.add(dart));\n      }\n      if (!seen_darts.has(-edge_i - 1)) {\n        nfaces++;\n        this.dart_face(-edge_i - 1).forEach(dart => seen_darts.add(dart));\n      }\n    }\n    return this.num_diagram_components() - (nfaces - this.crossing_number())/2;\n  }\n\n  seifert_form() {\n    /* Gives the Seifert linking form of the diagram with respect to\n       some basis.  This is represented as [matrix, matrix, ...] with\n       one matrix per connected component of the diagram, where\n       together these form a block diagonal matrix. It should be\n       understood that the full linking form has in additional c-1\n       extra 0's on the diagonal (where c is the number of diagram\n       components), since a Seifert surface should be connected. */\n\n    let seen_edges = new Array(this.edges.length); // contains corresp. circuit ids\n    seen_edges.fill(-1);\n    let next_circuit_id = 0;\n    function circuit_id(edge_id) {\n      if (seen_edges[edge_id] === -1) {\n        return (seen_edges[edge_id] = next_circuit_id++);\n      } else {\n        return seen_edges[edge_id];\n      }\n    }\n\n    let visit_component = (start_edge) => {\n\n      // the first part is constructing a Seifert surface for this component.\n      // the meaning of circuits and twists will be described after it is constructed\n\n      let to_see = [start_edge]; // [edge_id, ...]\n\n      let circuits = new Map();\n      let twists = [];\n\n      function twist_id(edge1, edge2, x) {\n        for (let i = 0; i < twists.length; i++) {\n          let tw = twists[i];\n          if (tw[1] === edge1 && tw[2] === edge2) {\n            assert(x === tw[3]);\n            return tw[0];\n          }\n        }\n        let id = twists.length;\n        twists.push([id, edge1, edge2, x]);\n        return id;\n      }\n\n      while (to_see.length > 0) {\n        let eid = to_see.pop();\n        if (seen_edges[eid] !== -1) {\n          continue;\n        }\n        let circ_id = circuit_id(eid);\n        let circuit = this.seifert_circuit(eid + 1);\n        circuit.forEach(d => {\n          assert(d > 0);\n          seen_edges[d - 1] = circ_id;\n        });\n        circuit = circuit.filter(d => this.dart_adj(d) instanceof X);\n        let circuit_adj = [];\n        circuits.set(circ_id, circuit_adj);\n        circuit.forEach(d => {\n          let eid1 = d - 1;\n          let adj = this.adjs[this.dart_start(d)];\n          let i = adj.indexOf(d);\n          let eid2, x, front;\n          if (this.dart_oriented(this.next_dart(d))) {\n            eid2 = this.next_dart(d) - 1;\n            x = 1 - 2 * (i % 2);\n            front = false;\n          } else {\n            eid2 = this.prev_dart(d) - 1;\n            x = 2 * (i % 2) - 1;\n            front = true;\n          }\n          assert(eid2 >= 0);\n          to_see.push(eid2);\n          if (front) {\n            let tw = twist_id(eid1, eid2, x);\n            circuit_adj.push(tw+1);\n          } else {\n            let tw = twist_id(eid2, eid1, x);\n            circuit_adj.push(-tw-1);\n          }\n        });\n      }\n\n      // replace edge ids with the correct circuit ids\n      twists.forEach(twist => {\n        twist[1] = seen_edges[twist[1]];\n        twist[2] = seen_edges[twist[2]];\n      });\n\n      // Consider an oriented ribbon graph in upper half space that is\n      // sort-of-planar in the following way.  Each vertex is an\n      // oriented rectangular strip that is perpendicularly incident\n      // along the long side to the boundary plane, and along this\n      // side, edge strips meet it either in the front or the back\n      // with respect to its orientation.  Then, since this is a\n      // Seifert surface from Seifert's algorithm, edges have a half\n      // twist somewhere along their length; this means edges meet one\n      // vertex in the front and one vertex in the back, to preserve\n      // orientation.\n      //\n      // We represent this as follows.\n      //\n      // The vertices are stored in\n      //    circuits : circ_id => [dart, ...]\n      // where a dart is eid + 1 or -eid - 1 depending on whether the\n      // edge is incident to the front or the back of the vertex.  The\n      // orientation of the vertex is given by the convention in the\n      // following picture:\n      //\n      //  back   front\n      //       ^\n      //       |-- d4\n      //  d3 --|\n      //  d2 --|\n      //       |-- d1\n      //       |-- d0\n      //       |\n      //    vertex\n      //\n      // Edges are stored in\n      //    twists : list of [eid, circ_id1, circ_id2, x:{-1,1}]\n      // where the twist is in front of circ_id1 and behind circ_id2,\n      // and where x is the sign of the twist.\n      //\n      // What hasn't been explained is exactly why this is the result\n      // of Seifert's algorithm.  Here is what to imagine: we have\n      // \"cut\" each Seifert circuit by isotoping a small interval of\n      // the Seifert disk away from the plane of the diagram.  That\n      // is, each circuit represents an oriented rectangle with one\n      // edge embedded in the plane of the diagram, and each ribbon is\n      // attached somewhere along the length of this edge.\n      //\n      // (This is a reason why Seifert graphs are planar as abstract\n      // graphs.)\n\n\n      // Now we compute a basis for H_1, represented by the edges in cross_edges\n\n      if (0) {\n        circuits = new Map;\n        circuits.set(0, [-1, -2]);\n        circuits.set(1, [2, -3, 1, -4]);\n        circuits.set(2, [4, 3]);\n        twists = [[0, 1, 0, -1], [1, 1, 0, -1], [2, 2, 1, 1], [3, 2, 1, 1]];\n      }\n\n      let tree = new Map; // circuit_id -> (dart_id | null).  null means root\n      tree.set(twists[0][1], null);\n      let to_visit = twists.slice();\n      let cross_edges = [];\n      while (to_visit.length > 0) {\n        let twist;\n        for (let i = 0; i < to_visit.length; i++) {\n          twist = to_visit[i];\n          if (tree.has(twist[1]) || tree.has(twist[2])) {\n            to_visit.splice(i, 1);\n            break;\n          }\n        }\n        assert(twist);\n        if (tree.has(twist[1]) && tree.has(twist[2])) {\n          cross_edges.push(twist);\n        } else if (tree.has(twist[1])) {\n          tree.set(twist[2], -twist[0]-1);\n        } else {\n          tree.set(twist[1], twist[0]+1);\n        }\n      }\n\n      // Next is to compute the cycles corresponding to the cross_edge\n      // representations, and then to convert this into a form that is\n      // convenient for computing the Seifert pairing.\n\n      function find_twist(id) {\n        for (let i = 0; i < twists.length; i++) {\n          if (twists[i][0] === id) {\n            return twists[i];\n          }\n        }\n        return assert(false);\n      }\n\n      function cycle(cross_edge) {\n        // path is [[same_orientation, edge], ...] for the cycle\n        let path = [[true, cross_edge]];\n        let cid;\n        cid = cross_edge[1];\n        while (tree.get(cid) !== null) {\n          let dart = tree.get(cid);\n          let twist = find_twist(Math.abs(dart) - 1);\n          path.unshift([dart < 0, twist]);\n          cid = twist[1 + (dart > 0)];\n        }\n        cid = cross_edge[2];\n        while (tree.get(cid) !== null) {\n          let dart = tree.get(cid);\n          let twist = find_twist(Math.abs(dart) - 1);\n          path.push([dart > 0, twist]);\n          cid = twist[1 + (dart > 0)];\n        }\n        // remove backtracking from the tree part\n        while (path[0][1][0] === path[path.length-1][1][0]) {\n          path.pop();\n          path.shift();\n        }\n        // now all edge ids are distinct\n        return path;\n      }\n\n      //cross_edges.forEach(ce => console.log(toString(cycle(ce))));\n      \n      function make_vector(cycle) {\n        // the cycle is as in the output of cycle()\n        let edges = []; // list of [eid, x, oriented]\n        let verts = []; // list of [vid, from_idx, front, to_idx, front]\n        for (let i = 0; i < cycle.length; i++) {\n          let [ori1, edge1] = cycle[i],\n              [ori2, edge2] = cycle[(i+1) % cycle.length];\n          edges.push([edge1[0], edge1[3], ori1]);\n\n          let vtx = edge1[1 + ori1];\n          let adj = circuits.get(vtx);\n          let dart1 = ori1 ? -edge1[0]-1 : edge1[0]+1,\n              dart2 = ori2 ? edge2[0]+1 : -edge2[0]-1;\n          let from = adj.indexOf(dart1),\n              to = adj.indexOf(dart2);\n          assert(from !== -1 && to !== -1);\n          verts.push([vtx, from, dart1 > 0, to, dart2 > 0]);\n        }\n        return {edges:edges, verts:verts};\n      }\n\n      //cross_edges.forEach(ce => console.log(make_vector(cycle(ce))));\n\n      function linking(vect1, vect2) {\n        // vect2 is pushed off\n        // count linking of vect2 over vect1\n        let link = 0;\n        vect1.edges.forEach(edge1 => {\n          let [eid, x, ori1] = edge1;\n          vect2.edges.forEach(edge2 => {\n            if (eid === edge2[0]) {\n              let ori2 = edge2[2];\n              if (x > 0) {\n                link += 2 * (ori1 === ori2) - 1;\n              }\n            }\n          });\n        });\n        vect1.verts.forEach(vert1 => {\n          let [vtx, from1, from1_front, to1, to1_front] = vert1;\n          vect2.verts.forEach(vert2 => {\n            if (vtx === vert2[0]) {\n              let [_, from2, from2_front, to2, to2_front] = vert2;\n\n              let ori1 = 1;\n              if (from1 > to1) {\n                ori1 = -1;\n                [from1, from1_front, to1, to1_front] = [to1, to1_front, from1, from1_front];\n              }\n              let ori2 = 1;\n              if (from2 > to2) {\n                ori2 = -1;\n                [from2, from2_front, to2, to2_front] = [to2, to2_front, from2, from2_front];\n              }\n\n              if (from1_front && (from2 < from1 && from1 <= to2)) {\n                link += ori1 * ori2;\n              }\n              if (to1_front && (from2 < to1 && to1 <= to2)) {\n                link -= ori1 * ori2;\n              }\n            }\n          });\n        });\n        return link;\n      }\n\n      let vecs = cross_edges.map(ce => make_vector(cycle(ce)));\n\n      let matrix = vecs.map(v1 => vecs.map(v2 => linking(v1, v2)));\n      console.log(toString(matrix));\n\n      return matrix;\n    };\n\n\n    let matrices = [];\n    for (let edge_i = 0; edge_i < this.edges.length; edge_i++) {\n      if (this.dart_adj(edge_i + 1) instanceof X && seen_edges[edge_i] === -1) {\n        matrices.push(visit_component(edge_i));\n      }\n    }\n    // Will be missing trivial unknot diagram components\n    for (let edge_i = 0; edge_i < this.edges.length; edge_i++) {\n      let adj = this.dart_adj(edge_i + 1);\n      if ((adj instanceof P || adj instanceof Virtual) && seen_edges[edge_i] === -1) {\n        matrices.push([]);\n        this.dart_circuit(edge_i + 1).forEach(dart => {\n          seen_edges[Math.abs(dart) - 1] = true;\n        });\n      }\n    }\n    return matrices;\n  }\n\n  turaev() {\n    /* Returns {genus:g, plus:p, minus:m} where g is the Turaev genus\n       of the diagram and p and m are whether the diagram is\n       plus-adequate and minus-adequate, respectively. */\n\n    assert(this.virtual_genus() === 0);\n\n    let seen_darts = new Set();\n\n    let b_0 = 0;\n    let n_faces = 0;\n    let plus = true, // still plus-adequate\n        minus = true; // still minus-adequate\n    for (let edge_i = 0; edge_i < this.edges.length; edge_i++) {\n      if (!seen_darts.has(edge_i + 1)) {\n        b_0++;\n\n        let to_see = [[edge_i + 1, false]]; // [[dart, is_black], ...]\n        while (to_see.length > 0) {\n          let [dart, is_black] = to_see.pop();\n          if (seen_darts.has(dart)) {\n            continue;\n          }\n          n_faces++;\n          // walk the Turaev face corresponding to the dart\n          let face_fringe = new Set();\n          let d = dart;\n          do {\n            if (face_fringe.has(d)) {\n              if (is_black) {\n                plus = false;\n              } else {\n                minus = false;\n              }\n            }\n\n            {\n              // Add adjacent darts to to_see, using checkerboard coloring\n              let color = is_black;\n              let adj_d = d;\n              do {\n                color = !color;\n                adj_d = this.next_dart(adj_d);\n                to_see.push([adj_d, color]);\n              } while (d !== adj_d);\n            }\n            seen_darts.add(d);\n            d = this.opp_dart(d);\n            let adj = this.adjs[this.dart_start(d)];\n            if (adj instanceof P) {\n              d = this.next_dart(d);\n            } else if (adj instanceof Virtual) {\n              d = this.next_dart(this.next_dart(d));\n            } else {\n              assert(adj instanceof X);\n              if ((adj.indexOf(d) % 2 === 0) === is_black) {\n                d = this.next_dart(d);\n              } else {\n                d = this.prev_dart(d);\n              }\n\n              adj.forEach(adj_d => {\n                if (d !== adj_d) {\n                  face_fringe.add(adj_d);\n                  face_fringe.add(this.opp_dart(adj_d));\n                }\n              });\n            }\n          } while (d !== dart);\n        }\n      }\n    }\n    return {genus: b_0 + (this.crossing_number() - n_faces)/2,\n            plus: plus,\n            minus: minus};\n  }\n\n  get_pd(oriented=false) {\n    /* Gets an unoriented/oriented PD object.\n\n       Chooses edge ids in ascending order of component. Makes sure a -> c is the orientation.\n       If oriented=true, then Xr/Xl are used to determine the orientation of b--d.\n    */\n    let dart_arc = new Map();\n    let next_arc_id = 1;\n    let pd = PD.make();\n    let edge_ids = this.edges.map((edge, i) => i);\n    edge_ids.sort((i1, i2) => this.edges[i1][2] - this.edges[i2][2]);\n    for (let ii = 0; ii < edge_ids.length; ii++) {\n      let i = edge_ids[ii];\n      if (dart_arc.has(i + 1)) {\n        continue;\n      }\n      let circuit = this.dart_circuit(i + 1);\n      if (circuit.every(d => !(this.dart_adj(d) instanceof X))) {\n        // then this is a loop\n        let arc = next_arc_id++;\n        pd.push(P.make(arc, arc));\n        circuit.forEach(d => {\n          dart_arc.set(d, arc);\n          dart_arc.set(-d, arc);\n        });\n      } else {\n        let j = 0;\n        while (!(this.dart_adj(circuit[j]) instanceof X)) {\n          j++;\n        }\n        circuit = circuit.slice(j).concat(circuit.slice(0, j));\n        // now the first dart is at a crossing\n        let arc_id = null;\n        circuit.forEach(dart => {\n          if (this.dart_adj(dart) instanceof X) {\n            arc_id = next_arc_id++;\n          }\n          dart_arc.set(dart, arc_id);\n          dart_arc.set(-dart, arc_id);\n        });\n      }\n    }\n    this.adjs.forEach(adj => {\n      if (adj instanceof X) {\n        if (!this.dart_oriented(adj[2])) {\n          adj = adj.slice(2).concat(adj.slice(0, 2));\n        }\n        let arcs = adj.map(d => dart_arc.get(d));\n        if (!oriented) {\n          pd.push(X.make(...arcs));\n        } else {\n          if (this.dart_oriented(adj[1])) {\n            pd.push(Xp.make(...arcs));\n          } else {\n            pd.push(Xm.make(...arcs));\n          }\n        }\n      }\n    });\n    return pd;\n  }\n\n  get_dt() {\n    /* If this is not a knot, return null.  Otherwise, return a\n       Dowker-Thistlethwaite code for the knot. */\n    if (this.num_components() !== 1 || this.virtual_genus() > 0) {\n      return null;\n    }\n    let circuit = this.dart_circuit(1).filter(d => this.dart_adj(d) instanceof X);\n    if (circuit.length === 0) {\n      return [];\n    }\n    let n = circuit.length;\n\n    let code_from = (k) => {\n      let dart_crossing = new Map();\n      circuit.forEach((d, i) => {\n        dart_crossing.set(d, (i+n-k)%n);\n      });\n      let get_crossing = (dart) => {\n        let i = dart_crossing.get(this.next_dart(dart));\n        if (i === void 0) {\n          i = dart_crossing.get(this.prev_dart(dart));\n        }\n        return i;\n      };\n      let code = [];\n      for (let i = 0; i < circuit.length; i += 2) {\n        let j = get_crossing(circuit[(i+k)%n]);\n        if (this.dart_is_over(circuit[(i+k)%n])) {\n          code.push(-j-1);\n        } else {\n          code.push(j+1);\n        }\n      }\n      if (code[0] < 0) {\n        for (let i = 0; i < code.length; i++) {\n          code[i] = -code[i];\n        }\n      }\n      return code;\n    };\n\n    let codes = [];\n    for (let k = 0; k < circuit.length; k++) {\n      codes.push(code_from(k));\n    }\n    circuit = this.dart_circuit(-1).filter(d => this.dart_adj(d) instanceof X);\n    for (let k = 0; k < circuit.length; k++) {\n      codes.push(code_from(k));\n    }\n\n    codes.sort(compare);\n\n    return codes[0];\n  }\n\n  skeleton() {\n    let parts = [];\n    let loops = []; /* disconnected loops; array of component ids */\n    let seen_edges = new Set;\n\n    for (let teid = 0; teid < this.edges.length; teid++) {\n      if (seen_edges.has(teid)) {\n        continue;\n      }\n\n      let circuit = this.dart_circuit(teid + 1);\n\n      if (circuit.every(d => this.dart_adj(d) instanceof P)) {\n        loops.push(this.edges[teid][2]);\n        circuit.forEach(d => seen_edges.add(Math.abs(d) - 1));\n        continue;\n      }\n\n      let next_arc_id = 1;\n      let edge_arcs = new Map; /* map from edge id to arc id for non-loops */\n      let arc_comps = new Map; /* map from arc ids to component ids */\n      let part_verts = new Set;\n\n      let to_visit = [teid];\n      while (to_visit.length > 0) {\n        let eid = to_visit.pop();\n        if (seen_edges.has(eid)) {\n          continue;\n        }\n\n        let comp = this.edges[eid][2];\n        let circuit = this.dart_circuit(eid + 1);\n\n        // Combine edges into arcs\n\n        let j = 0;\n        while (this.dart_order(circuit[j]) !== 4) {\n          j++;\n        }\n        circuit = circuit.slice(j).concat(circuit.slice(0, j));\n        // ^ now the first dart is at a (virtual)crossing (i.e., is of order 4).\n        let arc_id = null;\n        circuit.forEach(dart => {\n          if (this.dart_order(dart) === 4) {\n            arc_id = next_arc_id++;\n            arc_comps.set(arc_id, comp);\n            // record that this vertex is in this part\n            let vid = this.dart_edge(dart)[0];\n            part_verts.add(vid);\n            // add other edges at vertex to to_visit\n            this.adjs[vid].forEach(d => {\n              let e = Math.abs(d) - 1;\n              if (!seen_edges.has(e)) {\n                to_visit.push(e);\n              }\n            });\n          }\n          edge_arcs.set(Math.abs(dart) - 1, arc_id);\n          seen_edges.add(Math.abs(dart) - 1);\n        });\n      }\n\n      // Construct vertex lists\n      let verts = [];\n      part_verts.forEach(vid => {\n        let adj = this.adjs[vid].map(d => {\n          let arc_id = edge_arcs.get(Math.abs(d) - 1);\n          if (d > 0) {\n            return arc_id;\n          } else {\n            return -arc_id;\n          }\n        });\n        for (let i = 0; i < adj.length; i++) {\n          if (adj[i] < 0 &&\n              (adj[i] === -adj[(i + 1) % adj.length]\n               || adj[i] === -adj[(i + adj.length - 1) % adj.length])) {\n            // Reidemeister I loop.\n            // Add in an extra degree-2 vertex so that the graph has no loop edges\n            let arc_id = -adj[i];\n            let arc_id2 = next_arc_id++;\n            verts.push(P.make(arc_id2, -arc_id));\n            adj[i] = -arc_id2;\n            if (arc_comps.has(arc_id)) {\n              arc_comps.set(arc_id2, arc_comps.get(arc_id));\n            } else {\n              arc_comps.set(-arc_id2, arc_comps.get(-arc_id));\n            }\n          }\n        }\n        verts.push(adj);\n      });\n      parts.push({\n        // A list of dart lists\n        verts: verts,\n        // A description of how the vertex arose (\"\" is default)\n        vert_types: verts.map(v => \"\"),\n        // A list of vertices for the knot; these are lists of darts\n        knot: verts,\n        // A map from darts for the knot to components. Only includes darts that match the knot's orientation.\n        comps: arc_comps\n      });\n    }\n    return {\n      // A list components.  There is one loop per entry\n      loops: loops,\n      parts: parts\n    };\n  }\n\n  beautify() {\n    /* Re-embed using the Tutte embedding of a barycentric subdivision. */\n\n    function face_darts(skel, dart) {\n      let darts = [];\n      let curr_dart = dart;\n      face_loop:\n      while (true) {\n        for (let vid = 0; vid < skel.verts.length; vid++) {\n          let idx = skel.verts[vid].indexOf(-curr_dart);\n          if (idx !== -1) {\n            curr_dart = skel.verts[vid][(idx + skel.verts[vid].length - 1) % skel.verts[vid].length];\n            darts.push(curr_dart);\n            if (curr_dart === dart) {\n              break face_loop;\n            } else {\n              continue face_loop;\n            }\n          }\n        }\n        throw new Error;\n      }\n      return darts;\n    }\n\n    function barycentric(skel, medial=false) {\n      /* When medial is true, do the medial subdivision rather than the barycentric subdivision. */\n      function face_dart(dart) {\n        // Get a representative dart for the face\n        return Math.min(...face_darts(skel, dart));\n      }\n\n      var fresh_dart = 1;\n      var darts = new Map;\n      function vert_key(vid) {\n        return \"[v \" + vid + \"]\";\n      }\n      function edge_key(dart) {\n        return \"[e \" + Math.abs(dart) + \"]\";\n      }\n      function face_key(dart) {\n        return \"[f \" + face_dart(dart) + \"]\";\n      }\n      function dart_for(key) {\n        if (!darts.has(key)) {\n          darts.set(key, fresh_dart++);\n        }\n        return darts.get(key);\n      }\n\n      let dart_remap = new Map;\n      let dart_remap_over_edge = new Map;\n\n      let verts = [];\n      let vert_types = [];\n      // vertices\n      skel.verts.forEach((vert, vid) => {\n        let new_vert = [];\n        vert.forEach((dart, i) => {\n          new_vert.push(dart_for(vert_key(vid) + edge_key(dart)));\n          dart_remap.set(dart, dart_for(vert_key(vid) + edge_key(dart)));\n          if (!medial) {\n            new_vert.push(dart_for(vert_key(vid) + i + face_key(dart)));\n          }\n        });\n        verts.push(new_vert);\n        vert_types.push(skel.vert_types[vid] + \"v\");\n      });\n      // edges\n      skel.verts.forEach((vert, vid) => {\n        vert.forEach((dart, i) => {\n          if (dart < 0) return;\n          let new_vert = [];\n          new_vert.push(dart_for(edge_key(dart) + face_key(dart)));\n          new_vert.push(-dart_for(vert_key(vid) + edge_key(dart)));\n          dart_remap_over_edge.set(-dart, -dart_for(vert_key(vid) + edge_key(dart)));\n          for (let vid = 0; vid < skel.verts.length; vid++) {\n            let idx = skel.verts[vid].indexOf(-dart);\n            if (idx != -1) {\n              new_vert.push(dart_for(edge_key(dart) + face_key(-dart)));\n              new_vert.push(-dart_for(vert_key(vid) + edge_key(dart)));\n              dart_remap_over_edge.set(dart, -dart_for(vert_key(vid) + edge_key(dart)));\n              verts.push(new_vert);\n              vert_types.push(\"e\");\n              return;\n            }\n          }\n          throw new Error;\n        });\n      });\n      // faces\n      let seen_faces = new Set;\n      skel.verts.forEach(vert => {\n        vert.forEach(dart => {\n          let face = face_dart(dart);\n          if (seen_faces.has(face)) {\n            return;\n          }\n          seen_faces.add(face);\n          let new_vert = [];\n          face_darts(skel, dart).forEach(dart => {\n            // `dart` ranges over darts in face `face`.\n            if (!medial) {\n              for (let vid = 0; vid < skel.verts.length; vid++) {\n                let i = skel.verts[vid].indexOf(dart);\n                if (i !== -1) {\n                  new_vert.push(-dart_for(vert_key(vid) + i + face_key(face)));\n                  break;\n                }\n              }\n            }\n            new_vert.push(-dart_for(edge_key(dart) + face_key(face)));\n          });\n          verts.push(new_vert);\n          vert_types.push(\"f\");\n        });\n      });\n\n      let new_knot = skel.knot.map(p => p.map(d => dart_remap.get(d)));\n      let new_comps = new Map;\n      skel.comps.forEach((comp, d) => {\n        let d1 = dart_remap.get(d);\n        let d2 = dart_remap_over_edge.get(d);\n        new_comps.set(d1, comp);\n        new_comps.set(d2, comp);\n        new_knot.push(P.make(-d1, d2));\n      });\n\n      { // check that verts is well-formed\n        let darts = new Set;\n        verts.forEach(adj => adj.forEach(d => {\n          assert(!darts.has(d));\n          darts.add(d);\n        }));\n        darts.forEach(d => {\n          assert(darts.has(-d));\n        });\n        new_knot.forEach(adj => {\n          assert(adj instanceof P || adj instanceof X || adj instanceof Virtual);\n        });\n      }\n\n      return {\n        verts: verts,\n        vert_types: vert_types,\n        knot: new_knot,\n        comps: new_comps\n      };\n    }\n\n    let skel = this.skeleton();\n    console.log(skel);\n\n    this.verts = [];\n    this.edges = [];\n    this.adjs = [];\n\n    let num_parts = skel.loops.length + skel.parts.length;\n    let cols = Math.ceil(Math.sqrt(num_parts));\n    let row = 0;\n    let col = 0;\n\n    // Draw the unknot parts\n    skel.loops.forEach(comp => {\n      let cx = 800 / cols * (col + 0.5);\n      let cy = 800 / cols * (row + 0.5);\n      let r = 0.8 * 800 / cols / 2;\n\n      const SUBDIV = 30;\n      let vids = [];\n      for (let i = 0; i < SUBDIV; i++) {\n        let vid = this.verts.length;\n        this.verts.push(new Point(cx + r * Math.cos(2 * Math.PI * i / SUBDIV),\n                                  cy - r * Math.sin(2 * Math.PI * i / SUBDIV)));\n        vids.push(vid);\n      }\n      let edges = [];\n      for (let i = 0; i < SUBDIV; i++) {\n        let eid = this.edges.length;\n        this.edges.push([vids[i], vids[(i + 1) % SUBDIV], comp]);\n        edges.push(eid);\n      }\n      for (let i = 0; i < SUBDIV; i++) {\n        this.adjs.push(P.make(edges[i] + 1,\n                              -edges[(i + SUBDIV - 1) % SUBDIV] - 1));\n      }\n\n      col++;\n      if (col >= cols) {\n        col = 0;\n        row++;\n      }\n    });\n\n    // Draw the knotted parts\n    skel.parts.forEach(part => {\n      let cx = 800 / cols * (col + 0.5);\n      let cy = 800 / cols * (row + 0.5);\n      let r = 0.8 * 800 / cols / 2;\n\n      const FACE_VERT_TYPE = \"fvv\";\n      //console.log(part);\n      part = barycentric(part, true);\n      //console.log(part);\n      part = barycentric(part, true);\n      part = barycentric(part, true);\n      console.log(part);\n      //const FACE_VERT_TYPE = \"fvv\";\n      //part = barycentric(barycentric(barycentric(part)));\n\n      // locate best outside face.\n      let outside = null;\n      let max_degree = 0;\n      part.verts.forEach((vert, vid) => {\n        if (part.vert_types[vid] == FACE_VERT_TYPE && max_degree < vert.length) {\n          max_degree = vert.length;\n          outside = vid;\n        }\n      });\n      console.log(\"best: \" + outside);\n\n      let vid_of_dart = new Map;\n      part.verts.forEach((vert, vid) => {\n        vert.forEach(dart => {\n          vid_of_dart.set(dart, vid);\n        });\n      });\n\n      function row_reduce(matrix) {\n        let rows = matrix.length,\n            cols = matrix[0].length;\n        let i = 0, j = 0; // current pivot\n        while (i < rows && j < cols) {\n          let besti = i;\n          for (let k = i + 1; k < rows; k++) {\n            if (Math.abs(matrix[k][j]) > Math.abs(matrix[besti][j])) {\n              besti = k;\n            }\n          }\n          if (besti !== i) {\n            [matrix[i], matrix[besti]] = [matrix[besti], matrix[i]];\n          }\n          if (matrix[i][j] === 0) {\n            j++;\n            continue;\n          }\n          let c = matrix[i][j];\n          matrix[i] = matrix[i].map(v => v / c);\n          for (let k = 0; k < rows; k++) {\n            if (k !== i) {\n              c = matrix[k][j];\n              matrix[k][j] = 0;\n              for (let l = j + 1; l < cols; l++) {\n                matrix[k][l] -= c * matrix[i][l];\n              }\n            }\n          }\n          i++;\n          j++;\n        }\n      }\n\n      let matrixx = [];\n      let matrixy = [];\n      let is_fixed = new Set;\n      let outside_verts = [];\n      part.verts[outside].forEach(dart => {\n        let verts = face_darts(part, dart).map(d => vid_of_dart.get(d));\n        let idx = verts.indexOf(outside);\n        verts = verts.slice(idx + 1).concat(verts.slice(0, idx));\n        verts.pop();\n        outside_verts.push(...verts);\n      });\n      outside_verts.forEach((vid, i) => {\n        is_fixed.add(vid);\n        let rowx = new Array(part.verts.length+1).fill(0);\n        rowx[vid] = 1;\n        rowx[part.verts.length] = Math.cos(2 * Math.PI * i / outside_verts.length);\n        let rowy = new Array(part.verts.length+1).fill(0);\n        rowy[vid] = 1;\n        rowy[part.verts.length] = Math.sin(2 * Math.PI * i / outside_verts.length);\n        matrixx.push(rowx);\n        matrixy.push(rowy);\n      });\n\n      part.verts.forEach((vert, vid) => {\n        if (vid === outside || is_fixed.has(vid)) {\n          return;\n        }\n        let rowx = new Array(part.verts.length+1).fill(0);\n        vert.forEach(dart => {\n          let vid2 = vid_of_dart.get(-dart);\n          rowx[vid2] += 1;\n          rowx[vid] -= 1;\n        });\n        matrixx.push(rowx);\n        matrixy.push(rowx.slice());\n      });\n\n      //console.log(\"{\" + matrixx.map(row => \"{\" + row.join(\",\") + \"}\").join(\",\") + \"}\");\n      //console.log(\"{\" + matrixy.map(row => \"{\" + row.join(\",\") + \"}\").join(\",\") + \"}\");\n\n      row_reduce(matrixx);\n      row_reduce(matrixy);\n\n      function vid_point(vid) {\n        if (vid < outside) {\n          assert(matrixx[vid][vid] === 1);\n          assert(matrixy[vid][vid] === 1);\n          return new Point(matrixx[vid][part.verts.length], matrixy[vid][part.verts.length]);\n        } else if (vid === outside) {\n          throw new Error;\n        } else {\n          assert(matrixx[vid - 1][vid] === 1);\n          assert(matrixy[vid - 1][vid] === 1);\n          return new Point(matrixx[vid - 1][part.verts.length], matrixy[vid - 1][part.verts.length]);\n        }\n      }\n\n      var points = [];\n      part.knot.forEach(p => {\n        points.push(vid_point(vid_of_dart.get(p[0])));\n      });\n      let minx = 1e10, maxx = -1e10,\n          miny = 1e10, maxy = -1e10;\n      points.forEach(pt => {\n        minx = Math.min(minx, pt.x);\n        maxx = Math.max(maxx, pt.x);\n        miny = Math.min(miny, pt.y);\n        maxy = Math.max(maxy, pt.y);\n      });\n      points.forEach(pt => {\n        let x = pt.x - (minx + maxx)/2,\n            y = pt.y - (miny + maxy)/2;\n        let scale = Math.max(maxx - minx, maxy - miny)/2;\n        pt.x = cx + x/scale * r;\n        pt.y = cy + y/scale * r;\n      });\n\n      let vids = [];\n      points.forEach(pt => {\n        let vid = this.verts.length;\n        this.verts.push(pt);\n        vids.push(vid);\n      });\n      let knot_vid_of_dart = new Map;\n      part.knot.forEach((vert, vid) => {\n        vert.forEach(dart => {\n          knot_vid_of_dart.set(dart, vid);\n        });\n      });\n      let edges = new Map;\n      part.comps.forEach((comp, d) => {\n        let eid = this.edges.length;\n        edges.set(d, eid);\n        this.edges.push([\n          vids[knot_vid_of_dart.get(d)],\n          vids[knot_vid_of_dart.get(-d)],\n          comp\n        ]);\n      });\n      part.knot.forEach((adj, knot_vid) => {\n        this.adjs.push(adj.map(d => {\n          if (edges.has(d)) {\n            return edges.get(d) + 1;\n          } else {\n            return -1-edges.get(-d);\n          }\n        }));\n      });\n\n      col++;\n      if (col >= cols) {\n        col = 0;\n        row++;\n      }\n    });\n\n    console.log(this);\n    this.consistency_check();\n\n  }\n}\n","// The Temperley--Lieb category\n\nimport {assert, SimpleType, equal, compare, toString} from \"./util.mjs\";\nimport {Laurent} from \"./laurent.mjs\";\n\nexport class TLPath {\n  /* A pair of edge ids (integers). */\n  constructor(a, b) {\n    if (a > b) {\n      [a, b] = [b, a];\n    }\n    this[0] = a;\n    this[1] = b;\n  }\n  equal(path2) {\n    assert(path2 instanceof TLPath);\n    return this[0] === path2[0] && this[1] === path2[1];\n  }\n  compare(path2) {\n    assert(path2 instanceof TLPath);\n    let d = this[0] - path2[0];\n    if (d !== 0) {\n      return d;\n    } else {\n      return this[1] - path2[1];\n    }\n  }\n  static make(a, b) {\n    assert(arguments.length === 2);\n    return new this(a, b);\n  }\n  toString() {\n    return \"TLPath.make(\" + this[0] + \", \" + this[1] + \")\";\n  }\n}\n\nexport class TLTerm {\n  /* A Laurent coefficient and a [TLPath,...] list */\n  constructor(coeff, paths) {\n    this.coeff = coeff;\n    this.paths = paths;\n  }\n  static make(coeff, paths) {\n    /* Create a normalized TLTerm. */\n    let term = new this(coeff, paths);\n    return term.normalize();\n  }\n  toString() {\n    return \"TLTerm.make(\" + this.coeff + \", \" + toString(this.paths) + \")\";\n  }\n  equal(term2) {\n    assert(term2 instanceof TLTerm);\n    return equal(this.coeff, term2.coeff) && equal(this.paths, term2.paths);\n  }\n/*  compare(term2) {\n    assert(term2 instanceof TLTerm);\n    if (this.coeff !\n  }*/\n  normalize() {\n    /* In-place normalization of the TLTerm. */\n    let coeff = this.coeff,\n        paths = this.paths;\n    let i = 0;\n    main_loop:\n    while (i < paths.length) {\n      let p1 = paths[i];\n      if (p1[0] === p1[1]) { // self-loop\n        coeff = coeff.mul(TL.loop);\n        paths.splice(i, 1);\n        continue main_loop;\n      }\n      let j = i + 1;\n      while (j < paths.length) {\n        let p2 = paths[j];\n        for (let k1 = 0; k1 < 2; k1++) {\n          for (let k2 = 0; k2 < 2; k2++) {\n            if (p1[k1] === p2[k2]) {\n              paths[i] = TLPath.make(p1[1-k1], p2[1-k2]);\n              paths.splice(j, 1);\n              continue main_loop;\n            }\n          }\n        }\n        j++;\n      }\n      i++;\n    }\n    this.coeff = coeff;\n\n    // now paths are simplified\n\n    paths.sort((p1, p2) => p1[0] - p2[0]); // this is lexicographic since all edge indices are different\n\n    return this;\n  }\n  scale(c) {\n    return new TLTerm(this.coeff.mul(c), this.paths);\n  }\n}\n\nexport class TL extends SimpleType {\n  // A list of TLTerms\n  copy() {\n    return this.slice(); // ok since normalization keeps the term \"the same\"\n  }\n  normalize() {\n    /* In-place normalization of the TL. */\n\n    // each TLTerm is assumed to be pre-normalized\n    // this.forEach(term => term.normalize());\n\n    this.sort((term1, term2) => compare(term1.paths, term2.paths));\n\n    let i = 0;\n    while (i < this.length) {\n      let term = this[i];\n      let sum = term.coeff;\n      let j = i + 1;\n      while (j < this.length && compare(term.paths, this[j].paths) === 0) {\n        sum = sum.add(this[j].coeff);\n        j++;\n      }\n      if (sum.is_zero()) {\n        this.splice(i, j-i);\n      } else if (j === i + 1) {\n        i++;\n      } else {\n        this[i] = new TLTerm(sum, term.paths);\n        if (j-i-1 > 0) {\n          this.splice(i+1, j-i-1);\n        }\n        i++;\n      }\n    }\n\n    return this;\n  }\n\n  add(tl2) {\n    assert(tl2 instanceof TL);\n    // Reference implementation:\n    // return this.concat(tl2).normalize();\n\n    let tl1 = this;\n    let i1 = 0, i2 = 0;\n    let result = new TL();\n\n    while (i1 < tl1.length && i2 < tl2.length) {\n      let t1 = tl1[i1], t2 = tl2[i2];\n\n      let comp = compare(t1.paths, t2.paths);\n      if (comp === 0) {\n        let coeff = t1.coeff.add(t2.coeff);\n        if (!coeff.is_zero()) {\n          result.push(new TLTerm(coeff, t1.paths));\n        }\n        i1++;\n        i2++;\n      } else if (comp < 0) {\n        result.push(t1);\n        i1++;\n      } else {\n        result.push(t2);\n        i2++;\n      }\n    }\n    while (i1 < tl1.length) {\n      result.push(tl1[i1]);\n      i1++;\n    }\n    while (i2 < tl2.length) {\n      result.push(tl2[i2]);\n      i2++;\n    }\n    return result;\n  }\n\n  scale(c, paths) {\n    if (c.is_zero()) {\n      return TL.zero;\n    }\n    if (paths.length === 0) {\n      return this.map(term => term.scale(c));\n    }\n    let result = this.map(term =>\n                          TLTerm.make(term.coeff.mul(c),\n                                      term.paths.concat(paths)));\n    return result.normalize();\n  }\n\n  mul(tl2) {\n    /* Multiplies this with tl2. Should run faster if tl2 is \"smaller\" */\n    assert(tl2 instanceof TL);\n    let tl = TL.make();\n    tl2.forEach(term2 => {\n      tl = tl.add(this.scale(term2.coeff, term2.paths));\n    });\n    // In other order:\n    /*this.forEach(term1 => {\n      tl = tl.add(tl2.scale(term1.coeff, term1.paths));\n    });*/\n    return tl;\n  }\n}\nTL.zero = TL.make();\nTL.unit = TL.make(TLTerm.make(Laurent.unit, []));\nTL.loop = Laurent.fromCoeffs([-1,0,0,0,-1], -2);\n","// Knot invariant caches\n//\n// Since many invariants take some computational power to compute,\n// this is a system for asynchronously computing invariants and\n// memoizing the results.\n\nimport {assert, toString, remove_value} from \"./util.mjs\";\n\nlet invariant_caches = new WeakMap;\n\nlet invariant_handlers = {};\n\nlet running_mts = [];\n\nexport function get_invariant(name, diagram, /*args*/) {\n  /* Returns a promise.  The extra arguments should be toString-able.\n     Technically, diagram can be any object, but it ought to be a\n     KnotGraph or a PD. */\n\n  assert(name in invariant_handlers);\n\n  let args = Array.prototype.slice.call(arguments, 2);\n  let key = name + toString(args);\n\n  let cache = invariant_caches.get(diagram);\n  if (cache && cache[key]) {\n    return cache[key];\n  }\n  if (!cache) {\n    cache = {};\n    invariant_caches.set(diagram, cache);\n  }\n  let mt = {\n    _canceled: false,\n    cancel: () => { mt._canceled = true; },\n    next_turn: () => new Promise((resolve, reject) => {\n      if (mt._canceled) {\n        reject(\"canceled\");\n      } else {\n        setTimeout(resolve, 0);\n      }\n    })\n  };\n  running_mts.push(mt);\n                                \n  let promise = new Promise((resolve, reject) => {\n    setTimeout(async function () {\n      try {\n        let val = invariant_handlers[name](mt, diagram, ...args);\n        resolve(val);\n      } catch (x) {\n        reject(x);\n      } finally {\n        remove_value(running_mts, mt);\n      }\n    }, 0);\n  });\n  cache[key] = promise;\n\n  return promise;\n}\n\nexport function cancel_invariants() {\n  /* Cancel ongoing calculations. */\n  running_mts.slice().forEach(mt => mt.cancel());\n}\n\nexport function define_invariant(name, f) {\n  /* f is a function (mt, diagram, ...args) -> Promise, where mt is\n     the \"multitasking system\", which has two functions next_turn()\n     (which the function can await for doing cooperative multitasking)\n     and cancel().  */\n  assert(!invariant_handlers[name]);\n  invariant_handlers[name] = f;\n}\n","// Jones polynomial\n\nimport {assert, remove_value, toString} from \"./util.mjs\";\nimport {Laurent} from \"./laurent.mjs\";\nimport {PD, X, P, Virtual, Xp, Xm, pd_eliminate_paths, pd_writhe_normalize, pd_first_free_id, pd_form_cabling, pd_to_tangle} from \"./pd.mjs\";\nimport {KnotGraph} from \"./knotgraph.mjs\";\nimport {TL, TLTerm, TLPath} from \"./tl.mjs\";\nimport {get_invariant, define_invariant} from \"./invariants.mjs\";\n\nfunction sort_pd_heuristic(pd, boundary=null) {\n  /* Sorts the entities in the PD so that each entity is chosen to minimize the next frontier. */\n  assert(pd instanceof PD);\n  pd = pd.slice();\n  //console.log(\"pre-sorted:\", toString(pd));\n\n  let frontier = boundary ? boundary.slice() : [];\n  let sorted = [];\n\n  while (pd.length > 0) {\n    // find \"best\" next entity, using the least-new-frontier heuristic\n    //console.log(\"frontier:\", toString(frontier));\n    let best_delta = Infinity;\n    let best_eid = null;\n    pd.forEach((entity, eid) => {\n      let delta = entity.length;\n      entity.forEach(i => {\n        if (frontier.indexOf(i) !== -1) {\n          delta -= 2;\n        }\n      });\n      if (delta < best_delta) {\n        best_delta = delta;\n        best_eid = eid;\n      }\n    });\n    let entity = pd[best_eid];\n    sorted.push(entity);\n    pd.splice(best_eid, 1);\n    //console.log(\"best:\", toString(entity));\n\n    // update frontier\n    entity.forEach(i => {\n      if (!remove_value(frontier, i)) {\n        frontier.push(i);\n      }\n    });\n  }\n  //console.log(\"sorted:\", toString(sorted));\n  return sorted;\n}\n\nfunction mk_tl_P(a,b) {\n  return TL.make(TLTerm.make(Laurent.unit, [TLPath.make(a, b)])).normalize();\n}\n\nfunction mk_tl_X(a,b,c,d) {\n  return TL.make(TLTerm.make(Laurent.t, [TLPath.make(a, b),\n                                         TLPath.make(c, d)]),\n                 TLTerm.make(Laurent.tinv, [TLPath.make(a, d),\n                                            TLPath.make(b, c)])).normalize();\n}\n\ndefine_invariant(\"kauffman_bracket\", async function (mt, pd) {\n  if (!(pd instanceof PD)) {\n    return await get_invariant(\"kauffman_bracket\", pd.get_pd());\n  }\n\n  let tangle = pd_to_tangle(pd);\n\n  if (tangle === null) {\n    return null;\n  }\n\n  pd = sort_pd_heuristic(tangle.pd, [tangle.boundary[0]]);\n\n  let bracket = TL.unit;\n\n  for (let i = 0; i < pd.length; i++) {\n    if (i % 2 === 0) await mt.next_turn();\n    let entity = pd[i];\n\n    if (entity.constructor === P) {\n      bracket = bracket.mul(mk_tl_P(entity[0], entity[1]));\n    } else if (entity.constructor === Virtual) {\n      bracket = bracket.mul(mk_tl_P(entity[0], entity[2]));\n      bracket = bracket.mul(mk_tl_P(entity[1], entity[3]));\n    } else {\n      // Otherwise it should be an X, Xp, or Xm\n      bracket = bracket.mul(mk_tl_X(entity[0], entity[1], entity[2], entity[3]));\n    }\n  }\n\n  assert(bracket.length === 1); // the kauffman bracket never vanishes\n  assert(bracket[0].paths.length === 1); // path corresponds to tangle.boundary\n  return bracket[0].coeff;\n});\n\nfunction kb_to_jones(kb) {\n  /* Given a normalized Kauffman bracket (a Laurent polynomial) return\n     the corresponding Jones polynomial. */\n\n  // The following polynomial is in T=t^2.\n  let jp = Laurent.zero;\n  for (let i = 0; i < kb._coeffs.length; i++) {\n    let coeff = kb._coeffs[i];\n    if (coeff !== 0) {\n      let new_exp = -(kb._offset + i)/2;\n      assert(new_exp === (0|new_exp));\n      jp = jp.add(Laurent.fromCoeffs([coeff], new_exp));\n    }\n  }\n  return jp;\n}\n\ndefine_invariant(\"jones_poly\", async function (mt, diagram) {\n  /* Computes the Jones polynomial from a KnotGraph (or an oriented\n     PD). Returns a polynomial in T=t^2, or null for the empty diagram. */\n\n  let wr;\n  if (diagram instanceof PD) {\n    wr = 0;\n    diagram.forEach(entity => {\n      if (entity.length === 4) {\n        if (entity.constructor === Xp) {\n          wr++;\n        } else if (entity.constructor === Xm) {\n          wr--;\n        } else {\n          throw new TypeError;\n        }\n      }\n    });\n  } else {\n    assert(diagram instanceof KnotGraph);\n    wr = diagram.writhe();\n  }\n\n  let kb = await get_invariant('kauffman_bracket', diagram);\n  if (kb === null) {\n    return null;\n  }\n\n  let normalized_kb = kb.simple_mul(Math.pow(-1, wr), -3*wr);\n  return kb_to_jones(normalized_kb);\n});\n\ndefine_invariant(\"cabled_jones_poly\", async function (mt, diagram, cables) {\n  /* Computes the cabeled Jones polynomial from a KnotGraph (or an oriented\n     PD). Returns a polynomial in A=t^-4, or null for the empty diagram. */\n  assert(cables > 0);\n  if (diagram instanceof KnotGraph) {\n    diagram = diagram.get_pd(true);\n  }\n  assert(diagram instanceof PD);\n\n  if (diagram.length === 0) {\n    return null;\n  }\n\n  let kb = await get_invariant(\"kauffman_bracket\", pd_form_cabling(diagram, cables));\n  if (kb === null) {\n    return null;\n  }\n  return kb; // we are using the Kauffman bracket parameterization\n});\n","import {assert} from \"./util.mjs\";\nimport {Laurent} from \"./laurent.mjs\";\nimport {eigenvalues} from \"./eigenvalues.mjs\";\n\nexport function det(NumberSystem, matrix) {\n  /* Computes the determinant of the given matrix, with entries in the\n     NumberSystem = {zero, unit, add, mul, negate, is_zero}.  A matrix is a list of\n     lists.  Performs cofactor expansion along the first row (matrix[0][...]). */\n\n  if (matrix.length === 0) {\n    return NumberSystem.unit;\n  }\n  assert(matrix.length === matrix[0].length); // only square matrices\n\n  if (matrix.length === 1) {\n    return matrix[0][0];\n  }\n\n  if (matrix.length === 2) {\n    return NumberSystem.add(\n      NumberSystem.mul(matrix[0][0], matrix[1][1]),\n      NumberSystem.negate(NumberSystem.mul(matrix[1][0], matrix[0][1])));\n  }\n\n  if (matrix.length === 3) {\n    return NumberSystem.add(\n      NumberSystem.add(\n        NumberSystem.add(\n          NumberSystem.mul(NumberSystem.mul(matrix[0][0], matrix[1][1]), matrix[2][2]),\n          NumberSystem.mul(NumberSystem.mul(matrix[0][1], matrix[1][2]), matrix[2][0])),\n        NumberSystem.mul(NumberSystem.mul(matrix[0][2], matrix[1][0]), matrix[2][1])),\n      NumberSystem.negate(\n        NumberSystem.add(\n          NumberSystem.add(\n            NumberSystem.mul(NumberSystem.mul(matrix[0][0], matrix[2][1]), matrix[1][2]),\n            NumberSystem.mul(NumberSystem.mul(matrix[0][1], matrix[2][2]), matrix[1][0])),\n          NumberSystem.mul(NumberSystem.mul(matrix[0][2], matrix[2][0]), matrix[1][1]))\n      ));\n  }\n\n  // Do cofactor expansion over the first row.\n  let val = NumberSystem.zero;\n  for (let j = 0; j < matrix[0].length; j++) {\n    let c = matrix[0][j];\n    if (NumberSystem.is_zero(c)) {\n      continue;\n    }\n    if (j % 2 === 1) {\n      c = NumberSystem.negate(c);\n    }\n    let sub_matrix = [];\n    for (let i = 1; i < matrix.length; i++) {\n      sub_matrix.push(matrix[i].slice(0, j).concat(matrix[i].slice(j+1)));\n    }\n    val = NumberSystem.add(val, NumberSystem.mul(det(NumberSystem, sub_matrix), c));\n  }\n  return val;\n}\n\nexport function signature(matrix, error=1e-14) {\n  // The matrix is assumed to be an n x n integer matrix.\n\n  if (matrix.length === 0) {\n    return 0;\n  }\n  assert(matrix.length === matrix[0].length);\n\n  let evals = eigenvalues(matrix);\n\n  let sig = 0;\n  eigenvalues(matrix).forEach(lam => {\n    if (lam - error > 0) {\n      sig++;\n    } else if (lam + error < 0) {\n      sig--;\n    }\n  });\n  return sig;\n}\n","// Free group algebra\n\nimport {assert, SimpleType, compare} from \"./util.mjs\";\nimport {Laurent} from \"./laurent.mjs\";\n\nexport class FGWord extends SimpleType {\n  /* A FGWord is gen,exp,gen,exp,... where the exponents are numbers\n     and the generators are tested by ===. */\n  normalize() {\n    /* Reduce the freegroup word.  Accepts FGWords inside the FGWord in place of generators,\n       which are spliced in. (In Mathematica-speak, this symbol is flattenable.)*/\n    let i = 0;\n    while (i < this.length) {\n      if (this[i] instanceof FGWord) {\n        let w = this[i];\n        let exp = this[i+1];\n        if (exp < 0) {\n          w = w.inverse();\n          exp = -exp;\n        }\n        this.splice(i, 2);\n        for (let k = 0; k < exp; k++) {\n          this.splice(i, 0, ...w);\n        }\n        i = Math.max(0, i - 2);\n        continue;\n      }\n      let exp = this[i+1];\n      let j = i+2;\n      while (j < this.length && this[i] === this[j]) {\n        exp += this[j+1];\n        j += 2;\n      }\n      if (exp === 0) {\n        this.splice(i, j-i);\n        i = Math.max(0, i - 2);\n      } else {\n        this[i+1] = exp;\n        if (j-i-2 > 0) {\n          this.splice(i+2, j-i-2);\n        }\n        i += 2;\n      }\n    }\n    assert(i === this.length);\n    return this;\n  }\n\n  normalize_conj(full_normalize=true) {\n    /* Reduce the word, allowing conjugation and inversion, putting it\n       into a normal form. Returns a new word.  If full_normalize is\n       true, then returns the lexicographically minimal word among all\n       conjugates. */\n    let w = this.slice();\n    while (true) {\n      w.normalize();\n      if (w.length > 2) {\n        if (w[0] === w[w.length-2]) {\n          // Can conjugate to move end to front and reduce length\n          w[1] += w[w.length-1];\n          w.length = w.length - 2;\n          continue;\n        }\n      }\n      break;\n    }\n    if (!full_normalize || w.length === 0) {\n      return w;\n    }\n    let shifts = [];\n    for (let i = 0; i < w.length; i += 2) {\n      let sw = w.slice(i).concat(w.slice(0, i));\n      shifts.push(sw);\n      shifts.push(sw.inverse());\n    }\n    shifts.sort(compare);\n    return shifts[0];\n  }\n\n  inverse() {\n    let w = FGWord.make();\n    for (let i = this.length-2; i >= 0; i -= 2) {\n      w.push(this[i], -this[i+1]);\n    }\n    return w;\n  }\n\n  fox_deriv(gen) {\n    /* Returns an FGA of the Fox derivative with respect to gen.\n       (Not used by alexander polynomial implementation.)*/\n    if (this.length === 0) {\n      return FGA.zero;\n    } else if (this.length === 2 && this[1] === 1) {\n      return gen === this[0] ? FGA.unit : FGA.zero;\n    } else if (this.length === 2 && this[1] === -1) {\n      if (gen === this[0]) {\n        return FGA.make([-1, FGWord.make(this[0], -1)]);\n      } else {\n        return FGA.zero;\n      }\n    } else {\n      let u = this.slice(0,2), v = this.slice(2);\n      if (v.length === 0) {\n        v.push(u[0], u[1]-Math.sign(u[1]));\n        u[1] = Math.sign(u[1]);\n      }\n      return u.fox_deriv(gen)\n        .add(FGA.make([1,u]).mul(v.fox_deriv(gen)));\n    }\n  }\n\n  substitute(g, val) {\n    /* If g is a function, for each generator for which g is true,\n       replace with val.  Otherwise, do the same by checking === with g. */\n    let w = this.slice();\n    for (let i = 0; i < this.length; i += 2) {\n      if ((g instanceof Function && g(w[i])) || g === w[i]) {\n        w[i] = val;\n      }\n    }\n    return w.normalize();\n  }\n}\n\nexport class FGA extends SimpleType {\n  /* A list of terms, which are [coeff,FGWord] pairs. */\n\n  static gen(g, exp=1, c=1) {\n    let x = FGA.make([c,FGWord.make(g, exp)]);\n    return x.normalize();\n  }\n\n  normalize() {\n    this.forEach(term => term[1].normalize());\n    this.sort((term1, term2) => compare(term1[1], term2[1]));\n\n    let i = 0;\n    while (i < this.length) {\n      let term = this[i];\n      let sum = term[0];\n      let j = i + 1;\n      while (j < this.length && compare(term[1], this[j][1]) === 0) {\n        sum += this[j][0];\n        j++;\n      }\n      if (sum.length === 0) {\n        this.splice(i, j-i);\n      } else {\n        term[0] = sum;\n        if (j-i-1 > 0) {\n          this.splice(i+1, j-i-1);\n        }\n        i++;\n      }\n    }\n\n    return this;\n  }\n\n  scale(c) {\n    assert(typeof c === \"number\");\n    if (c === 0) {\n      return FGA.zero;\n    }\n    let w = FGA.make();\n    this.forEach(term => {\n      w.push([term[0]*c, term[1]]);\n    });\n    return w;\n  }\n\n  add(w2) {\n    assert(w2 instanceof FGA);\n    return this.concat(w2).normalize();\n  }\n\n  mul(w2) {\n    assert(w2 instanceof FGA);\n    let w = FGA.make();\n    this.forEach(term1 => {\n      w2.forEach(term2 => {\n        w.push([term1[0] * term2[0],\n                term1[1].concat(term2[1])]);\n      });\n    });\n    return w.normalize();\n  }\n\n  substitute(g, val) {\n    /* Calls substitute for each term. */\n    return this.map(term => [term[0], term[1].substitute(g, val)]).normalize();\n  }\n\n  toLaurent() {\n    /* Assumes g |-> t is a homomorphism and gives the image. */\n    let p = Laurent.zero;\n    this.forEach(term => {\n      let exp = 0;\n      for (let i = 0; i < term[1].length; i += 2) {\n        exp += term[1][i+1];\n      }\n      p = p.add(Laurent.fromCoeffs([term[0]], exp));\n    });\n    return p;\n  }\n}\nFGA.zero = FGA.make();\nFGA.unit = FGA.make([1,FGWord.make()]);\n","// Alexander polynomials\n\nimport {assert, compare} from \"./util.mjs\";\nimport {Laurent} from \"./laurent.mjs\";\nimport {Poly} from \"./poly.mjs\";\nimport {det} from \"./matrix.mjs\";\nimport {PD, P, Xp, Xm} from \"./pd.mjs\";\nimport {FGA, FGWord} from \"./fga.mjs\";\nimport {get_invariant, define_invariant} from \"./invariants.mjs\";\n\nexport function wirtinger_presentation(pd) {\n  /* Returns the wirtinger presentation from an oriented PD */\n  if (!(pd instanceof PD)) {\n    pd = pd.get_pd(true);\n  }\n  let gens = []; // names of generators\n  let rels = [];\n  pd.forEach(entity => {\n    entity.forEach(i => {\n      if (gens[i] === void 0) {\n        gens[i] = \"x\" + i;\n      }\n    });\n    if (entity instanceof P) {\n      let a = gens[entity[0]],\n          b = gens[entity[1]];\n      rels.push(FGWord.make(a, 1, b, -1));\n    } else if (entity instanceof Xp) {\n      let a = gens[entity[0]],\n          b = gens[entity[1]],\n          c = gens[entity[2]],\n          d = gens[entity[3]];\n      rels.push(FGWord.make(d, 1, b, -1));\n      rels.push(FGWord.make(b, 1, c, 1, d, -1, a, -1));\n    } else if (entity instanceof Xm) {\n      let a = gens[entity[0]],\n          b = gens[entity[1]],\n          c = gens[entity[2]],\n          d = gens[entity[3]];\n      rels.push(FGWord.make(d, 1, b, -1));\n      rels.push(FGWord.make(c, 1, d, 1, a, -1, b, -1));\n    } else {\n      throw new TypeError;\n    }\n  });\n\n  let removed_gens = new Set();\n  simplification_round:\n  while (true) {\n    //console.log(\"rels \" + toString(rels));\n    // Remove empty words\n    rels = rels.map(r => r.normalize_conj(false)).filter(word => word.length > 0);\n    // and duplicates\n    rels.sort(compare);\n    let i = 0;\n    while (i + 1 < rels.length) {\n      if (compare(rels[i], rels[i+1]) === 0) {\n        rels.splice(i+1,1);\n      } else {\n        i++;\n      }\n    }\n    //console.log(\"  -> \" + toString(rels));\n\n    // Look for a relation that gives a generator in terms of other generators\n    for (let i = 0; i < rels.length; i++) {\n      let rel = rels[i];\n      try_next_g:\n      for (let j = 0; j < rel.length; j += 2) {\n        let g = rel[j];\n        if (Math.abs(rel[j+1]) === 1) {\n          for (let k = 0; k < rel.length; k += 2) {\n            if (k !== j && rel[k] === g) {\n              continue try_next_g;\n            }\n          }\n          let w = rel.slice(j+2).concat(rel.slice(0,j));\n          if (rel[j+1] === 1) {\n            w = w.inverse();\n          }\n          //console.log(\"from \" + toString(rel) + \" got \" + g + \" is \" + toString(w));\n          removed_gens.add(g);\n          rels.splice(i, 1);\n          rels = rels.map(rel => rel.substitute(g, w));\n          continue simplification_round;\n        }\n      }\n    }\n    // Didn't find anything\n    break;\n  }\n\n  let gen_list = gens.filter(g => !removed_gens.has(g));\n  \n  return {gens: gen_list,\n          rels: rels};\n}\n\nexport function alexander_module(pres) {\n  /* Given a presentation {gens,rels} of a group with a homomorphism\n     to Z where each generator is sent to 1, computes a matrix for the\n     Alexander module. */\n\n  // A common approach is to use Fox derivatives, like so:\n  //   let matrix = pres.gens.map(g => pres.rels.map(rel => rel.fox_deriv(g).toLaurent()));\n  // However, an algorithmically more efficient method is to \"linearize\" the relations directly.\n  // This essentially means taking a relation, constructing its image in the chain group, giving\n  // a column of the matrix, rather than using derivations to compute each entry one at a time.\n\n  // matrix[i][j] is for generator i and relation j\n  let matrix = pres.gens.map(g => pres.rels.map(rel => Laurent.zero));\n\n  pres.rels.forEach((rel, j) => {\n    let ab = 0;\n    for (let k = 0; k < rel.length; k += 2) {\n      let i = pres.gens.indexOf(rel[k]);\n      let exp = Math.sign(rel[k+1]);\n      let times = Math.abs(rel[k+1]);\n      for (let n = 0; n < times; n++) {\n        let term;\n        if (exp > 0) {\n          term = Laurent.fromCoeffs([1], ab);\n        } else {\n          term = Laurent.fromCoeffs([-1], ab-1);\n        }\n        matrix[i][j] = matrix[i][j].add(term);\n        ab += exp;\n      }\n    }\n  });\n\n  \n  // This is not yet a presentation.  It is the matrix A in the chain complex\n  //   C_2 --A--> C_1 -----> C_0\n  // The group C_0 is Z[t,t^{-1}], and the map from C_1 is g |-> t-1.\n  // Thus, the kernel has the basis gi-g1 for i != 1.\n  //\n  // This means we can just remove a row and get a presentation matrix.\n  matrix.pop();\n\n  // representative generators pres.gens.slice(0, pres.gens.length-1)\n  return simplify_presentation_matrix(matrix);\n}\n\nfunction simplify_presentation_matrix(matrix) {\n  /* Given a presentation matrix of Laurent polynomials over Z,\n     attempt to sort of simplify it.  We can't eaxctly do Smith Normal\n     Form because Z[t,t^{-1}] is not a PID, but we can sure try. */\n\n  if (matrix.length === 0) {\n    return [];\n  }\n\n  // scale by t^n so that everything is a polynomial\n  let min_exp = Infinity;\n  matrix.forEach(row => row.forEach(entry => {\n    if (!entry.is_zero()) {\n      min_exp = Math.min(min_exp, entry.minexp());\n    }\n  }));\n  if (min_exp === Infinity) {\n    min_exp = 0;\n  }\n  let pmatrix = matrix.map(row => row.map(entry => entry.simple_mul(1, -min_exp).to_poly(true)));\n\n  function normalize_row(i) {\n    let min_exp = Infinity;\n    for (let j = 0; j < pmatrix[i].length; j++) {\n      let c = pmatrix[i][j];\n      min_exp = Math.min(min_exp, c.min_exp());\n    }\n    if (min_exp < Infinity) {\n      for (let j = 0; j < pmatrix[i].length; j++) {\n        pmatrix[i][j] = pmatrix[i][j].mul_x(-min_exp);\n      }\n    }\n  }\n\n  function normalize_col(j) {\n    let min_exp = Infinity;\n    for (let i = 0; i < pmatrix.length; i++) {\n      let c = pmatrix[i][j];\n      min_exp = Math.min(min_exp, c.min_exp());\n    }\n    if (min_exp < Infinity) {\n      for (let i = 0; i < pmatrix.length; i++) {\n        pmatrix[i][j] = pmatrix[i][j].mul_x(-min_exp);\n      }\n    }\n  }\n\n  function delete_col(j) {\n    for (let i = 0; i < pmatrix.length; i++) {\n      pmatrix[i].splice(j, 1);\n    }\n  }\n\n  function delete_col_if_zero(j) {\n    let all_zero = true;\n    for (let i = 0; i < pmatrix.length; i++) {\n      all_zero = all_zero && pmatrix[i][j].is_zero();\n    }\n    if (all_zero) {\n      delete_col(j);\n    }\n  }\n  \n  function swap_rows(i1, i2) {\n    if (i1 === i2) {\n      return;\n    }\n    [pmatrix[i1], pmatrix[i2]] = [pmatrix[i2], pmatrix[i1]];\n  }\n  function swap_cols(j1, j2) {\n    if (j1 === j2) {\n      return;\n    }\n    for (let i = 0; i < pmatrix.length; i++) {\n      [pmatrix[i][j1], pmatrix[i][j2]] = [pmatrix[i][j2], pmatrix[i][j1]];\n    }\n  }\n  function add_to_col(j2, j1, c, n) {\n    /* col[j2] += c * col[j1] * x^n */\n    for (let i = 0; i < pmatrix.length; i++) {\n      pmatrix[i][j2] = pmatrix[i][j2].add(pmatrix[i][j1].scale(c).mul_x(n));\n    }\n  }\n\n  for (let j = pmatrix[0].length-1; j >= 0; j--) {\n    delete_col_if_zero(j);\n  }\n  for (let i = 0; i < pmatrix.length; i++) {\n    normalize_row(i);\n  }\n  for (let j = 0; j < pmatrix[0].length; j++) {\n    normalize_col(j);\n  }\n\n  // Now for a modified version of Gaussian elimination (Z[t] not a PID)\n  \n  function gauss_right() {\n    if (pmatrix.length === 0) {\n      return false;\n    }\n    let changed = false;\n\n    let i = 0,\n        j = 0;\n    gauss_loop:\n    while (i < pmatrix.length && j < pmatrix[0].length) {\n      if (pmatrix[i][j].is_zero()) {\n        for (let j2 = j + 1; j2 < pmatrix[0].length; j2++) {\n          if (!pmatrix[i][j2].is_zero()) {\n            swap_cols(j, j2);\n            changed = true;\n            continue gauss_loop;\n          }\n        }\n        i++;\n        continue gauss_loop;\n      }\n      if (pmatrix[i][j].leading_coeff() < 0) {\n        for (let i2 = i; i2 < pmatrix.length; i2++) {\n          pmatrix[i2][j] = pmatrix[i2][j].scale(-1);\n        }\n      }\n      { // reduce from (i,j) rightward if possible\n        let pij = pmatrix[i][j];\n        let deg = pij.degree();\n        let j2 = j + 1;\n        while (j2 < pmatrix[0].length) {\n          let pij2 = pmatrix[i][j2];\n          let deg2 = pij2.degree();\n          if (deg <= deg2 && pij.leading_coeff() <= Math.abs(pij2.leading_coeff())) {\n            let div = pij2.leading_coeff() / pij.leading_coeff();\n            let idiv = Math.sign(div) * Math.floor(Math.abs(div));\n            add_to_col(j2, j, -idiv, deg2 - deg);\n            normalize_col(j2);\n            delete_col_if_zero(j2);\n            changed = true;\n          } else {\n            j2++;\n          }\n        }\n      }\n      { // look for polynomial of least degree with smallest leading coefficient\n        let best_j = j,\n            best_deg = pmatrix[i][j].degree(),\n            best_leading = pmatrix[i][j].leading_coeff();\n        for (let j2 = j + 1; j2 < pmatrix[0].length; j2++) {\n          let pij2 = pmatrix[i][j2];\n          if (!pij2.is_zero() && pij2.degree() <= best_deg && Math.abs(pij2.leading_coeff()) <= best_leading) {\n            best_j = j2;\n            best_deg = pij2.degree();\n            best_leading = Math.abs(pij2.leading_coeff());\n          }\n        }\n        if (best_j !== j) {\n          swap_cols(j, best_j);\n          changed = true;\n          continue gauss_loop;\n        }\n      }\n      { // check that eliminated everything\n        let eliminated = true;\n        for (let j2 = j + 1; j2 < pmatrix[0].length; j2++) {\n          eliminated = eliminated && pmatrix[i][j2].is_zero();\n        }\n        if (!eliminated) {\n          break gauss_loop;\n        }\n      }\n      i++;\n      j++;\n    }\n\n    return changed;\n  }\n\n  function eliminate_null_gens() {\n    let j = 0;\n    next_gen:\n    while (pmatrix.length > 0 && j < pmatrix[0].length) {\n      let idx = null;\n      for (let i = 0; i < pmatrix.length; i++) {\n        let pij = pmatrix[i][j];\n        if (!pij.is_zero()) {\n          if (idx !== null || pij.degree() !== 0 || Math.abs(pij[0]) != 1) {\n            j++;\n            continue next_gen;\n          } else {\n            idx = i;\n          }\n        }\n      }\n      assert(idx !== null);\n      delete_col(j);\n      pmatrix.splice(idx, 1);\n    }\n  }\n\n  // temporary transpose\n  function transpose() {\n    let rows = pmatrix.length,\n        cols = rows > 0 ? pmatrix[0].length : 0;\n    let tpmatrix = new Array(cols);\n    for (let i = 0; i < cols; i++) {\n      tpmatrix[i] = new Array(rows);\n      for (let j = 0; j < rows; j++) {\n        tpmatrix[i][j] = pmatrix[j][i];\n      }\n    }\n    pmatrix = tpmatrix;\n  }\n\n  // make a best-effort reduction\n  for (let max_attempts = 4; max_attempts > 0; max_attempts--) {\n    let changed = false;\n    changed = gauss_right() || changed;\n    if (pmatrix.length === 0) break;\n    eliminate_null_gens();\n    if (pmatrix.length === 0) break;\n    pmatrix.reverse().forEach(row => row.reverse()); // sort of makes do back-substitution\n    changed = gauss_right() || changed;\n    if (pmatrix.length === 0) break;\n    eliminate_null_gens();\n    if (pmatrix.length === 0) break;\n    let old_pmatrix = pmatrix;\n    transpose(); // makes do row reduction other way\n    changed = gauss_right() || changed;\n    if (pmatrix.length === 0) { pmatrix = old_pmatrix; break; }\n    pmatrix.reverse().forEach(row => row.reverse());\n    changed = gauss_right() || changed;\n    if (pmatrix.length === 0) { pmatrix = old_pmatrix; break; }\n    transpose(); // return to correct form!\n    eliminate_null_gens();\n    if (!changed || pmatrix.length === 0) {\n      break;\n    }\n  }\n\n  return pmatrix.map(row => row.map(entry => Laurent.fromCoeffs(entry)));\n}\n\nexport function alexander_polynomial(module, n=0) {\n  /* Computes the nth Alexander polynomial with the given module\n  presentation. A module is an m x k matrix, with m the number of\n  generators.  The 0th Alexander polynomial is the standard one.*/\n\n  // Need to get all k=m-n minors of matrix.module.  In particular, the\n  // determinants of all the k x k submatrices.  In more\n  // particular, the GCD of these determinants.\n\n  let k = module.length - n;\n  if (k <= 0) {\n    return Laurent.unit;\n  }\n\n  let gcd = Laurent.zero;\n\n  let cur_rows = [];\n  function minor_rows(next_i) {\n    if (cur_rows.length === k) {\n      do_minor_cols(0);\n    } else {\n      for (let i = next_i; i < module.length - (k - cur_rows.length - 1); i++) {\n        cur_rows.push(module[i]);\n        minor_rows(i + 1);\n        cur_rows.pop();\n      }\n    }\n  }\n  let minor = [];\n  for (let i = 0; i < k; i++) {\n    minor.push([]);\n  }\n  function do_minor_cols(next_j) {\n    if (minor[0].length === k) {\n      gcd = gcd.gcd(det(Laurent, minor));\n    } else {\n      for (let j = next_j; j < module[0].length - (k - minor[0].length - 1); j++) {\n        for (let i = 0; i < k; i++) {\n          minor[i].push(cur_rows[i][j]);\n        }\n        do_minor_cols(j + 1);\n        for (let i = 0; i < k; i++) {\n          minor[i].pop();\n        }\n      }\n    }\n  }\n\n  minor_rows(0);\n\n  let coeffs = gcd.coeffs();\n  if (coeffs[0] < 0) {\n    coeffs = coeffs.map(c => -c);\n  }\n\n  return Laurent.fromCoeffs(coeffs, 0);\n}\n\ndefine_invariant(\"wirtinger_presentation\", async function (mt, diagram) {\n  return wirtinger_presentation(diagram);\n});\ndefine_invariant(\"alexander_module\", async function (mt, diagram) {\n  let wp = await get_invariant(\"wirtinger_presentation\", diagram);\n  return alexander_module(wp);\n});\ndefine_invariant(\"alexander_poly\", async function (mt, diagram, n/*default=0*/) {\n  if (arguments.length === 2) {\n    return await get_invariant(\"alexander_poly\", diagram, 0);\n  }\n  let matrix = await get_invariant(\"alexander_module\", diagram);\n  await mt.next_turn(); // just to let other things happen. the next line probably ought to be broken up.\n  return alexander_polynomial(matrix, n);\n});\n","// Rational functions, as pairs of polynomials\n\nimport {assert, SimpleType} from \"./util.mjs\";\nimport {Poly} from \"./poly.mjs\";\nimport {Laurent} from \"./laurent.mjs\";\n\nexport class RatFun {\n  constructor (p, q) {\n    assert(p instanceof Poly);\n    assert(q instanceof Poly);\n\n    if (p.is_zero()) {\n      this.p = Poly.zero;\n      this.q = Poly.unit;\n      return;\n    }\n    if (q.is_unit()) {\n      this.p = p;\n      this.q = Poly.unit;\n      return;\n    }\n\n    let d = p.gcd(q);\n    this.p = p.divide(d);\n    this.q = q.divide(d);\n\n    if (this.q.leading_coeff() < 0) {\n      this.p = this.p.scale(-1);\n      this.q = this.q.scale(-1);\n    }\n  }\n\n  toString() {\n    return \"new RatFun(\" + this.p + \", \" + this.q + \")\";\n  }\n\n  is_zero() {\n    return this.p.is_zero();\n  }\n\n  add(f2) {\n    assert(f2 instanceof RatFun);\n    return new RatFun(this.p.mul(f2.q).add(this.q.mul(f2.p)),\n                      this.q.mul(f2.q));\n  }\n\n  scale(c) {\n    return new RatFun(this.p.scale(c), this.q);\n  }\n\n  mul(f2) {\n    assert(f2 instanceof RatFun);\n    let h1 = new RatFun(this.p, f2.q),\n        h2 = new RatFun(f2.p, this.q);\n    return new RatFun(h1.p.mul(h2.p), h1.q.mul(h2.q));\n  }\n\n  div(f2) {\n    assert(f2 instanceof RatFun);\n    let h1 = new RatFun(this.p, f2.p),\n        h2 = new RatFun(f2.q, this.q);\n    return new RatFun(h1.p.mul(h2.p), h1.q.mul(h2.q));\n  }\n\n  recip() {\n    return new RatFun(this.q, this.p);\n  }\n\n  static incl(c) {\n    return RatFun.from_poly(Poly.incl(c));\n  }\n\n  static from_poly(p) {\n    assert(p instanceof Poly);\n    return new RatFun(p, Poly.unit);\n  }\n  static from_laurent(p) {\n    assert(p instanceof Laurent);\n    \n    if (p.minexp() < 0) {\n      return new RatFun(p.to_poly(),\n                        Poly.incl(1).mul_x(-p.minexp()));      \n    } else {\n      return RatFun.from_poly(p.to_poly(true));\n    }\n  }\n}\nRatFun.unit = RatFun.incl(1);\nRatFun.zero = RatFun.incl(0);\n","// Conway potential\n//\n// Uses the Seifert matrix to calculate it directly.\n\nimport {assert, compare} from \"./util.mjs\";\nimport {Laurent} from \"./laurent.mjs\";\nimport {Poly} from \"./poly.mjs\";\nimport {RatFun} from \"./ratfun.mjs\";\nimport {det} from \"./matrix.mjs\";\nimport {get_invariant, define_invariant} from \"./invariants.mjs\";\n\nfunction ratfun_det(lmatrix) {\n  /* compute the determinant of a matrix of Laurent polynomials */\n  if (lmatrix.length == 0) {\n    return Laurent.unit;\n  }\n\n  //console.log(\"{\" + lmatrix.map(row => \"{\" + row.join(\", \") + \"}\").join(\", \") + \"}\");\n\n  let matrix = lmatrix.map(row => row.map(p => RatFun.from_laurent(p)));\n  let rows = matrix.length,\n      cols = matrix[0].length;\n  assert(rows === cols); // only square matrices\n\n  //console.log(\"{\" + matrix.map(row => \"{\" + row.join(\", \") + \"}\").join(\", \") + \"}\");\n\n  let det = RatFun.unit;\n\n  // proceed by row reduction\n  let i = 0,\n      j = 0;\n  while (i < rows && j < cols) {\n    if (matrix[i][j].is_zero()) {\n      for (let k = i + 1; k < rows; k++) {\n        if (!matrix[k][j].is_zero()) {\n          [matrix[i], matrix[k]] = [matrix[k], matrix[i]];\n          det = det.scale(-1);\n          break;\n        }\n      }\n      if (matrix[i][j].is_zero()) {\n        return Laurent.zero;\n        //j++;\n        //continue;\n      }\n    }\n    let c = matrix[i][j];\n    det = det.mul(c);\n    if (det.is_zero()) {\n      return Laurent.zero;\n    }\n    matrix[i] = matrix[i].map(v => v.div(c));\n    for (let k = i + 1; k < rows; k++) {\n      c = matrix[k][j];\n      matrix[k][j] = RatFun.zero;\n      for (let l = j + 1; l < cols; l++) {\n        matrix[k][l] = matrix[k][l].add(matrix[i][l].mul(c).scale(-1));\n      }\n    }\n    i++;\n    j++;\n  }\n  // verify denominator is of right form\n  for (let i = 0; i < det.q.length - 1; i++) {\n    assert(det.q[i] === 0);\n  }\n  assert(det.q.leading_coeff() === 1);\n  return Laurent.fromCoeffs(det.p).simple_mul(1, -det.q.degree());\n}\n\ndefine_invariant(\"conway_poly\", async function (mt, diagram) {\n  let matrices = diagram.seifert_form();\n  if (matrices.length !== 1) {\n    // the number of connected components is not 1\n    return Laurent.zero;\n  }\n  let A = matrices[0];\n  // calculate C = -tA+t^{-1}A^T\n  // (chose +/- convention to match Linkinfo's conway polynomials)\n  let C = [];\n  for (let i = 0; i < A.length; i++) {\n    C.push([]);\n    for (let j = 0; j < A.length; j++) {\n      C[i][j] = Laurent.add(Laurent.mul(Laurent.incl(-A[i][j]), Laurent.t),\n                            Laurent.mul(Laurent.incl(A[j][i]), Laurent.tinv));\n    }\n  }\n  // pre_poly is the normalized Alexander polynomial\n//  let pre_poly = det(Laurent, C);\n//  console.log(\"det\");\n//  console.log(ratfun_det(C));\n  let pre_poly = ratfun_det(C);\n  if (pre_poly.is_zero()) {\n    return Laurent.zero;\n  }\n  let z = Laurent.add(Laurent.t, Laurent.negate(Laurent.tinv));\n  let zpows = [];\n  let pow = Laurent.unit;\n  for (let i = 0; pow.minexp() >= pre_poly.minexp(); i++) {\n    zpows.push(pow);\n    pow = Laurent.mul(pow, z);\n  }\n  let conway = Laurent.zero;\n  for (let i = -pre_poly.minexp(); i >= 0; i--) {\n    if (pre_poly.is_zero()) {\n      // done\n      break;\n    }\n    if (-pre_poly.minexp() === i) {\n      let zpow = zpows[i];\n      let c = pre_poly._coeffs[0] / zpow._coeffs[0];\n      conway = conway.add(Laurent.fromCoeffs([c], i));\n      pre_poly = pre_poly.add(Laurent.incl(-c).mul(zpow));\n    }\n  }\n\n  return conway;\n});\n","import {assert, SimpleType, toString} from \"./util.mjs\";\nimport {gcd} from \"./integers.mjs\";\nimport {Poly} from \"./poly.mjs\";\nimport Q from \"./kq.mjs\";\nimport * as expr from \"./expr.mjs\";\n\n// A multivariable Laurent polynomial in infinitely many variables indexed x_0, x_1, etc.\n\n// They are stored in a way to try to save on memory allocations.\n//\n// An MLaurent is a list of numbers with packets of the following type\n//\n// ... 3 2.2 5 -1 2 ...\n//\n// representing the monomial 2.2 x_0^5 x_1^{-1} x_2^2\n//\n// The first number is the number of exponents, the second number is\n// the coefficient, and the remaining numbers are the exponents.\n\nfunction lex_compare_exps(p1, i1, p2, i2, exp2) {\n  /* Lexicographically compare the exponent lists for the packet at i1\n     in p1 and the packet at i2 in p2, where the second packet is\n     biased by the list exp2 of exponents ([] is \"no bias\"). */\n  let n1 = p1[i1], n2 = p2[i2],\n      n = Math.max(n1, n2, exp2.length);\n  for (let j = 0; j < n; j++) {\n    let p1v = j < n1 ? p1[i1+2+j] : 0,\n        p2v = j < n2 ? p2[i2+2+j] : 0;\n    if (j < exp2.length) {\n      p2v += exp2[j];\n    }\n    let c = p1v - p2v;\n    if (c !== 0) {\n      return c;\n    }\n  }\n  return 0;\n}\n\nconst empty_list = []; // save on memory allocations for immutable empty lists\n\nexport class MLaurent extends SimpleType {\n  copy() {\n    return this.slice();\n  }\n  is_zero() {\n    return this.length === 0;\n  }\n  add(p2, c=1, exp=empty_list) {\n    /* computes this + p2*c*x(exp) */\n    assert(p2 instanceof MLaurent);\n    if (c === 0) {\n      return this;\n    }\n    let p1 = this,\n        i1 = 0, i2 = 0,\n        result = new MLaurent();\n    function copy_in(p, i, coeff, exp) {\n      if (coeff !== 0) {\n        let np = p[i];\n        let n = Math.max(np, exp.length);\n        let nindex = result.length;\n        result.push(-1, coeff); // -1 is placeholder for adjusted n\n        for (let j = 0; j < n; j++) {\n          let e = j < np ? p[i+2+j] : 0;\n          e += j < exp.length ? exp[j] : 0;\n          result.push(e);\n        }\n        while (n > 0 && result[result.length-1] === 0) {\n          result.pop();\n          n--;\n        }\n        result[nindex] = n;\n      }\n      return 2 + p[i];\n    }\n    while (i1 < p1.length && i2 < p2.length) {\n      let comp = lex_compare_exps(p1, i1, p2, i2, exp);\n      if (comp === 0) {\n        i1 += copy_in(p1, i1, p1[i1+1] + c*p2[i2+1], empty_list);\n        i2 += 2 + p2[i2];\n      } else if (comp < 0) {\n        i1 += copy_in(p1, i1, p1[i1+1], empty_list);\n      } else {\n        i2 += copy_in(p2, i2, c*p2[i2+1], exp);\n      }\n    }\n    while (i1 < p1.length) {\n      i1 += copy_in(p1, i1, p1[i1+1], empty_list);\n    }\n    while (i2 < p2.length) {\n      i2 += copy_in(p2, i2, c*p2[i2+1], exp);\n    }\n    return result;\n  }\n  mul(p2) {\n    /* Multiplies this with p2.  Should run a bit faster if p2 is \"smaller\". */\n    assert(p2 instanceof MLaurent);\n    let p1 = this,\n        result = MLaurent.zero;\n    for (let i2 = 0; i2 < p2.length; i2 += 2 + p2[i2]) {\n      result = result.add(p1, p2[i2+1], p2.slice(i2+2, i2+2+p2[i2]));\n    }\n    return result;\n  }\n\n  *terms() {\n    for (let i = 0; i < this.length; i += 2 + this[i]) {\n      yield {coeff: this[i+1],\n             exps: this.slice(i+2, i+2+this[i])};\n    }\n  }\n\n  toExpr(variables=null, exp_divisor=1) {\n    if (variables === null) {\n      variables = i => \"x\" + i;\n    }\n    let e = expr.make_int_const(0);\n    for (let term of this.terms()) {\n      let eterm = expr.make_int_const(term.coeff);\n      term.exps.forEach((e, i) => {\n        eterm = expr.times(eterm, expr.pow(expr.make_var(variables(i)), expr.make_int_const(e, exp_divisor)));\n      });\n      e = expr.plus(e, eterm);\n    }\n    return e;\n  }\n\n  coeffs(n=1) {\n    // Returns a list of pairs, where the first of each pair is a polynomial in x0, x2, ... x(n-1), and the second is a polynomial in xn, x(n+1), ...\n\n    function lexcompare(expB, second) {\n      let nB = expB.length,\n          ns = second[0],\n          n = Math.max(nB, ns);\n      for (let j = 0; j < n; j++) {\n        let pB = j < nB ? expB[j] : 0,\n            ps = j < ns ? second[2+j] : 0;\n        let c = pB - ps; assert(!isNaN(c));\n        if (c !== 0) {\n          return c;\n        }\n      }\n      return 0;\n    }\n\n    let split = [];\n    for (let term of this.terms()) {\n      let exp = term.exps.slice();\n      let expA = exp.slice(0, n),\n          expB = new Array(n).fill(0).concat(exp.slice(n));\n      while (expB[expB.length - 1] === 0) {\n        expB.pop();\n      }\n      let polyA = MLaurent.make(expA.length, term.coeff, ...expA),\n          polyB = MLaurent.make(expB.length, 1, ...expB);\n      // locate a split with expB as the second part.\n      foundit: {\n        for (let i = 0; i < split.length; i++) {\n          let second = split[i][1];\n          let c = lexcompare(expB, second);\n          if (c < 0) {\n            split.splice(i, 0, [polyA, polyB]);\n            break foundit;\n          } else if (c === 0) {\n            split[i][0] = split[i][0].add(polyA);\n            break foundit;\n          }\n        }\n        split.push([polyA, polyB]);\n      }\n    }\n    return split;\n  }\n\n  static x(n, exp=1) {\n    assert(n === (0|n) && n >= 0);\n    let result = new MLaurent();\n    result.push(1+n, 1);\n    for (let i = 0; i < n; i++) {\n      result.push(0);\n    }\n    result.push(exp);\n    return result;\n  }\n\n  // Making this a NumberSystem\n  static add(a, b) {\n    return a.add(b);\n  }\n  static mul(a, b) {\n    return a.mul(b);\n  }\n  static negate(a) {\n    let result = a.copy();\n    for (let i = 0; i < result.length; i += 2 + result[i]) {\n      result[i+1] = -result[i+1];\n    }\n    return result;\n  }\n  static incl(v) {\n    assert(typeof v === \"number\");\n    if (v === 0) {\n      return new MLaurent();\n    } else {\n      return MLaurent.make(0, v);\n    }\n  }\n}\nMLaurent.zero = MLaurent.incl(0);\nMLaurent.unit = MLaurent.incl(1);\n\n\n// console.log(\"zero = \" + MLaurent.zero.toMathematica());\n// console.log(\"unit = \" + MLaurent.unit.toMathematica());\n\n// console.log(MLaurent.unit.add(MLaurent.unit, -1, [5,5,0,0,0]).toMathematica());\n\n// let p = MLaurent.unit.add(MLaurent.x(0));\n// console.log('x0 = ' + MLaurent.x(0).toMathematica());\n// console.log('x1 = ' + MLaurent.x(1).toMathematica());\n// console.log('x2 = ' + MLaurent.x(2).toMathematica());\n// console.log('p = ' + p.toMathematica());\n// console.log('p*p = ' + p.mul(p).toMathematica());\n// console.log('p*p-x1 = ' + p.mul(p).add(MLaurent.x(1),-1).toMathematica());\n// console.log(p.add(p, 1, [1]).toMathematica());\n","// A modification of the Temperley--Lieb planar algebra for calculating the arrow polynomial\n// See arrow.nb\n\nimport {assert, SimpleType, equal, compare, toString} from \"./util.mjs\";\nimport {MLaurent} from \"./mlaurent.mjs\";\n\nexport class ADir {\n  constructor(n, a, b) {\n    /* A path between edge ids a and b, weighted by the integer n. */\n    if (a > b) {\n      n = -n;\n      [a, b] = [b, a];\n    }\n    this.n = n;\n    this.a = a;\n    this.b = b;\n  }\n  equal(ad2) {\n    assert(ad2 instanceof ADir);\n    return this.n === ad2.n && this.a === ad2.a && this.b === ad2.b;\n  }\n  compare(ad2) {\n    assert(ad2 instanceof ADir);\n    let ad1 = this;\n    let c;\n    c = ad1.a - ad2.a;\n    if (c !== 0) return c;\n    c = ad1.b - ad2.b;\n    if (c !== 0) return c;\n    return ad1.n - ad2.n;\n  }\n  static make(n, a, b) {\n    assert(arguments.length === 3);\n    return new this(n, a, b);\n  }\n  toString() {\n    return \"ADir.make(\" + this.n + \", \" + this.a + \", \" + this.b + \")\";\n  }\n}\n\nconst loop = MLaurent.add(MLaurent.negate(MLaurent.x(0,2)),\n                          MLaurent.negate(MLaurent.x(0,-2)));\n\nfunction loopVal(n) {\n  assert(n === (0|n));\n  if (n === 0) {\n    return loop;\n  }\n  if (n < 0) n = -n;\n  let exp = new Array(n+1).fill(0);\n  exp[n] = 1;\n  return MLaurent.zero.add(loop, 1, exp);\n}\n\nexport function arrow_varnames(i) {\n  if (i === 0) {\n    return \"A\";\n  } else {\n    return \"K\" + i;\n  }\n}\n\nexport class ATerm {\n  constructor(coeffs, paths) {\n    /* A multivariable Laurent coefficient and a [ADir,...] list.  The ownership of the paths list is transferred to the ATerm. */\n    this.coeff = coeffs;\n    this.paths = paths;\n  }\n  static make(coeff, paths) {\n    /* Create a normalized ATerm. */\n    let term = new this(coeff, paths);\n    return term.normalize();\n  }\n  toString() {\n    return \"ATerm.make(\" + this.coeff + \", \" + toString(this.paths) + \")\";\n  }\n  equal(term2) {\n    assert(term2 instanceof ATerm);\n    return equal(this.coeff, term2.coeff) && equal(this.paths, term2.paths);\n  }\n  normalize() {\n    /* In-place normalization of the ATerm */\n    let coeff = this.coeff,\n        paths = this.paths;\n    let i = 0;\n    main_loop:\n    while (i < paths.length) {\n      let p1 = paths[i];\n      if (p1.a === p1.b) { // self-loop\n        coeff = coeff.mul(loopVal(p1.n/2));\n        paths.splice(i, 1);\n        continue main_loop;\n      }\n      let j = i + 1;\n      while (j < paths.length) {\n        let p2 = paths[j];\n        if (p1.b === p2.a) {\n          paths[i] = ADir.make(p1.n + p2.n, p1.a, p2.b);\n          paths.splice(j, 1);\n          continue main_loop;\n        }\n        if (p1.a === p2.b) {\n          paths[i] = ADir.make(p1.n + p2.n, p2.a, p1.b);\n          paths.splice(j, 1);\n          continue main_loop;\n        }\n        if (p1.b === p2.b) {\n          paths[i] = ADir.make(p1.n - p2.n, p1.a, p2.a);\n          paths.splice(j, 1);\n          continue main_loop;\n        }\n        if (p1.a === p2.a) {\n          paths[i] = ADir.make(p1.n - p2.n, p2.b, p1.b);\n          paths.splice(j, 1);\n          continue main_loop;\n        }\n        j++;\n      }\n      i++;\n    }\n    this.coeff = coeff;\n\n    paths.sort((p1, p2) => p1.a - p2.a); // this is lexicographic since all edge indices are distinct\n\n    return this;\n  }\n  scale(c) {\n    return new ATerm(this.coeff.mul(c), this.paths);\n  }\n}\n\nexport class ATL extends SimpleType {\n  // A list of ATerms\n  copy() {\n    return this.slice();\n  }\n  normalize() {\n    /* In-place normalization of the ATL. */\n\n    // Each ATerm is assumed to be pre-normalized\n    // this.forEach(term => term.normalize());\n\n    this.sort((term1, term2) => compare(term1.paths, term2.paths));\n\n    let i = 0;\n    while (i < this.length) {\n      let term = this[i];\n      let sum = term.coeff;\n      let j = i + 1;\n      while (j < this.length && compare(term.paths, this[j].paths) === 0) {\n        sum = sum.add(this[j].coeff);\n        j++;\n      }\n      if (sum.is_zero()) {\n        this.splice(i, j-i);\n      } else if (j === i + 1) {\n        i++;\n      } else {\n        this[i] = new ATerm(sum, term.paths);\n        if (j-i-1 > 0) {\n          this.splice(i+1, j-i-1);\n        }\n        i++;\n      }\n    }\n    return this;\n  }\n  add(atl2) {\n    assert(atl2 instanceof ATL);\n    // Reference implementation:\n    // return this.concat(atl2).normalize();\n\n    let atl1 = this;\n    let i1 = 0, i2 = 0;\n    let result = new ATL();\n\n    while (i1 < atl1.length && i2 < atl2.length) {\n      let t1 = atl1[i1], t2 = atl2[i2];\n\n      let comp = compare(t1.paths, t2.paths);\n      if (comp === 0) {\n        let coeff = t1.coeff.add(t2.coeff);\n        if (!coeff.is_zero()) {\n          result.push(new ATerm(coeff, t1.paths));\n        }\n        i1++;\n        i2++;\n      } else if (comp < 0) {\n        result.push(t1);\n        i1++;\n      } else {\n        result.push(t2);\n        i2++;\n      }\n    }\n    while (i1 < atl1.length) {\n      result.push(atl1[i1]);\n      i1++;\n    }\n    while (i2 < atl2.length) {\n      result.push(atl2[i2]);\n      i2++;\n    }\n    return result;\n  }\n\n  scale(c, paths) {\n    if (c.is_zero()) {\n      return ATL.zero;\n    }\n    if (paths.length === 0) {\n      return this.map(term => term.scale(c));\n    }\n    let result = this.map(term =>\n                          ATerm.make(term.coeff.mul(c),\n                                     term.paths.concat(paths)));\n    return result.normalize();\n  }\n\n  mul(atl2) {\n    assert(atl2 instanceof ATL);\n    let result = ATL.make();\n    atl2.forEach(term2 => {\n      result = result.add(this.scale(term2.coeff, term2.paths));\n    });\n    return result;\n    /*this.forEach(term1 => {\n      atl2.forEach(term2 => {\n        result.push(ATerm.make(term1.coeff.mul(term2.coeff),\n                               term1.paths.concat(term2.paths)));\n      });\n    });\n    return result.normalize();*/\n  }\n}\nATL.zero = ATL.make();\nATL.unit = ATL.make(ATerm.make(MLaurent.unit, [])).normalize();\n\n\n\n// for (let n = 0; n < 5; n++) {\n//   console.log(\"loopVal(\" + n + \") = \" + loopVal(n).toMathematica(arrow_varnames));\n// }\n\n// console.log(loopVal(2).mul(loopVal(3)).toMathematica(arrow_varnames));\n\n// console.log(''+ATL.unit);\n","// Arrow polynomial (Dye--Kauffman, Miyazawa)\n// See arrow.nb\n\nimport {assert, remove_value} from \"./util.mjs\";\nimport {MLaurent} from \"./mlaurent.mjs\";\nimport {PD, P, X, Xp, Xm, pd_eliminate_paths, pd_writhe_normalize, pd_first_free_id, pd_form_cabling, pd_renumber, pd_to_tangle} from \"./pd.mjs\";\nimport {KnotGraph} from \"./knotgraph.mjs\";\nimport {ATL, ATerm, ADir} from \"./atl.mjs\";\nimport {get_invariant, define_invariant} from \"./invariants.mjs\";\n\nfunction sort_pd_heuristic(pd, boundary=null) {\n  /* Sorts the entities in the PD so that each entity is chosen to minimize the next frontier. */\n  assert(pd instanceof PD);\n  pd = pd.slice();\n  //console.log(\"pre-sorted:\", toString(pd));\n\n  let frontier = boundary ? boundary.slice() : [];\n  let sorted = [];\n\n  while (pd.length > 0) {\n    // find \"best\" next entity, using the least-new-frontier heuristic\n    //console.log(\"frontier:\", toString(frontier));\n    let best_delta = Infinity;\n    let best_eid = null;\n    pd.forEach((entity, eid) => {\n      let delta = entity.length;\n      entity.forEach(i => {\n        if (frontier.indexOf(i) !== -1) {\n          delta -= 2;\n        }\n      });\n      if (delta < best_delta) {\n        best_delta = delta;\n        best_eid = eid;\n      }\n    });\n    let entity = pd[best_eid];\n    sorted.push(entity);\n    pd.splice(best_eid, 1);\n    //console.log(\"best:\", toString(entity));\n\n    // update frontier\n    entity.forEach(i => {\n      if (!remove_value(frontier, i)) {\n        frontier.push(i);\n      }\n    });\n  }\n  //console.log(\"sorted:\", toString(sorted));\n  return sorted;\n}\n\ndefine_invariant(\"arrow_bracket\", async function (mt, pd) {\n  if (!(pd instanceof PD)) {\n    return await get_invariant(\"arrow_bracket\", pd.get_pd(true));\n  }\n\n  let tangle = pd_to_tangle(pd);\n\n  if (tangle === null) {\n    return null;\n  }\n\n  pd = sort_pd_heuristic(tangle.pd, [tangle.boundary[0]]);\n\n  let bracket = ATL.unit;\n\n  for (let i = 0; i < pd.length; i++) {\n    if (i % 2 === 0) await mt.next_turn();\n    let entity = pd[i];\n    let atl = null;\n    if (entity instanceof P) {\n      let [a, b] = entity;\n      atl = ATL.make(ATerm.make(MLaurent.unit, [ADir.make(0, a, b)]));\n    } else if (entity instanceof Xp) {\n      let [a, b, c, d] = entity;\n      atl = ATL.make(ATerm.make(MLaurent.x(0, 1), [ADir.make( 0, a, b),\n                                                   ADir.make( 0, c, d)]),\n                     ATerm.make(MLaurent.x(0,-1), [ADir.make(-1, a, d),\n                                                   ADir.make( 1, c, b)]));\n      atl = atl.normalize();\n    } else if (entity instanceof Xm) {\n      let [a, b, c, d] = entity;\n      atl = ATL.make(ATerm.make(MLaurent.x(0,-1), [ADir.make( 0, b, c),\n                                                   ADir.make( 0, d, a)]),\n                     ATerm.make(MLaurent.x(0, 1), [ADir.make(-1, b, a),\n                                                   ADir.make( 1, d, c)]));\n      atl = atl.normalize();\n    } else {\n      assert(false);\n      throw new Error(\"Unexpected entity type\");\n    }\n    bracket = bracket.mul(atl);\n  }\n\n  let result = MLaurent.zero;\n  bracket.forEach(term => {\n    assert(term.paths.length === 1);\n    let path = term.paths[0];\n    assert(path.a === Math.min(...tangle.boundary));\n    assert(path.b === Math.max(...tangle.boundary));\n    let poly = term.coeff;\n    // multiply in last bit of weight from this last path\n    if (path.n !== 0) {\n      poly = poly.mul(MLaurent.x(Math.abs(path.n)/2));\n    }\n    result = result.add(poly);\n  });\n  return result;\n});\n\ndefine_invariant(\"cabled_arrow_poly\", async function (mt, diagram, cables) {\n  /* Computes the writhe-normalized arrow polynomial.  To get a \"jones\" polynomial, set A=T^-4. */\n  assert(cables > 0);\n  if (diagram instanceof KnotGraph) {\n    diagram = diagram.get_pd(true);\n  }\n  assert(diagram instanceof PD);\n\n  if (diagram.length === 0) {\n    return null;\n  }\n\n  let ab = await get_invariant(\"arrow_bracket\", pd_form_cabling(diagram, cables));\n  if (ab === null) {\n    return null;\n  }\n  return ab;\n});\n","/* The knot table.  As tables are loaded, this array is populated with\n * knot data.  The key is the knot name (accd to KnotInfo/LinkInfo) */\nconst table = new Map;\nself.knot_table = table;\n\n/* a object containing objects that describe how to load this part of\n * the table and whether it's loaded. */\nvar table_loaders = {};\n\n/* A list of files that have already been requested. */\nvar requested_files = [];\n\n/* A list of callbacks waiting on things being loaded */\nvar waiting = [];\n\nfunction mk_table_loader_key(components, crossing_number, property) {\n  return \"/\" + components + \"/\" + crossing_number + \"/\" + property;\n}\n\nfunction get_table_loader_entry(components, crossing_number, property) {\n  let key = mk_table_loader_key(components, crossing_number, property);\n  let entry = table_loaders[key];\n  if (!entry) {\n    entry = table_loaders[key] = {\n      file: null,\n      loaded: false\n    };\n  }\n  return entry;\n}\n\nself.provides_knot_data = function (file, components, crossing_numbers, properties) {\n  /* Declare a file as being able to provide some knot data. */\n  crossing_numbers.forEach(crossing_number => {\n    components.forEach(comps => {\n      properties.forEach(property => {\n        let entry = get_table_loader_entry(comps, crossing_number, property);\n        if (!entry.loaded && !entry.file) {\n          entry.file = file;\n        }\n      });\n    });\n  });\n};\n\nself.loaded_knot_data = function (components, crossing_numbers, properties) {\n  /* Record that some knot data has been loaded, to notify anyone who might be waiting for it. */\n  crossing_numbers.forEach(crossing_number => {\n    components.forEach(comps => {\n      properties.forEach(property => {\n        let entry = get_table_loader_entry(comps, crossing_number, property);\n        entry.loaded = true;\n      });\n    });\n  });\n  console.log(\"Loaded knot data crossings=%s; components=%s; properties=%s\", crossing_numbers.join(','), components.join(','), properties.join(','));\n\n  // Update keys for waiting things\n  var to_notify = [];\n  waiting.forEach(entry => {\n    entry.keys = entry.keys.filter(key => !table_loaders[key].loaded);\n    if (entry.keys.length === 0) {\n      to_notify.push(entry.callback);\n    }\n  });\n  waiting = waiting.filter(entry => entry.keys.length > 0);\n  // Notify things waiting on no more keys\n  to_notify.forEach(callback => callback());\n};\n\nself.add_knot_data = function (properties, data) {\n  /* Add data to the knot table.  (Does not notify anyone about the loaded data.  Use `loaded_knot_data`). */\n\n  for (let i = 0; i < data.length; i += 1 + properties.length) {\n    let name = data[i];\n    let entry = table.get(name);\n    if (!entry) {\n      entry = {name: name};\n      table.set(name, entry);\n    }\n    properties.forEach((property, j) => {\n      entry[property] = data[i + j + 1];\n    });\n  }\n};\n\nfunction needed_files(components, crossing_number, properties) {\n  /* Get a list of filenames that still need to be loaded. The `incomplete` key\n   refers to whether there are no data files that satisfy the request . */\n  let files = [];\n  let incomplete = false;\n  let missing_entries = [];\n  for (let c = 0; c <= crossing_number; c++) {\n    properties.forEach(property => {\n      let entry = get_table_loader_entry(components, c, property);\n      if (entry.file) {\n        if (!entry.loaded) {\n          if (!files.includes(entry.file)) {\n            files.push(entry.file);\n          }\n          missing_entries.push(mk_table_loader_key(components, c, property));\n        }\n      } else {\n        incomplete = true;\n      }\n    });\n  }\n  return {\n    files: files,\n    incomplete: incomplete,\n    missing_entries: missing_entries\n  };\n}\nself.needed_files = needed_files;\n\nfunction load_data(filename) {\n  if (!requested_files.includes(filename)) {\n    requested_files.push(filename);\n    let tag = document.createElement(\"script\");\n    tag.src = filename;\n    tag.type = \"text/javascript\";\n    tag.async = true;\n    document.getElementsByTagName('head')[0].appendChild(tag);\n  }\n}\n\nexport function get_knots(components, crossings, properties) {\n  /* Get list of all knots/links with at most the given number of crossings */\n\n  // First determine which files to load (if any)\n  let needed = needed_files(components, crossings, properties);\n  console.log(needed);\n\n  function _get_knots(resolve) {\n    let knots = [];\n    table.forEach(knot => {\n      if (knot.components === components && knot.crossing_number <= crossings) {\n        knots.push(knot);\n      }\n    });\n    resolve({\n      knots: knots,\n      incomplete: needed.incomplete\n    });\n  }\n\n  return new Promise((resolve, reject) => {\n    if (needed.files.length > 0) {\n      needed.files.forEach(filename => load_data(filename));\n      waiting.push({\n        callback: () => _get_knots(resolve),\n        keys: needed.missing_entries\n      });\n    } else {\n      _get_knots(resolve);\n    }\n  });\n}\n\nself.get_knots = get_knots;\n","import {get_invariant, define_invariant} from \"./invariants.mjs\";\nimport \"./jones.mjs\";\nimport \"./alexander.mjs\";\nimport \"./arrow.mjs\";\nimport {assert, equal} from \"./util.mjs\";\nimport * as knotdata from \"./knotdata.mjs\";\n\ndefine_invariant(\"identify_link\", async function (mt, diagram) {\n  let max_crossing = diagram.crossing_number();\n  let is_virtual = diagram.virtual_genus() > 0;\n\n  let names = [];\n  let incomplete = false;\n\n  if (is_virtual) {\n    incomplete = true;\n  } else {\n    let conway_poly = await get_invariant('conway_poly', diagram);\n    let conway_coeffs = [conway_poly.minexp()].concat(conway_poly.coeffs());\n    let conway_mirror = conway_coeffs.slice();\n    for (let i = 1; i < conway_mirror.length; i++) {\n      if ((conway_mirror[0] + i - 1) % 2 == 1) {\n        conway_mirror[i] = -conway_mirror[i];\n      }\n    }\n\n    let jones_poly = await get_invariant('jones_poly', diagram);\n    let jones_coeffs = jones_poly ? [jones_poly.minexp()].concat(jones_poly.coeffs()) : [0];\n    let jones_coeffs_rev = [-jones_coeffs.length + 2 - jones_coeffs[0]].concat(jones_coeffs.slice(1).reverse());\n\n    let table = await knotdata.get_knots(diagram.num_components(), max_crossing,\n                                         [\"conway\", \"jones\"]);\n    incomplete = table.incomplete;\n\n    let options = table.knots.filter(o => {\n      let matches = equal(conway_coeffs, o.conway) && equal(jones_coeffs, o.jones);\n      if (!matches) {\n        matches = equal(conway_mirror, o.conway) && equal(jones_coeffs_rev, o.jones);\n      }\n      return matches;\n    });\n\n    names = options.map(o => {\n      let obj = {name: o.name};\n      if (o.katlas) {\n        obj.katlas = \"http://katlas.math.toronto.edu/wiki/\" + o.katlas;\n      }\n      return obj;\n    });\n  }\n\n  return {\n    names: names,\n    incomplete: incomplete\n  };\n});\n","export const WIDTH = 800;\nexport const HEIGHT = 800;\nexport const PAINT_RADIUS = 1;\nexport const PAINT_GAP = 2;\nexport const ERASE_RADIUS = 5;\nexport const MIN_LINE_LENGTH = 2; // between mouse events\nexport const MAX_PPREV_DIST = 2*PAINT_RADIUS+1 + 2*PAINT_GAP; // for pencil-under\nexport const SPUR_LENGTH = 5; // the maximum-length spurs that will be auto-deleted in clean-up\nexport const ERROR_RADIUS = 6.5; // the radius of the red \"error circles\"\n//export const MAX_GAP_LENGTH = 70; // for under-crossings and gaps in lines\n\nexport const DIAGRAM_LINE_WIDTH = 3; // the width of the lines when drawing a diagram\nexport const CROSSING_GAP = 8; // the gap for drawing crossings\nexport const CROSSING_CHANGE_RADIUS = 10; // the radius of the disk shown when hovering over a crossing\nexport const VIRTUAL_RADIUS = 8; // the radius for the circle at a virtual crossing\n\n/* Colors for link components */\nexport const palette = [\n  0x000000,\n  0x0000ff,\n  0xff0000,\n  0x00cc00,\n  0x888888,\n  0x00aaee,\n  0x00ff00,\n  0xee00ee,\n  0xee8800,\n  0xffee00\n];\n","import {assert, hex_to_rgb, toString} from \"./util.mjs\";\nimport {KnotGraph} from \"./knotgraph.mjs\";\nimport {P,X,Virtual} from \"./pd.mjs\";\nimport {Point, segment_distance, point_along} from \"./geom2d.mjs\";\nimport {CROSSING_CHANGE_RADIUS, DIAGRAM_LINE_WIDTH, CROSSING_GAP, VIRTUAL_RADIUS, palette} from \"./constants.mjs\";\nimport {KnotRasterView} from \"./KnotRasterView.mjs\";\nimport {get_invariant} from \"./invariants.mjs\";\nimport {Laurent} from \"./laurent.mjs\";\nimport Q from \"./kq.mjs\";\nimport {signature} from \"./matrix.mjs\";\nimport {arrow_varnames} from \"./atl.mjs\";\nimport * as expr from \"./expr.mjs\";\n\nlet global_tool_state = {\n  tool: \"crossing-change\"\n};\n\nlet default_pd_type = \"KnotTheory\";\nlet default_laurent_type = \"DOM\";\n\nlet global_details_states = {\n  \"linking-matrix\": true,\n  \"seifert-matrix\": false,\n  \"alexander-module\": false\n};\nfunction attach_details_handler(name, $details) {\n  let initial_state = Boolean(global_details_states[name]);\n  $details.prop(\"open\", initial_state);\n  $details.on(\"toggle\", e => {\n    global_details_states[name] = $details.prop(\"open\");\n  });\n}\n\nexport class KnotDiagramView {\n  constructor(width, height, diagram) {\n    assert(width > 0);\n    assert(height > 0);\n    assert(diagram instanceof KnotGraph);\n    this.width = width;\n    this.height = height;\n    this.diagram = diagram;\n\n    this.c = new Point(0, 0);\n    this.zoom = 1;\n    this.moving = null; // if we are currently translating the diagram, is a Point\n\n    this.mode_name = \"Diagrams\"; // constant\n  }\n\n  copy() {\n    let view = new KnotDiagramView(this.width, this.height, this.diagram.copy());\n    view.c = this.c.copy();\n    view.zoom = this.zoom;\n    return view;\n  }\n\n  reset_zoom() {\n    this.c = new Point(0, 0);\n    this.zoom = 1;\n  }\n\n  mouse_to_pt(pt) {\n    assert(pt instanceof Point);\n    return new Point(this.zoom*(pt.x - this.c.x), this.zoom*(pt.y - this.c.y));\n  }\n\n  find_closest_crossing(pt) {\n    /* Returns a vertex id for the diagram, or null.  Gets a non-P vertex. */\n    let diag = this.diagram;\n    let dist = CROSSING_CHANGE_RADIUS*this.zoom;\n    let closest = null;\n    diag.verts.forEach((vert, vid) => {\n      if (!(diag.adjs[vid] instanceof P)) {\n        let d = Point.dist(pt, vert);\n        if (d <= dist) {\n          dist = d;\n          closest = vid;\n        }\n      }\n    });\n    return closest;\n  }\n  \n  draw_crossing_disk(ctxt, cpt) {\n    let getX = (x) => {\n      return x/this.zoom+this.c.x;\n    };\n    let getY = (y) => {\n      return y/this.zoom+this.c.y;\n    };\n    ctxt.save();\n    ctxt.fillStyle = \"#0000ff\";\n    ctxt.globalAlpha = 0.2;\n    ctxt.beginPath();\n    ctxt.arc(getX(cpt.x)+0.5, getY(cpt.y)+0.5, CROSSING_CHANGE_RADIUS, 0, 2*Math.PI);\n    ctxt.fill();\n    ctxt.restore();\n  }\n\n  find_closest_circuit(pt) {\n    /* Returns a list of darts of the closest circuit to the given point. */\n    let diag = this.diagram;\n    let dist = 3*DIAGRAM_LINE_WIDTH*this.zoom;\n    let closest_eid = null;\n    diag.edges.forEach((edge, eid) => {\n      let d = segment_distance(diag.verts[edge[0]], diag.verts[edge[1]], pt);\n      if (d <= dist) {\n        dist = d;\n        closest_eid = eid;\n      }\n    });\n    if (closest_eid == null) {\n      return null;\n    }\n    return diag.dart_circuit(closest_eid+1);\n  }\n  highlight_circuit(ctxt, circuit) {\n    let getX = (x) => {\n      return x/this.zoom+this.c.x;\n    };\n    let getY = (y) => {\n      return y/this.zoom+this.c.y;\n    };\n\n    let diag = this.diagram;\n    let pts = circuit.map(dart => diag.verts[diag.dart_start(dart)]);\n    ctxt.save();\n    ctxt.strokeStyle = \"#0000ff\";\n    ctxt.globalAlpha = 0.2;\n    ctxt.lineWidth = 3*DIAGRAM_LINE_WIDTH;\n    ctxt.beginPath();\n    pts.forEach(cpt => {\n      ctxt.lineTo(getX(cpt.x)+0.5, getY(cpt.y)+0.5);\n    });\n    ctxt.closePath();\n    ctxt.stroke();\n    ctxt.restore();\n\n  }\n\n  mousedown(pt, e, undo_stack, ctxt) {\n    pt = this.mouse_to_pt(pt);\n    let tool = global_tool_state.tool;\n    if (this.moving) {\n      tool = \"\";\n    }\n    // In each tool, fall-through means the view movement tool should take over.\n    // An explicit return is necessary to prevent this.\n    if (tool === \"crossing-change\") {\n      let closest = this.find_closest_crossing(pt);\n      if (closest !== null) {\n        let view = this.copy();\n        let adj = view.diagram.adjs[closest];\n        if (adj instanceof X) {\n          adj.push(adj.shift());\n        } else if (adj instanceof Virtual) {\n          view.diagram.adjs[closest] = X.make(...adj);\n        } else {\n          assert(false);\n        }\n        undo_stack.push(view);\n        view.draw_crossing_disk(ctxt, view.diagram.verts[closest]);\n        return;\n      }\n    } else if (tool === \"virtual-crossing\") {\n      let closest = this.find_closest_crossing(pt);\n      if (closest !== null) {\n        let view = this.copy();\n        let adj = view.diagram.adjs[closest];\n        if (adj instanceof X) {\n          view.diagram.adjs[closest] = Virtual.make(...adj);\n        } else if (adj instanceof Virtual) {\n          view.diagram.adjs[closest] = X.make(...adj);\n        } else {\n          assert(false);\n        }\n        undo_stack.push(view);\n        view.draw_crossing_disk(ctxt, view.diagram.verts[closest]);\n        return;\n      }\n    } else if (tool === \"toggle-orientation\") {\n      let circuit = this.find_closest_circuit(pt);\n      if (circuit !== null) {\n        let view = this.copy();\n        view.diagram.reverse_orientation(circuit[0]);\n        undo_stack.push(view);\n        view.highlight_circuit(ctxt, circuit);\n        return;\n      }\n    } else if (tool === \"delete-component\") {\n      let circuit = this.find_closest_circuit(pt);\n      if (circuit !== null) {\n        let view = this.copy();\n        view.diagram.delete_component(circuit[0]);\n        undo_stack.push(view);\n        return;\n      }\n    } else if (tool.startsWith(\"set-color-\")) {\n      let color = +tool.slice(\"set-color-\".length);\n      let circuit = this.find_closest_circuit(pt);\n      if (circuit !== null) {\n        let view = this.copy();\n        circuit.forEach(dart => {\n          let edge = view.diagram.dart_edge(dart);\n          edge[2] = color;\n        });\n        undo_stack.push(view);\n        view.highlight_circuit(ctxt, circuit);\n        return;\n      }\n    }\n    // Fell through, so set up view translation.\n    if (e.button === 0) {\n      this.moving = pt;\n    }\n  }\n  mousemove(pt, e, undo_stack, ctxt) {\n    pt = this.mouse_to_pt(pt);\n    if (this.moving) {\n      let old_c = this.c.copy();\n      this.c.x += (pt.x - this.moving.x) / this.zoom;\n      this.c.y += (pt.y - this.moving.y) / this.zoom;\n      this.paint(ctxt);\n      this.c = old_c;\n      return;\n    }\n    let tool = global_tool_state.tool;\n    if (tool === \"crossing-change\") {\n      this.paint(ctxt);\n      let closest = this.find_closest_crossing(pt);\n      if (closest !== null) {\n        this.draw_crossing_disk(ctxt, this.diagram.verts[closest]);\n      }\n    } else if (tool === \"virtual-crossing\") {\n      this.paint(ctxt);\n      let closest = this.find_closest_crossing(pt);\n      if (closest !== null) {\n        this.draw_crossing_disk(ctxt, this.diagram.verts[closest]);\n      }\n    } else if (tool === \"toggle-orientation\") {\n      this.paint(ctxt);\n      let circuit = this.find_closest_circuit(pt);\n      if (circuit !== null) {\n        this.highlight_circuit(ctxt, circuit);\n      }\n    } else if (tool === \"delete-component\") {\n      this.paint(ctxt);\n      let circuit = this.find_closest_circuit(pt);\n      if (circuit !== null) {\n        this.highlight_circuit(ctxt, circuit);\n      }\n    } else if (tool.startsWith(\"set-color-\")) {\n      this.paint(ctxt);\n      let circuit = this.find_closest_circuit(pt);\n      if (circuit !== null) {\n        this.highlight_circuit(ctxt, circuit);\n      }\n    }\n  }\n  mouseup(pt, e, undo_stack, ctxt) {\n    pt = this.mouse_to_pt(pt);\n    if (this.moving) {\n      this.c.x += (pt.x - this.moving.x) / this.zoom;\n      this.c.y += (pt.y - this.moving.y) / this.zoom;\n      this.moving = null;\n      this.paint(ctxt);\n      return;\n    }\n    let tool = global_tool_state.tool;\n  }\n  mousewheel(pt, e, undo_stack, ctxt) {\n    if (this.moving) {\n      // Let's not try interleaving these operations\n      return;\n    }\n    let delta = Math.sign(e.deltaY);\n    let kpt = this.mouse_to_pt(pt);\n    this.zoom *= Math.pow(1.05, delta);\n    let zkpt = this.mouse_to_pt(pt);\n    this.c.x += (zkpt.x - kpt.x) / this.zoom;\n    this.c.y += (zkpt.y - kpt.y) / this.zoom;\n    this.paint(ctxt);\n  }\n  toolbox(undo_stack) {\n    let $div = this.$div = Q.div();\n\n    let diagram = this.diagram;\n\n    /* Modification tools */\n    Q.create(\"h2\").append(\"Modification tools\").appendTo($div);\n    let $tools = Q.div().appendTo($div);\n\n    let $crossing_change = Q.span(Q.span({className:\"icon24-crossing\"}))\n        .addClass(\"icon-button\")\n        .prop(\"data-tool\", \"crossing-change\")\n        .prop(\"title\", \"Change crossing type\")\n        .appendTo($tools);\n\n    let $toggle_virtual = Q.span(Q.span({className:\"icon24-virtual-crossing\"}))\n        .addClass(\"icon-button\")\n        .prop(\"data-tool\", \"virtual-crossing\")\n        .prop(\"title\", \"Toggle virtual crossing\")\n        .appendTo($tools);\n\n    let $toggle_orientation = Q.span(Q.span({className:\"icon24-two-arrows\"}))\n        .addClass(\"icon-button\")\n        .prop(\"data-tool\", \"toggle-orientation\")\n        .prop(\"title\", \"Toggle component orientation\")\n        .appendTo($tools);\n\n    let $eraser = Q.span(Q.span({className:\"icon24-trash\"}))\n        .addClass(\"icon-button\")\n        .prop(\"data-tool\", \"delete-component\")\n        .prop(\"title\", \"Delete component\")\n        .appendTo($tools);\n\n    $tools.append(Q.create(\"br\"));\n    palette.forEach((hex, i) => {\n      let $b = Q.span().addClass(\"icon-button\")\n          .prop(\"data-tool\", \"set-color-\" + (i+1))\n          .prop(\"title\", \"Recolor component to color \" + (i+1))\n          .appendTo($tools);\n      let $bs = Q.span(\" \").addClass(\"icon-color\")\n          .css(\"background\", hex_to_rgb(hex))\n          .appendTo($b);\n    });\n\n    this.update_tool = (toolname) => {\n      $div.query(\".icon-button\").forEach($e => {\n        let button_tool = $e.prop(\"data-tool\");\n        if (typeof button_tool === \"string\") {\n          $e.toggleClass(\"active\", button_tool === toolname);\n        }\n      });\n    };\n    this.update_tool(global_tool_state.tool);\n\n    $tools.on(\"click\", e => {\n      let el = e.target.closest('.icon-button');\n      if (el) {\n        let tool = Q(el).prop('data-tool');\n        if (typeof tool === \"string\") {\n          e.preventDefault();\n          e.stopPropagation();\n          global_tool_state.tool = tool;\n          this.update_tool(tool);\n        }\n      }\n    });\n\n    let $mirror = Q.create(\"input\")\n        .prop(\"type\", \"button\")\n        .value(\"Mirror\")\n        .prop(\"title\", \"Change the types of all crossings\")\n        .appendTo($div);\n    $mirror.on(\"click\", e => {\n      let view = this.copy();\n      view.diagram.adjs.forEach(a => {\n        a.push(a.shift());\n      });\n      undo_stack.push(view);\n    });\n\n    let $invert = Q.create(\"input\")\n        .prop(\"type\", \"button\")\n        .value(\"Invert\")\n        .prop(\"title\", \"Change orientations of each component\")\n        .appendTo($div);\n    $invert.on(\"click\", e => {\n      let view = this.copy();\n      view.diagram.edges.forEach(edge => {\n        let t_vert = edge[0];\n        edge[0] = edge[1];\n        edge[1] = t_vert;\n      });\n      view.diagram.adjs = view.diagram.adjs.map(a => a.map(d => -d));\n      undo_stack.push(view);\n    });\n\n    let $alternating = Q.create(\"input\")\n        .prop(\"type\", \"button\")\n        .value(\"Make alternating\")\n        .prop(\"title\", \"Change types of crossings to make an alternating diagram\")\n        .appendTo($div);\n    $alternating.on(\"click\", e => {\n      let view = this.copy();\n      view.diagram.make_alternating();\n      undo_stack.push(view);\n    });\n    $div.append(Q.create(\"input\", {type: \"button\",\n                                   title: \"Assign distinct colors to each component\"})\n                .value(\"Auto-color\")\n                .on(\"click\", e => {\n                  let view = this.copy();\n                  view.diagram.auto_color(palette.length);\n                  undo_stack.push(view);\n                }));\n\n    $div.append(Q.create(\"br\"));\n\n    let $to_drawing = Q.create(\"input\")\n        .prop(\"type\", \"button\")\n        .value(\"Convert to drawing\")\n        .prop(\"title\", \"Convert the diagram back into a drawing for free-form editing (no round-trip guarantee)\")\n        .appendTo($div);\n    $to_drawing.on(\"click\", e => {\n      let canvas = document.createElement(\"canvas\");\n      canvas.width = this.width;\n      canvas.height = this.height;\n      let ctxt = canvas.getContext(\"2d\");\n      this.paint(ctxt, false, false);\n      let view = new KnotRasterView(this.width, this.height);\n      view.fromImage(ctxt.getImageData(0, 0, this.width, this.height));\n      undo_stack.push(view);\n    });\n\n    $div.append(Q.create(\"h2\").append(\"Isotopy tools\"));\n\n    let $beautify = Q.create(\"input\")\n        .prop(\"type\", \"button\")\n        .value(\"Beautify\")\n        .prop(\"title\", \"Redraw using a Tutte embedding of a subdivision of the diagram\")\n        .appendTo($div);\n    $beautify.on(\"click\", e => {\n      let view = this.copy();\n      view.diagram.beautify();\n      view.reset_zoom();\n      undo_stack.push(view);\n    });\n\n    let $reset_zoom = Q.create(\"input\")\n        .prop(\"type\", \"button\")\n        .value(\"Reset view\")\n        .prop(\"title\", \"Reset center of diagram and zoom level\")\n        .appendTo($div);\n    $reset_zoom.on(\"click\", e => {\n      let view = this.copy();\n      view.reset_zoom();\n      undo_stack.push(view);\n    });\n\n    $div.append(Q.create(\"hr\"));\n\n    let $laurent_types = Q.create(\"form\", {className: \"inline-form\"},\n                                  Q.create(\"label\",\n                                           {title: \"Pretty print data using fancy HTML\"},\n                                           Q.create(\"input\", {type: \"radio\",\n                                                              name: \"laurent-type\",\n                                                              value: \"DOM\"}),\n                                           \"Pretty\"),\n                                  Q.create(\"label\",\n                                           {title: \"Print data in a Mathematica-compatible format\"},\n                                           Q.create(\"input\", {type: \"radio\",\n                                                              name: \"laurent-type\",\n                                                              value: \"Mathematica\"}),\n                                           \"Mathematica\"));\n    $laurent_types[0].elements['laurent-type'].value = default_laurent_type;\n    let laurent_handlers = [];\n    $laurent_types.on(\"change\", function (e) {\n      let name = this.elements['laurent-type'].value;\n      $laurent_types[0].elements['laurent-type'].value = default_laurent_type = name;\n      laurent_handlers.forEach(h => h());\n    });\n    $div.append(Q.create(\"div\", {style: \"float: right;\"},\n                         $laurent_types));\n\n\n    $div.append(Q.create(\"h2\").append(\"Diagram information\"));\n\n    let virtual_crossings = this.diagram.virtual_crossing_number();\n    let virtual_genus = this.diagram.virtual_genus();\n\n    let $idiv = Q.create(\"div\").prop(\"id\", \"diag-info\").appendTo($div);\n    {\n      let $table = Q.create(\"table\", {className:\"diag-props\"});\n      $idiv.append($table);\n\n      $table.append(Q.create(\"tr\",\n                             Q.create(\"th\", \"Crossings:\"),\n                             Q.create(\"td\", ''+this.diagram.crossing_number())));\n\n      if (virtual_crossings > 0) {\n        $table.append(Q.create(\"tr\",\n                               Q.create(\"th\", \"Virtual crossings:\"),\n                               Q.create(\"td\", ''+virtual_crossings)));\n      }\n\n      $table.append(Q.create(\"tr\",\n                             Q.create(\"th\", \"Components:\"),\n                             Q.create(\"td\", ''+this.diagram.num_components())));\n\n      $table.append(Q.create(\"tr\",\n                             Q.create(\"th\", \"Writhe:\"),\n                             Q.create(\"td\", ''+this.diagram.writhe())));\n\n      $table.append(Q.create(\"tr\",\n                             Q.create(\"th\", \"Bridges:\"),\n                             Q.create(\"td\", ''+this.diagram.bridge_number())));\n\n      if (virtual_crossings > 0) {\n        $table.append(Q.create(\"tr\", {title: \"The virtual genus for this diagram\"},\n                               Q.create(\"th\", \"Virtual genus:\"),\n                               Q.create(\"td\", ''+virtual_genus)));\n      }\n\n      if (virtual_genus === 0) {\n        $table.append(Q.create(\"tr\", {title: \"The canonical Seifert genus for this diagram\"},\n                               Q.create(\"th\", \"Can. genus:\"),\n                               Q.create(\"td\", ''+this.diagram.genus())));\n      }\n\n      let props = [];\n      if (diagram.is_alternating()) {\n        props.push(\"alternating\");\n      }\n\n      if (virtual_genus === 0) {\n        let turaev = this.diagram.turaev();\n        $table.append(Q.create(\"tr\",\n                               Q.create(\"th\", \"Turaev genus:\"),\n                               Q.create(\"td\", ''+turaev.genus)));\n        if (turaev.plus && turaev.minus) {\n          props.push(\"adequate\");\n        } else if (turaev.plus) {\n          props.push(\"plus-adequate\");\n        } else if (turaev.minus) {\n          props.push(\"minus-adequate\");\n        }\n      }\n\n      $table.append(Q.create(\"tr\",\n                             Q.create(\"th\", \"Properties:\"),\n                             Q.create(\"td\", props.length > 0 ? props.join(\", \") : Q.create(\"em\", \"none\"))));\n\n      let $lm = Q.create(\"details\",\n                         {title: \"Pairwise linking numbers between colored components. Self linking number is writhe.\"},\n                         Q.create(\"summary\", \"Linking matrix\"))\n          .appendTo($idiv);\n      attach_details_handler(\"linking-matrix\", $lm);\n      {\n        let matrix = this.diagram.linking_matrix();\n        let comps = Array.from(matrix.keys());\n        comps.sort((a, b) => a-b);\n        let $table = Q.create(\"table\").addClass(\"linking-matrix\");\n        comps.forEach(j => {\n          let $tr = Q.create(\"tr\").appendTo($table);\n          comps.forEach(i => {\n            let $td = Q.create(\"td\").appendTo($tr);\n            $td.append(''+(matrix.get(j).get(i)||0));\n            if (i === j) {\n              $td.prop(\"style\").color = \"white\";\n              $td.prop(\"style\").background = hex_to_rgb(palette[i-1]);\n            }\n          });\n        });\n        $lm.append($table);\n      }\n    }\n\n    if (virtual_genus === 0) {\n      let $sf = Q.create(\"details\",\n                         {title:\"There is one Seifert linking matrix per connected component of the diagram.\"},\n                         Q.create(\"summary\", \"Seifert form\"))\n          .appendTo($idiv);\n\n      attach_details_handler(\"seifert-matrix\", $sf);\n\n      let $sf_div = Q.create(\"div\").appendTo($sf);\n\n      function mk_seifert_matrix() {\n        $sf_div.empty();\n        switch (default_laurent_type) {\n        case \"DOM\":\n          diagram.seifert_form().forEach(matrix => {\n            let $table = Q.create(\"table\", {className:\"seifert-matrix\"});\n            matrix.forEach(row => {\n              let $tr = Q.create(\"tr\").appendTo($table);\n              row.forEach(c => {\n                $tr.append(Q.create(\"td\", ''+c));\n              });\n            });\n            $sf_div.append($table);\n          });\n          break;\n        case \"Mathematica\":\n        default:\n          diagram.seifert_form().forEach(matrix => {\n            let m = '{' + matrix.map(row => '{' + row.map(c => ''+c).join(', ') + '}').join(', ') + '}';\n            $sf_div.append(Q.create('div').append(m));\n          });\n          break;\n        }\n      }\n\n      mk_seifert_matrix();\n      laurent_handlers.push(mk_seifert_matrix);\n    }\n\n    // let $sig;\n    // $table.append(Q.create(\"tr\", {title: \"The program currently uses floating point arithmetic to compute eigenvalues, hence the warning.\"},\n    //                        Q.create(\"th\", \"Signature:\"),\n    //                        $sig = Q.create(\"td\", ''+the_signature+\" \",\n    //                                        Q.create(\"em\", \"(warning: estimated)\"))));\n\n\n    let $pd = Q.create(\"textarea\")\n        .attr(\"readonly\", true)\n        .addClass(\"code-data\");\n    let $pdtypes = Q.create(\"form\", {className: \"inline-form\"},\n                            Q.create(\"label\",\n                                     Q.create(\"input\", {type: \"radio\",\n                                                        name: \"pd-type\",\n                                                        value: \"KnotTheory\"}),\n                                     \"KnotTheory\"),\n                            Q.create(\"label\",\n                                     Q.create(\"input\", {type: \"radio\",\n                                                        name: \"pd-type\",\n                                                        value: \"KnotTheory-oriented\"}),\n                                     \"Oriented KnotTheory\"),\n                            Q.create(\"label\",\n                                     Q.create(\"input\", {type: \"radio\",\n                                                        name: \"pd-type\",\n                                                        value: \"SnapPy\"}),\n                                     \"SnapPy\"),\n                           );\n    function pd_change(name) {\n      $pdtypes[0].elements['pd-type'].value = default_pd_type = name;\n      try {\n        if (name === \"KnotTheory\") {\n          $pd.value(diagram.get_pd().toMathematica());\n        } else if (name === \"KnotTheory-oriented\") {\n          $pd.value(diagram.get_pd(true).toMathematica());\n        } else if (name === \"SnapPy\") {\n          $pd.value(diagram.get_pd().toSnappy());\n        }\n      } catch (x) {\n        $pd.value(\"\" + x);\n      }\n    }\n    $pdtypes.on(\"change\", function (e) {\n      let name = this.elements['pd-type'].value;\n      pd_change(name);\n    });\n    $idiv.append(Q.create(\"p\")\n                 .append(\"PD: \")\n                 .append($pdtypes, Q.create(\"br\"), $pd));\n    pd_change(default_pd_type);\n\n    if (virtual_genus === 0) {\n      let dt = diagram.get_dt();\n      if (dt) {\n        $idiv.append(Q.create(\"p\", {title: \"The Dowker-Thistlethwaite code for the knot.\"})\n                     .append(\"DT: \" + toString(dt)));\n      }\n    }\n\n    function laurent_invariant(promise, div, variable=\"t\", exp_divisor=1) {\n      div.append(Q.create(\"em\", \"calculating...\"));\n      promise.then(poly => {\n        let e = poly.toExpr(variable, exp_divisor);\n        function show_poly() {\n          div.empty();\n          switch (default_laurent_type) {\n          case \"DOM\":\n            div.append(e.toDOM());\n            break;\n          case \"Mathematica\":\n          default:\n            div.append(e.toMathematica());\n            break;\n          }\n        }\n        if (poly) {\n          show_poly();\n          laurent_handlers.push(show_poly);\n        } else {\n          div.append(\"n/a\");\n        }\n      }, err => {\n        console.log(err);\n        div.addClass(\"calc-error\");\n        div.append('Error: '+err);\n      });\n    }\n\n    function mlaurent_invariant(promise, div, variables, exp_divisor=1) {\n      div.append(Q.create(\"em\", \"calculating...\"));\n      promise.then(poly => {\n        let split = expr.make_int_const(0);\n        poly.coeffs().forEach(pair => {\n          split = expr.plus(split,\n                            expr.times(pair[0].toExpr(variables, exp_divisor),\n                                       pair[1].toExpr(variables)));\n        });\n        function show_poly() {\n          div.empty();\n          switch (default_laurent_type) {\n          case \"DOM\":\n            div.append(split.toDOM());\n            break;\n          case \"Mathematica\":\n          default:\n            div.append(split.toMathematica());\n            break;\n          }\n        }\n        if (poly) {\n          show_poly();\n          laurent_handlers.push(show_poly);\n        } else {\n          div.append(\"n/a\");\n        }\n      }, err => {\n        console.log(err);\n        div.addClass(\"calc-error\");\n        div.append('Error: '+err);\n      });\n    }\n\n    var $kb_div;\n    $idiv.append(Q.create(\"p\")\n                 .append(\"Kauffman bracket:\")\n                 .append($kb_div = Q.create(\"div\")));\n    laurent_invariant(get_invariant(\"kauffman_bracket\", this.diagram), $kb_div, \"A\");\n\n    $idiv.append(Q.create(\"h2\").append(\"Identification\"));\n    let $ident = Q.create(\"p\").appendTo($idiv);\n    get_invariant('identify_link', this.diagram).then(\n      res => {\n        if (res.names.length === 0) {\n          $ident.append(\"Unknown link\");\n        } else {\n          $ident.append(\"Candidates: \");\n          res.names.forEach((c, i) => {\n            if (i > 0) {\n              $ident.append(\", \");\n            }\n            if (c.katlas) {\n              $ident.append(Q.create(\"a\", {href: c.katlas,\n                                           target: \"_blank\"},\n                                     c.name));\n            } else {\n              $ident.append(c.name);\n            }\n          });\n        }\n        if (res.incomplete) {\n          $ident.append(\" (warning: possibly incomplete)\");\n        }\n      },\n      err => {\n        console.error(err);\n        $ident.addClass(\"calc-error\");\n        $ident.append('Error: '+err);\n      }\n    );\n\n    $idiv.append(Q.create(\"h2\").append(\"Invariants\"));\n\n    {\n      let $table = Q.create(\"table\", {className:\"diag-props\"});\n      $idiv.append($table);\n\n      let $det;\n      $table.append(Q.create(\"tr\",\n                             Q.create(\"th\", \"Determinant:\"),\n                             $det = Q.create(\"td\")));\n\n      (async function () {\n        let poly = await get_invariant(\"alexander_poly\", diagram, 0);\n        let coeffs = poly.coeffs();\n        let det = 0;\n        for (let i = 0; i < coeffs.length; i++) {\n          det += coeffs[i] * (2 * (i % 2) - 1);\n        }\n        $det.append('' + Math.abs(det));\n      })();\n\n\n      let next_cjones = 1;\n\n      let $nextJones = Q.create(\"input\")\n          .prop(\"type\", \"button\")\n          .value(\"Next\")\n          .prop(\"title\", \"Compute next cabled Jones polynomial\");\n      $nextJones.on(\"click\", e => {\n        do_cjones(next_cjones++);\n      });\n\n      let $jones = Q.create(\"div\");\n      $idiv.append(Q.create(\"p\")\n                   .append(\"(Cabled) Jones polynomials: \")\n                   .append($nextJones)\n                   .append($jones));\n\n      const do_cjones = (i) => {\n        next_cjones = i + 1;\n        let $cj = Q.create(\"span\");\n        $jones.append(Q.create(\"div\").append(\"V\", Q.create(\"sub\", i), \" = \", $cj));\n        laurent_invariant(get_invariant('cabled_jones_poly', this.diagram, i), $cj, \"t\", -4);\n      };\n\n      do_cjones(1);\n\n      if (virtual_genus > 0) {\n\n        let next_carrow = 1;\n\n        let $next_carrow = Q.create(\"input\")\n            .prop(\"type\", \"button\")\n            .value(\"Next\")\n            .prop(\"title\", \"Compute next cabled Arrow polynomial\");\n        $next_carrow.on(\"click\", e => {\n          do_carrow(next_carrow++);\n        });\n\n        let $carrow = Q.create(\"div\");\n        $idiv.append(Q.create(\"p\")\n                     .append(\"(Cabled) Arrow polynomials: \")\n                     .append($next_carrow)\n                     .append($carrow));\n\n        const do_carrow = (i) => {\n          next_carrow = i + 1;\n          let $cj = Q.create(\"span\");\n          $carrow.append(Q.create(\"div\").append(\"A\", Q.create(\"sub\", i), \" = \", $cj));\n          function arrow_varnames_t(i) {\n            if (i === 0) {\n              return \"t\";\n            } else {\n              return \"K\" + i;\n            }\n          }\n          mlaurent_invariant(get_invariant('cabled_arrow_poly', this.diagram, i), $cj, arrow_varnames_t, -4);\n        };\n\n        do_carrow(1);\n\n      }\n\n\n      if (0) {\n        let wp = get_invariant(this.diagram, 'wirtinger_presentation');\n        let gens = Q.create(\"div\").append(\"Generators: \");\n        wp.gens.forEach((g, i) => {\n          if (i > 0) {\n            gens.append(\", \");\n          }\n          gens.append(showGen(g));\n        });\n        let rels = Q.create(\"div\").append(\"Relations: \");\n        wp.rels.forEach((rel, i) => {\n          if (i > 0) {\n            rels.append(\", \");\n          }\n          rels.append(showRel(rel));\n        });\n        $idiv.append(Q.create(\"p\")\n                     .append(\"Wirtinger presentation:\")\n                     .append(gens)\n                     .append(rels));\n        function showGen(g) {\n          let s = Q.create(\"span\").append(g[0]);\n          s.append(Q.create(\"sub\").append(g.slice(1)));\n          return s;\n        }\n        function showRel(rel) {\n          let s = Q.create(\"span\");\n          for (let i = 0; i < rel.length; i += 2) {\n            s.append(showGen(rel[i]));\n            if (rel[i+1] !== 1) {\n              s.append(Q.create(\"sup\").append(''+rel[i+1]));\n            }\n          }\n          return s;\n        }\n      }\n\n      if (virtual_genus === 0) {\n        let $conway_poly;\n        $idiv.append(Q.create(\"p\")\n                     .append(\"Conway potential:\")\n                     .append($conway_poly = Q.create(\"div\")));\n        laurent_invariant(get_invariant(\"conway_poly\", diagram), $conway_poly, \"z\");\n      }\n\n      let $alex_polys = Q.create(\"p\").append(\"Alexander polynomials:\").appendTo($idiv);\n      (async function () {\n        try {\n          for (let n = 0; ; n++) {\n            let poly = await get_invariant(\"alexander_poly\", diagram, n);\n            if (n >= 1 && poly.equal(Laurent.unit)) {\n              break;\n            }\n            $alex_polys.append(Q.create(\"br\"));\n            $alex_polys.append(\"\\u0394\");\n            $alex_polys.append(Q.create(\"sup\").append(''+n));\n            $alex_polys.append(\"(t) = \"); //, poly.toDOM(\"t\"));\n            let $span = Q.create(\"span\").appendTo($alex_polys);\n            laurent_invariant(new Promise((resolve) => resolve(poly)),\n                              $span);\n          }\n        } catch (x) {\n          $alex_polys.append(Q.create(\"div\", {className: \"calc-error\"}, ''+x));\n          throw x;\n        }\n      })();\n\n      let $alex_mod = Q.create(\"details\",\n                               {title:\"Mildly simplified (not normalized since Z[t,t^-1] is not a PID)\"},\n                               Q.create(\"summary\", \"An Alexander module presentation matrix:\"))\n          .appendTo($idiv);\n      attach_details_handler(\"alexander-module\", $alex_mod);\n      (async function () {\n        let matrix = await get_invariant('alexander_module', diagram);\n        let $table = Q.create(\"table\").addClass(\"alexander-matrix\");\n        matrix.forEach(row => {\n          let $tr = Q.create(\"tr\").appendTo($table);\n          row.forEach(entry => {\n            let $td = Q.create(\"td\").appendTo($tr);\n            $td.append(entry.toExpr(\"t\").toDOM());\n          });\n        });\n        $alex_mod.append($table);\n        $alex_mod.append(Q.create(\"em\").append(\"(\" + matrix.length + \" generator(s))\"));\n      })();\n\n    }\n    \n    return $div;\n  }\n\n  paint(ctxt, with_arrows=true, with_virtual=true) {\n    ctxt.save();\n    ctxt.fillStyle = \"white\";\n    ctxt.fillRect(0, 0, this.width, this.height);\n\n    let getX = (x) => {\n      return x/this.zoom+this.c.x;\n    };\n    let getY = (y) => {\n      return y/this.zoom+this.c.y;\n    };\n\n    let diag = this.diagram;\n\n    let seen_darts = new Set;\n\n    let visit_dart = (dart) => {\n      if (seen_darts.has(dart)) return;\n\n      // locate beginning of path\n      function opp_is_under(d) {\n        /* Is the opposite of the dart an under-dart? */\n        d = diag.opp_dart(d);\n        return diag.dart_adj(d) instanceof X && !diag.dart_is_over(d);\n      }\n      // Switch to opposite orientation if needed, then walk until we get to beginning of arc.\n      if (diag.dart_start(dart) === diag.dart_edge(dart)[0]) {\n        dart = diag.opp_dart(dart);\n      }\n      let d = dart;\n      while (!opp_is_under(d)) {\n        d = diag.through_dart(d);\n        if (d === dart) break;\n      }\n      dart = diag.opp_dart(d);\n      // now dart is beginning of an arc (or some random dart from a loop)\n\n      let path = [];\n      let loop = false;\n      d = dart;\n      while (true) {\n        seen_darts.add(d);\n        seen_darts.add(diag.opp_dart(d));\n        path.push(diag.verts[diag.dart_start(d)]);\n        if (opp_is_under(d)) {\n          path.push(diag.verts[diag.dart_end(d)]);\n          break;\n        }\n        if (path.length > 1 && d === dart) {\n          loop = true;\n          break;\n        }\n        d = diag.through_dart(d);\n      }\n\n      if (!loop) {\n        let to_remove = CROSSING_GAP * this.zoom;\n        while (to_remove > 0 && path.length >= 2) {\n          let d = Point.dist(path[0], path[1]);\n          if (d <= to_remove) {\n            to_remove -= d;\n            path.shift();\n          } else {\n            path[0] = point_along(path[0], path[1], to_remove/d);\n            break;\n          }\n        }\n        to_remove = CROSSING_GAP * this.zoom;\n        while (to_remove > 0 && path.length >= 2) {\n          let d = Point.dist(path[path.length-2], path[path.length-1]);\n          if (d <= to_remove) {\n            to_remove -= d;\n            path.pop();\n          } else {\n            path[path.length-1] = point_along(path[path.length-1], path[path.length-2], to_remove/d);\n            break;\n          }\n        }\n      }\n\n      ctxt.beginPath();\n      ctxt.moveTo(getX(path[0].x)+0.5, getY(path[0].y)+0.5);\n      for (let i = 1; i < path.length; i++) {\n        let v = path[i];\n        ctxt.lineTo(getX(v.x)+0.5, getY(v.y)+0.5);\n      }\n      ctxt.strokeStyle = hex_to_rgb(palette[diag.dart_edge(dart)[2]-1]);\n      ctxt.lineWidth = DIAGRAM_LINE_WIDTH;\n      ctxt.lineCap = \"round\";\n      ctxt.stroke();\n\n      // arrow head\n      if (with_arrows) {\n        let p = path[path.length-1];\n        let dx = 0, dy = 0;\n        let dist = 5;\n        for (let i = path.length-2; i >= 0 && dist > 0; i--) {\n          let p1 = path[i], p2 = path[i+1];\n          dx += p2.x - p1.x;\n          dy += p2.y - p1.y;\n          dist -= Point.dist(p1, p2);\n        }\n        let norm = Math.sqrt(dx*dx + dy*dy);\n        if (norm > 0) {\n          dx /= norm;\n          dy /= norm;\n          ctxt.beginPath();\n          function f_x(x, y) {\n            // x is in direction of arrow tip\n            return getX(p.x) + dx*x - dy*y + 0.5;\n          }\n          function f_y(x, y) {\n            return getY(p.y) + dy*x + dx*y + 0.5;\n          }\n          ctxt.moveTo(f_x(-5, 2), f_y(-5, 2));\n          ctxt.lineTo(f_x(0, 0), f_y(0, 0));\n          ctxt.lineTo(f_x(-5, -2), f_y(-5, -2));\n          ctxt.stroke();\n        }\n      }\n    };\n\n    diag.edges.forEach((e, i) => {\n      visit_dart(i+1);\n    });\n\n    // draw virtual crossing circles\n    if (with_virtual) {\n      diag.adjs.forEach((adj, vid) => {\n        if (adj instanceof Virtual) {\n          let pt = diag.verts[vid];\n          ctxt.beginPath();\n          ctxt.arc(getX(pt.x)+0.5, getY(pt.y)+0.5, VIRTUAL_RADIUS, 0, 2*Math.PI);\n          ctxt.stroke();\n        }\n      });\n    }\n\n    if (0) {\n      ctxt.fillStyle = \"white\";\n      ctxt.globalAlpha = 1.0;\n      diag.verts.forEach(pt => {\n        ctxt.fillRect(getX(pt.x), getY(pt.y), 2, 2);\n      });\n    }\n\n    ctxt.restore();\n  }\n}\n","// View for painting knots\n\nimport {assert, clamp, hex_to_rgb} from \"./util.mjs\";\nimport {MIN_LINE_LENGTH, MAX_PPREV_DIST, ERASE_RADIUS, PAINT_RADIUS, DIAGRAM_LINE_WIDTH,\n        PAINT_GAP, WIDTH, HEIGHT, ERROR_RADIUS, SPUR_LENGTH, palette} from \"./constants.mjs\";\nimport {Point, line_points, lines_intersect, segment_contains, segments_intersect, pseudo_angle} from \"./geom2d.mjs\";\nimport {KnotGraph} from \"./knotgraph.mjs\";\nimport {KnotImageImportView} from \"./KnotImageImportView.mjs\";\nimport {KnotDiagramView} from \"./KnotDiagramView.mjs\";\nimport {P,X} from \"./pd.mjs\";\nimport Q from \"./kq.mjs\";\n\nconst EPSILON = 1e-2;\n\nlet global_painting_state = {\n  mode: \"pencil\",\n  color: 1,\n  go_over: 1\n};\n\nexport class KnotRasterView {\n  constructor(width, height) {\n    assert(width > 0);\n    assert(height > 0);\n    this.width = width;\n    this.height = height;\n    this.buffer = new Int8Array(this.width * this.height);\n    this.temp = new Int8Array(this.width * this.height);\n\n    this.mode_name = \"Painting\"; // constant\n    this.next_knot = null;\n  }\n  \n  copy() {\n    let kb = new KnotRasterView(this.width, this.height);\n    kb.buffer.set(this.buffer);\n    return kb;\n  }\n\n  mousedown(pt, e, undo_stack, ctxt) {\n    if (e.button === 0 || e.button === 2) {\n      if (this.next_knot) {\n        this.mousemove(pt, e, undo_stack, ctxt);\n        return;\n      }\n      this.next_knot = this.copy();\n      if (e.button === 0) {\n        if (global_painting_state.mode === \"eraser\") {\n          this.the_color = 0;\n        } else {\n          this.the_color = global_painting_state.color;\n        }\n      } else {\n        this.the_color = 0;\n        if (this.mark_tool) {\n          this.mark_tool(\"eraser\");\n        }\n      }\n      let go_over = global_painting_state.go_over * (e.shiftKey ? -1 : 1);\n      this.mark_height(go_over);\n      this.next_knot.draw_line(null, null, pt, this.the_color, go_over);\n      this.pprev = [];\n      this.pt1 = pt;\n      this.paint(ctxt);\n    }\n  }\n  mousemove(pt2, e, undo_stack, ctxt) {\n    if (this.next_knot) {\n      if (Point.dist(this.pt1, pt2) < MIN_LINE_LENGTH) {\n        return;\n      }\n      let go_over = global_painting_state.go_over * (e.shiftKey ? -1 : 1);\n      this.mark_height(go_over);\n      this.next_knot.draw_line(this.pprev, this.pt1, pt2, this.the_color, go_over);\n      this.pprev.push(this.pt1);\n      this.pt1 = pt2;\n\n      { // Keep only MAX_PPREV_DIST of pprev.\n        let length = Point.dist(this.pprev[this.pprev.length-1], this.pt1);\n        for (let i = 1; i + 1 < this.pprev.length; i++) {\n          length += Point.dist(this.pprev[i], this.pprev[i+1]);\n        }\n        while (length >= MAX_PPREV_DIST && this.pprev.length > 2) {\n          this.pprev.shift();\n          length -= Point.dist(this.pprev[0], this.pprev[1]);\n        }\n      }\n\n      this.paint(ctxt);\n    }\n  }\n  mouseup(pt, e, undo_stack, ctxt) {\n    if (this.next_knot) {\n      this.mousemove(pt, e, undo_stack, ctxt);\n      let knot = this.next_knot;\n      this.next_knot = null;\n      undo_stack.push(knot);\n    }\n  }\n  toolbox(undo_stack) {\n    let $div = this.$div = Q.div();\n\n    /* Tools */\n    $div.append(\n      Q.create(\"div\",\n               Q.create(\"h2\", \"Tools\"),\n\n               Q.create(\"span\", {\"data-tool\": \"pencil\",\n                                 title: \"Pencil\",\n                                 className: \"icon-button\"},\n                        Q.create(\"span\", {className: \"icon24-pencil\"})),\n\n               Q.create(\"span\", {\"data-tool\": \"eraser\",\n                                 title: \"Eraser [right click]\",\n                                 className: \"icon-button\"},\n                        Q.create(\"span\", {className: \"icon24-eraser\"}))\n              )\n        .on(\"click\", e => {\n          let el = e.target.closest('.icon-button');\n          if (el) {\n            let mode = el['data-tool'];\n            if (mode) {\n              e.preventDefault();\n              e.stopPropagation();\n              global_painting_state.mode = mode;\n              this.mark_tool(mode);\n            }\n          }\n        })\n    );\n\n    this.mark_tool = function (toolname) {\n      /* Set a tool button to be active, depending on the mode */\n\n      $div.query(\".icon-button\").forEach($e => {\n        let button_tool = $e.prop(\"data-tool\");\n        if (typeof button_tool === \"string\") {\n          $e.toggleClass(\"active\", button_tool === toolname);\n        }\n      });\n    };\n    this.mark_tool(global_painting_state.mode);\n\n    /* Over/under */\n    $div.append(\n      Q.create(\"div\",\n               Q.create(\"h2\").append(\"Pencil mode\"),\n\n               /* over */\n               Q.create(\"span\", {\"data-height\": 1,\n                                 title: \"Go over\",\n                                 className: \"icon-button\"},\n                        Q.create(\"span\", {className: \"icon24-go-over\"})),\n               /* same */\n               Q.create(\"span\", {\"data-height\": 0,\n                                 title: \"Go through (no auto-gaps)\",\n                                 className: \"icon-button\"},\n                        Q.create(\"span\", {className: \"icon24-go-through\"})),\n               /* under */\n               Q.create(\"span\", {\"data-height\": -1,\n                                 title: \"Go under [shift]\",\n                                 className: \"icon-button\"},\n                        Q.create(\"span\", {className: \"icon24-go-under\"})),\n\n              )\n        .on(\"click\", e => {\n          let el = e.target.closest('.icon-button');\n          if (el) {\n            let height = Q(el).prop(\"data-height\");\n            if (typeof height === \"number\") {\n              e.preventDefault();\n              e.stopPropagation();\n              global_painting_state.go_over = height;\n              this.mark_height(height);\n              global_painting_state.mode = \"pencil\";\n              this.mark_tool(\"pencil\");\n            }\n          }\n        })\n    );\n\n    this.mark_height = function (go_over) {\n      $div.query(\".icon-button\").forEach($e => {\n        let button_height = $e.prop(\"data-height\");\n        if (typeof button_height === \"number\") {\n          $e.toggleClass(\"active\", go_over === button_height);\n        }\n      });\n    };\n    this.mark_height(global_painting_state.go_over);\n\n    { /* Colors */\n      let $colors = Q.div().appendTo($div);\n      $colors.append(Q.create(\"h2\", \"Pencil colors\"));\n      palette.forEach((hex, i) => {\n        $colors.append(Q.create(\"span\", {className: \"icon-button\",\n                                         \"data-color\": i+1,\n                                         title: \"Color \" + (i+1)},\n                                Q.create(\"span\", {className: \"icon-color\"})\n                                .css(\"background\", hex_to_rgb(hex))));\n      });\n      $colors.on(\"click\", e => {\n        let el = e.target.closest('.icon-button');\n        if (el) {\n          let color = Q(el).prop(\"data-color\");\n          if (color) {\n            e.preventDefault();\n            e.stopPropagation();\n            global_painting_state.color = color;\n            this.mark_color(color);\n            global_painting_state.mode = \"pencil\";\n            this.mark_tool(\"pencil\");\n          }\n        }\n      }, true);\n\n      this.mark_color = function (i) {\n        /* Set a color button to be active, depending on the color index i. */\n        $colors.query(\".icon-button\").forEach(b => {\n          b.toggleClass(\"active\", b.prop(\"data-color\") === i);\n        });\n      };\n      this.mark_color(global_painting_state.color);\n    }\n\n    $div.append(Q.create(\"br\"));\n\n    $div.append(\n      Q.create(\"label\", {title: \"Load an image from a file (can also drag and drop from the filesystem or sometimes copy and paste)\"},\n               \"Load image: \",\n               Q.create(\"input\", {type: \"file\", accept: \"image/*\"})\n               .on(\"change\", e => {\n                 let file = e.target.files[0];\n                 if (file) {\n                   let reader = new FileReader();\n                   reader.readAsDataURL(file);\n                   reader.onloadend = () => {\n                     let img = document.createElement(\"img\");\n                     img.onload = () => {\n                       undo_stack.push(new KnotImageImportView(WIDTH, HEIGHT, img));\n                     };\n                     img.src = reader.result;\n                   };\n                 }\n               })\n              ));\n\n    $div.append(Q.create(\"hr\"));\n\n    $div.append(Q.create(\"input\", {type: \"button\",\n                                   title: \"Find cores of curves by morphological thinning\"})\n                .value(\"Clean up\")\n                .on(\"click\", e => {\n                  let knot = this.copy();\n                  knot.clean_up();\n                  undo_stack.push(knot);\n                }));\n\n    $div.append(Q.create(\"br\"));\n\n    $div.append(Q.create(\"input\", {type: \"button\",\n                                   title: \"Clear boundary pixels of curves\"})\n                .value(\"Thin\")\n                .on(\"click\", e => {\n                  let knot = this.copy();\n                  knot.thin();\n                  undo_stack.push(knot);\n                }));\n\n    $div.append(Q.create(\"input\", {type: \"button\",\n                                   title: \"Add boundary pixels to curves\"})\n                .value(\"Thicken\")\n                .on(\"click\", e => {\n                  let knot = this.copy();\n                  knot.thicken();\n                  undo_stack.push(knot);\n                }));\n\n    $div.append(Q.create(\"hr\"));\n\n    $div.append(Q.create(\"input\", {type: \"button\",\n                                   title: \"Analyze picture and convert to a diagram\"})\n                .value(\"Convert to diagram\")\n                .on(\"click\", e => {\n                  undo_stack.push(this.convert());\n                }));\n\n    if (this.the_error) {\n      let $error = Q.div({className: \"error\"},\n                         Q.create(\"h2\", \"Error\"))\n          .appendTo($div);\n      if (this.the_error instanceof Array) {\n        this.the_error.forEach(err => $error.append(Q.p(''+err)));\n      } else {\n        $error.append(Q.p(''+this.the_error));\n      }\n    }\n\n    return $div;\n  }\n\n  paint(ctxt) {\n    let imgdata = ctxt.getImageData(0, 0, this.width, this.height);\n    this.writeImage(imgdata);\n    ctxt.putImageData(imgdata, 0, 0);\n  }\n\n  writeImage(imageData) {\n    /* writes the buffer */\n    assert(imageData.height >= this.height);\n    assert(imageData.width >= this.width);\n    let data = imageData.data;\n    let w = this.width,\n        h = this.height;\n    let buf = this.next_knot ? this.next_knot.buffer : this.buffer;\n    for (let y = 0; y < h; y++) {\n      for (let x = 0; x < w; x++) {\n        let off = w*y+x;\n        let c = buf[off];\n        if (c > 0) {\n          let hex = palette[c-1];\n          data[4*off+0] = (hex >>> 16) & 0xFF;\n          data[4*off+1] = (hex >>> 8) & 0xFF;\n          data[4*off+2] = hex & 0xFF;\n          data[4*off+3] = 255;\n        } else if (c === 0) {\n          data[4*off+0] = 255;\n          data[4*off+1] = 255;\n          data[4*off+2] = 255;\n          data[4*off+3] = 255;\n        } else {\n          // error color\n          data[4*off+0] = 255;\n          data[4*off+1] = 150;\n          data[4*off+2] = 150;\n          data[4*off+3] = 255;\n        }\n      }\n    }\n  }\n\n  fromImage(imageData) {\n    /* Attempts to get buffer out of the imageData. */\n    assert(imageData.height >= this.height);\n    assert(imageData.width >= this.width);\n    let data = imageData.data;\n    let w = this.width,\n        h = this.height;\n    let buf = this.buffer;\n    for (let y = 0; y < h; y++) {\n      for (let x = 0; x < w; x++) {\n        let off = w*y+x;\n        let color = (data[4*off+0] << 16) | (data[4*off+1] << 8) | data[4*off+2];\n        let idx = palette.indexOf(color);\n        if (idx >= 0) {\n          buf[off] = idx + 1;\n        } else {\n          buf[off] = 0;\n        }\n      }\n    }\n  }\n\n  draw_line(pprev, p1, p2, v, go_over = 1) {\n    /* Draw a line from p1 to p2, given that there had already been a\n       line through the points in the array pprev to p1.  We allow pprev\n       to be null, meaning this is a fresh start.  If pprev is null, then\n       we allow p1 to be null, meaning this is the first point. */\n    let buf = this.buffer;\n    let temp = this.temp;\n\n    let width = 0|this.width,\n        height = 0|this.height;\n\n    //console.log(\"draw_line([\"+pprev+'],'+p1+','+p2+','+v+','+go_over+')');\n\n    let getPixel = (x, y) => {\n      if (0 <= x && x < width && 0 <= y && y < height) {\n        return buf[y*width + x];\n      } else {\n        return 0;\n      }\n    };\n    let setPixel = (x, y, v) => {\n      if (0 <= x && x < width && 0 <= y && y < height) {\n        buf[y*width + x] = v;\n      }\n    };\n    let getTempPixel = (x, y) => {\n      if (0 <= x && x < width && 0 <= y && y < height) {\n        return temp[y*width + x];\n      } else {\n        return -1;\n      }\n    };\n    let setTempPixel = (x, y, v) => {\n      if (0 <= x && x < width && 0 <= y && y < height) {\n        temp[y*width + x] = v;\n      }\n    };\n\n\n    function with_radius(x, y, r, f) {\n      /* Calls f with all pairs within a box of radius r of the given (x,y) point. */\n      for (let j = -r; j <= r; j++) {\n        for (let i = -r; i <= r; i++) {\n          f(x + i, y + j);\n        }\n      }\n    }\n\n    if (v === 0) {\n      // This is erase mode\n      for (let p of line_points(p1 || p2, p2)) {\n        with_radius(p.x, p.y, ERASE_RADIUS, (x, y) => setPixel(x, y, 0));\n      }\n    } else {\n      // This is draw mode\n\n      temp.fill(-1);\n      // non-negative means something to write.\n      // -2 marks pre-existing stuff that won't be re-written.\n\n      function find_existing(r, x, y) {\n        if (r < 0 || getTempPixel(x, y) !== -1 || getPixel(x, y) !== v) {\n          return;\n        }\n        setTempPixel(x, y, -2);\n        with_radius(x, y, 1, (x2, y2) => find_existing(r-1, x2, y2));\n      }\n\n      p1 = p1 || p2;\n\n      // See if this is, roughly, the start of a new line\n      let p0 = null;\n      if (pprev === null || pprev.length === 0) {\n        p0 = p1;\n      } else {\n        let length = Point.dist(p1, p2);\n        let last_p = p1;\n        for (let i = pprev.length-1; i >= 0; i--) {\n          length += Point.dist(last_p, pprev[i]);\n          last_p = pprev[i];\n        }\n        if (length <= MAX_PPREV_DIST) {\n          p0 = pprev[0];\n        }\n      }\n      if (p0 !== null) {\n        // Start of a new line, so look for anything it might be extending.\n        with_radius(p0.x, p0.y, PAINT_RADIUS+1, (x, y) => find_existing(PAINT_RADIUS + PAINT_GAP, x, y));\n      }\n\n      // mark everything in the line through pprev to p1 as being part of the current line\n      if (pprev !== null) {\n        let last_p = p1;\n        fill_old:\n        for (var i = pprev.length-1; i >= 0; i--) {\n          for (let p of line_points(last_p, pprev[i])) {\n            if (getPixel(p.x, p.y) === -1) {\n              // for go_over < 0\n              break fill_old;\n            }\n            with_radius(p.x, p.y, PAINT_RADIUS, (x, y) => setTempPixel(x, y, -2));\n          }\n          last_p = pprev[i];\n        }\n      }\n\n      // detect endpoints to suppress white border when closing up\n      if(0)with_radius(p2.x, p2.y, PAINT_RADIUS + PAINT_GAP, (x, y) => {\n        if (getPixel(x, y) !== v || getTempPixel(x, y) !== -1) {\n          return;\n        }\n        var state = -1;\n        var changes = -1;\n        function visit(x2, y2) {\n          if (getTempPixel(x2, y2) === -2) {\n            return;\n          }\n          let c = getPixel(x2, y2);\n          if (c !== state) {\n            state = c;\n            changes++;\n          }\n        }\n        let r = 2*PAINT_RADIUS + PAINT_GAP;\n        // go in counter-clockwise square of radius r about (x,y).\n        for (let x2 = x - r; x2 < x + r; x2++) {\n          visit(x2, y + r);\n        }\n        for (let y2 = y + r; y2 > y - r; y2--) {\n          visit(x + r, y2);\n        }\n        for (let x2 = x + r; x2 > x - r; x2--) {\n          visit(x2, y - r);\n        }\n        for (let y2 = y - r; y2 < y + r; y2++) {\n          visit(x - r, y2);\n        }\n        if (changes === 2) {\n          find_existing(r, x, y);\n        }\n      });\n\n      for (let p of line_points(p1, p2)) {\n        if (go_over > 0) {\n          with_radius(p.x, p.y, PAINT_RADIUS + PAINT_GAP, (x, y) => {\n            if (getTempPixel(x, y) === -1) {\n              setTempPixel(x, y, 0);\n            }\n          });\n          with_radius(p.x, p.y, PAINT_RADIUS, (x, y) => setTempPixel(x, y, v));\n        } else if (go_over < 0) {\n          with_radius(p.x, p.y, PAINT_RADIUS, (x, y) => {\n            let avoid = false;\n            with_radius(x, y, PAINT_GAP, (x2, y2) => {\n              if (getTempPixel(x2, y2) === -1 && getPixel(x2, y2) > 0) {\n                avoid = true;\n              }\n            });\n            if (!avoid) {\n              setTempPixel(x, y, v);\n            }\n          });\n        } else {\n          with_radius(p.x, p.y, PAINT_RADIUS, (x, y) => setTempPixel(x, y, v));\n        }\n      }\n\n      for (let i = 0; i < WIDTH * HEIGHT; i++) {\n        let t = temp[i];\n        if (t >= 0) {\n          buf[i] = t;\n        }\n      }\n    }\n  }\n\n  strip_errors() {\n    let buf = this.buffer;\n    for (let i = 0; i < buf.length; i++) {\n      if (buf[i] < 0) buf[i] = 0;\n    }\n  }\n  add_error(pt, r = ERROR_RADIUS) {\n    assert(pt instanceof Point);\n    let width = 0|this.width;\n    let height = 0|this.height;\n    let buf = this.buffer;\n    let ir = Math.ceil(r);\n    for (let dy = -ir; dy <= ir; dy++) {\n      let y = Math.floor(pt.y) + dy;\n      if (y < 0 || y >= height) {\n        continue;\n      }\n      for (let dx = -ir; dx <= ir; dx++) {\n        let x = Math.floor(pt.x) + dx;\n        if (x < 0 || x >= width) {\n          continue;\n        }\n        if (dx*dx + dy*dy <= r*r && buf[width*y+x] <= 0) {\n          buf[width*y+x] = -1;\n        }\n      }\n    }\n  }\n\n  thin() {\n    /* Remove all pixels that have neighbor not of the same color */\n    let width = 0|this.width;\n    let height = 0|this.height;\n    let buf = this.buffer;\n    let tbuf = this.temp;\n    tbuf.fill(0);\n\n    this.strip_errors();\n\n    // put -1 into tbuf to mark the pixel should be cleared\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        let erase = false;\n        let c = buf[y*width+x];\n        if (y === 0 || y === height - 1) {\n          erase = true;\n        } else if (x === 0 || x === width - 1) {\n          erase = true;\n        } else if (c > 0) {\n          find:\n          for (let dy = -1; dy <= 1; dy++) {\n            for (let dx = -1; dx <= 1; dx++) {\n              if (buf[(y+dy)*width+(x+dx)] !== c) {\n                erase = true;\n                break find; \n              }\n            }\n          }\n        }\n\n        if (erase) {\n          tbuf[y*width+x] = -1;\n        }\n      }\n    }\n\n    // clear pixels marked by tbuf\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        if (tbuf[y*width+x] === -1) {\n          buf[y*width+x] = 0;\n        }\n      }\n    }\n  }\n\n  thicken() {\n    /* Add boundary pixels to colored regions */\n    let width = 0|this.width;\n    let height = 0|this.height;\n    let buf = this.buffer;\n    let tbuf = this.temp;\n    tbuf.fill(0);\n\n    this.strip_errors();\n\n    // put colors into tbuf to mark the pixel should be colored\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        if (buf[y*width+x] > 0) {\n          continue;\n        }\n        let c = 0;\n        find:\n        for (let y2 = y-1; y2 <= y+1; y2++) {\n          if (y2 < 0 || y2 >= height) continue;\n          for (let x2 = x-1; x2 <= x+1; x2++) {\n            if (x2 < 0 || x2 >= width) continue;\n            c = buf[y2*width+x2];\n            if (c > 0)\n              break find;\n          }\n        }\n\n        tbuf[y*width+x] = c;\n      }\n    }\n\n    // set pixels marked by tbuf\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        let c = tbuf[y*width+x];\n        if (c > 0) {\n          buf[y*width+x] = c;\n        }\n      }\n    }\n  }\n\n  clean_up() {\n    let width = 0|this.width;\n    let height = 0|this.height;\n    let buf = this.buffer;\n    let tbuf = this.temp;\n\n    this.strip_errors();\n\n    // clear boundary\n    for (let x = 0; x < width; x++) {\n      buf[width*0+x] = 0;\n      buf[width*(height-1)+x] = 0;\n    }\n    for (let y = 0; y < height; y++) {\n      buf[width*y+0] = 0;\n      buf[width*y+width-1] = 0;\n    }\n\n    // morphological thinning of buf\n\n    let nbuf = new Int8Array(3*3);\n    function mthin(min_pcount, max_pcount) {\n      let changed = false;\n      for (let y = 1; y <= height - 2; y++) {\n        for (let x = 1; x <= width - 2; x++) {\n          let c = buf[width*y+x];\n          if (c <= 0) {\n            continue;\n          }\n          for (let dy = -1; dy <= 1; dy++) {\n            for (let dx = -1; dx <= 1; dx++) {\n              if (buf[width*(y+dy)+(x+dx)] === c) {\n                nbuf[3*(dy+1)+(dx+1)] = 1;\n              } else {\n                nbuf[3*(dy+1)+(dx+1)] = 0;\n              }\n            }\n          }\n          // fill in corners based on direct neighbors\n          if (nbuf[3*0+1]) { // top\n            if (nbuf[3*1+0]) { // left\n              nbuf[3*0+0] = 1;\n            }\n            if (nbuf[3*1+2]) { // right\n              nbuf[3*0+2] = 1;\n            }\n          }\n          if (nbuf[3*2+1]) { // bottom\n            if (nbuf[3*1+0]) { // left\n              nbuf[3*2+0] = 1;\n            }\n            if (nbuf[3*1+2]) { // right\n              nbuf[3*2+2] = 1;\n            }\n          }\n          \n          let state = nbuf[3*1+2];\n          let pcount = 0; // pixel count\n          let ccount = 0; // component changes\n          function step(dx, dy) {\n            let c2 = nbuf[3*(1+dy)+(1+dx)];\n            if (c2 !== state) {\n              ccount++;\n              state = c2;\n            }\n            if (c2 > 0) {\n              pcount++;\n            }\n          }\n          // step counterclockwise around point\n          step(1,1);\n          step(0,1);\n          step(-1,1);\n          step(-1,0);\n          step(-1,-1);\n          step(0,-1);\n          step(1,-1);\n          step(1,0);\n          if (pcount === 0) {\n            // this is isolated vertex\n            buf[width*y+x] = 0;\n            // no need to set changed to true since there are no consequences to removing this\n          } else if (ccount === 2) {\n            // this is not a cut vertex\n            if (min_pcount <= pcount && pcount <= max_pcount) {\n              // this is not an end vertex\n              buf[width*y+x] = 0;\n              changed = true;\n            }\n          }\n        }\n      }\n      return changed;\n    }\n\n    let changed = true;\n    while (changed) {\n      changed = mthin(3, 4);\n      if (!changed) {\n        changed = mthin(2, 6);\n      }\n      //changed = false;\n    }\n\n    // remove tips\n    tbuf.fill(0);\n    for (let y = 1; y <= height - 2; y++) {\n      for (let x = 1; x <= width - 2; x++) {\n        let c = buf[width*y+x];\n        if (c > 0) {\n          let icount = -1;\n          for (let dy = -1; dy <= 1; dy++) {\n            for (let dx = -1; dx <= 1; dx++) {\n              if (buf[width*(y+dy)+(x+dx)] === c) {\n                icount++;\n              }\n            }\n          }\n          if (icount === 1) {\n            tbuf[width*y+x] = 1;\n          }\n        }\n      }\n    }\n    for (let y = 1; y <= height - 2; y++) {\n      for (let x = 1; x <= width - 2; x++) {\n        if (tbuf[width*y+x] > 0) {\n          buf[width*y+x] = 0;\n        }\n      }\n    }\n  }\n\n  convert() {\n    /* Returns a View of either a cleaned up version (with errors) or an interpreted knot diagram. */\n\n    let knot = this.copy();\n    knot.clean_up();\n\n    let width = 0|knot.width,\n        height = 0|knot.height,\n        buf = knot.buffer;\n\n    function n_neighbors(x, y) {\n      /* number of neighbors of same color */\n      let c = buf[y*width+x];\n      let count = -1;\n      for (let dy = -1; dy <= 1; dy++) {\n        for (let dx = -1; dx <= 1; dx++) {\n          if (buf[(y+dy)*width+(x+dx)] === c) {\n            count++;\n          }\n        }\n      }\n      return count;\n    }\n\n    /// Spur deletion\n    \n    function maybe_delete_spur(x, y, gas) {\n      if (gas <= 0) {\n        // this wasn't actually a spur\n        return false;\n      }\n      let count = n_neighbors(x, y);\n      if (count === 0) {\n        return false;\n      } else if (count === 1) {\n        let c = buf[y*width+x];\n        for (let dy = -1; dy <= 1; dy++) {\n          for (let dx = -1; dx <= 1; dx++) {\n            if (!(dx === 0 && dy === 0) && buf[(y+dy)*width+(x+dx)] === c) {\n              buf[y*width+x] = 0;\n              let ok = maybe_delete_spur(x+dx, y+dy, gas-1);\n              if (ok) {\n                return true;\n              } else {\n                // revert!\n                buf[y*width+x] = c;\n                return false;\n              }\n            }\n          }\n        }\n        throw new Error(\"Cannot get here.\");\n      } else {\n        return true;\n      }\n    }\n\n    for (let y = 1; y <= height - 2; y++) {\n      for (let x = 1; x <= width - 2; x++) {\n        if (buf[y*width+x] > 0 && n_neighbors(x, y) === 1) {\n          // this is an endpoint\n          maybe_delete_spur(x, y, SPUR_LENGTH);\n        }\n      }\n    }\n\n    for (let y = 1; y <= height - 2; y++) {\n      for (let x = 1; x <= width - 2; x++) {\n        if (buf[y*width+x] > 0 && n_neighbors(x, y) === 0) {\n          // this is an isolated point\n          buf[y*width+x] = 0;\n        }\n      }\n    }\n\n    /// Locate any junctions (errors)\n\n    let found_error = false;\n    for (let y = 1; y <= height - 2; y++) {\n      for (let x = 1; x <= width - 2; x++) {\n        if (buf[y*width+x] > 0 && n_neighbors(x, y) > 2) {\n          knot.add_error(new Point(x, y));\n          found_error = true;\n        }\n      }\n    }\n    if (found_error) {\n      knot.the_error = \"The marked junctions cannot be interpreted. Usually this is because one of the understrands has fused to the overstrand, which can be fixed with a little erasing.\";\n      return knot;\n    }\n\n    /// Match up endpoints\n\n    // Since we removed isolated points, we know there is an even number of endpoints per color\n\n    // for counting number of times a line crosses:\n    let tknot = knot.copy();\n    tknot.thicken();\n\n    let endpoints = new Map(); // Map(color => [Point])\n    for (let y = 1; y <= height - 2; y++) {\n      for (let x = 1; x <= width - 2; x++) {\n        let c = buf[y*width+x];\n        if (c > 0 && n_neighbors(x, y) === 1) {\n          let ep_list = endpoints.get(c);\n          if (!ep_list) {\n            ep_list = [];\n            endpoints.set(c, ep_list);\n          }\n          ep_list.push(new Point(x, y));\n        }\n      }\n    }\n    function match_up(points, color) {\n      /* Looks for a perfect matching that optimizes a heuristic (sum\n      of distances divided by (number of segments crossed - 1)).*/\n\n      // graph[i][j] == score for path between i and j\n      let graph = new Array(points.length);\n      for (let i = 0; i < points.length; i++) {\n        let row = graph[i] = new Array(points.length);\n        row.fill(Infinity);\n      }\n      // a list of [i,j,score] for i<j, when score < Infinity\n      let all_edges = [];\n      for (let i = 0; i < points.length; i++) {\n        let p1 = points[i];\n        for (let j = i + 1; j < points.length; j++) {\n          let p2 = points[j];\n\n          let d = Point.dist(p1, p2);\n\n          let pcount = 0;\n          let state = -2;\n          for (let lp of line_points(p1, p2)) {\n            let c = tknot.buffer[width*lp.y+lp.x];\n            if (c === 0) {\n              c = 0|tknot.buffer[width*lp.y+(lp.x+1)];\n            }\n            if (c === 0) {\n              c = 0|tknot.buffer[width*(lp.y+1)+lp.x];\n            }\n            if (c !== state) {\n              if (c > 0) {\n                pcount++;\n              }\n              state = c;\n            }\n          }\n          if (pcount > 1) {\n            // Then this is a non-backtracking line segment\n            let count = Math.min(2, pcount-1);\n            let score = (d - DIAGRAM_LINE_WIDTH*count) / count;\n            score = Math.max(0, score);\n            graph[i][j] = score;\n            graph[j][i] = score;\n            all_edges.push([i, j, score]);\n          }\n        }\n      }\n      all_edges.sort((e1, e2) => e1[2] - e2[2]);\n\n      // construct match greedily\n\n      let used_points = Array(points.length).fill(false);\n      let edges = [];\n      all_edges.forEach(edge => {\n        if (used_points[edge[0]] || used_points[edge[1]]) {\n          return;\n        }\n        edges.push([edge[0], edge[1]]);\n        used_points[edge[0]] = true;\n        used_points[edge[1]] = true;\n      });\n\n      if (2 * edges.length < points.length) {\n        // Couldn't match everything up.  Return a too-short match\n        let err_points = [];\n        for (let i = 0; i < used_points.length; i++) {\n          if (!used_points[i]) {\n            err_points.push(points[i]);\n          }\n        }\n        return {err_points:err_points};\n      }\n\n      // look for pairs of edges where one of the other two pairings are better\n      let swaps = 0;\n      let keep_going = true;\n      while (keep_going) {\n        keep_going = false;\n        for (let i = 0; i < edges.length; i++) {\n          for (let j = i + 1; j < edges.length; j++) {\n            let [p1, p2] = edges[i],\n                [q1, q2] = edges[j];\n            let d1 = graph[p1][p2] + graph[q1][q2],\n                d2 = graph[p1][q1] + graph[p2][q2],\n                d3 = graph[p1][q2] + graph[q1][p2];\n            if (d2 < d1 && d2 <= d3) {\n              edges[i][1] = q1;\n              edges[j][0] = p2;\n              keep_going = true;\n              swaps++;\n            } else if (d3 < d1 && d3 <= d2) {\n              edges[i][1] = q2;\n              edges[j][1] = p2;\n              keep_going = true;\n              swaps++;\n            }\n          }\n        }\n      }\n      console.log(\"swaps= \" + swaps);\n\n      return edges.map(edge => [points[edge[0]], points[edge[1]]]);\n    }\n\n    // Collect the matching now.\n    let matches = []; // [p1, p2, color]\n    let errors = [];\n    endpoints.forEach((points, color) => {\n      let match = null;\n      match = match_up(points, color);\n      if (match.err_points) {\n        found_error = true;\n        match.err_points.forEach(pt => knot.add_error(pt));\n        errors.push(\"Couldn't find a way to match up endpoints in the component of color \"\n                    + color + \".  The unmatched points have been marked.\");\n        return;\n      }\n      match.forEach(edge => {\n        // check that the matching's edges do not intersect so far\n        matches.forEach(prev_match => {\n          let int = segments_intersect(prev_match[0], prev_match[1], edge[0], edge[1]);\n          if (int) {\n            found_error = true;\n            knot.add_error(int);\n            errors.push(\"There was a pair of matched-up endpoints whose matchings intersect.  The intersection point has been marked.\");\n          }\n        });\n        // then add this edge\n        matches.push([edge[0], edge[1], color]);\n      });\n    });\n\n    function do_error_stuff() {\n      console.log(\"error\");\n      // matches.forEach(match => {\n      //   knot.draw_line(null, match[0], match[1], match[2], -1);\n      // });\n      // errors.push(\"(All found matchings are drawn in on of the thinned version of the picture, to give some idea of what the program is seeing.  This can usually be edited and converted without undoing.)\");\n      knot.the_error = errors;\n      return knot;\n    }\n\n    if (found_error) {\n      return do_error_stuff();\n    }\n\n    /// Take matches and construct 4-regular planar graph\n\n    // walk_path destructively modifies buf\n    buf = new Int8Array(buf);\n\n    let verts = []; // [Point]\n    let edges = []; // [v1, v2, color, overness]\n    function vert_id(pt) {\n      for (let i = 0; i < verts.length; i++) {\n        if (Point.equal(verts[i], pt)) {\n          return i;\n        }\n      }\n      throw new Error(\"point not found\");\n    }\n\n    function walk_path(c, x, y) {\n      /* Walks the path from the given point.  Assumes path has at least two pixels. */\n      // assumes color c at point (x,y)\n\n      let pt1 = verts.length;\n      verts.push(new Point(x, y));\n      let last = null;\n      if (n_neighbors(x, y) === 2) {\n        last = pt1;\n      }\n      next_point:\n      while (buf[y*width+x] === c) {\n        buf[y*width + x] = 0;\n        for (let dy = -1; dy <= 1; dy++) {\n          for (let dx = -1; dx <= 1; dx++) {\n            if (c === buf[(y+dy)*width + (x+dx)]) {\n              x = x + dx; y = y + dy;\n              while (c === buf[(y+dy)*width + (x+dx)]) {\n                buf[y*width + x] = 0;\n                x = x + dx; y = y + dy;\n              }\n              let pt2 = verts.length;\n              verts.push(new Point(x, y));\n              edges.push([pt1, pt2, c, true]);\n              pt1 = pt2;\n              continue next_point;\n            }\n          }\n        }\n        if (last !== null) {\n          edges.push([pt1, last, c, true]);\n        }\n      }\n    }\n    // Walk from endpoints:\n    for (let y = 1; y <= height - 2; y++) {\n      for (let x = 1; x <= width - 2; x++) {\n        let c = buf[y*width+x];\n        if (c > 0 && n_neighbors(x, y) === 1) {\n          walk_path(c, x, y);\n        }\n      }\n    }\n    // Unknots:\n    for (let y = 1; y <= height - 2; y++) {\n      for (let x = 1; x <= width - 2; x++) {\n        let c = buf[y*width+x];\n        if (c > 0) {\n          walk_path(c, x, y);\n        }\n      }\n    }\n\n    // edges.forEach((edge, edge_id) => {\n    //   console.log(\"edge \" + edge + \"  v0=\"+verts[edge[0]]+\"  v1=\"+verts[edge[1]]);\n    // });\n    // console.log(\"---\");\n\n    matches.forEach(match => {\n      let seg = [vert_id(match[0]), vert_id(match[1])];\n      // Maybe seg runs through current vertices.  Split it if this is the case\n      verts.forEach((v, vi) => {\n        for (let i = 0; i + 1 < seg.length; i++) {\n          if (seg[i] === vi || seg[i+1] === vi) {\n            return;\n          }\n          if (segment_contains(verts[seg[i]], verts[seg[i+1]], v, EPSILON)) {\n            //console.log(\"Hit vertex \" + vi);\n            seg.splice(i+1, 0, vi);\n            return;\n          }\n        }\n      });\n      // Maybe seg intersects current edges.  Split both if this is the case\n      var new_edges = [];\n      edges.forEach((edge, edge_i) => {\n        for (let i = 0; i + 1 < seg.length; i++) {\n          let int_pt = segments_intersect(verts[edge[0]], verts[edge[1]],\n                                          verts[seg[i]], verts[seg[i+1]], EPSILON);\n          if (int_pt !== null) {\n            //console.log(\"Segment \" + seg +  \" hit edge \" + edge);\n            // we know int_pt is a new point if it's not an endpoint\n            let _int_pt_i = null;\n            function int_pt_i() {\n              if (_int_pt_i === null) {\n                _int_pt_i = verts.length;\n                verts.push(int_pt);\n              }\n              return _int_pt_i;\n            }\n            if (!Point.similar(int_pt, verts[edge[0]], EPSILON)\n                && !Point.similar(int_pt, verts[edge[1]], EPSILON)) {\n              new_edges.push([int_pt_i(), edge[1], edge[2], true]);\n              edge[1] = int_pt_i();\n              //console.log(\"Splitting edge\");\n            }\n            if (!Point.similar(int_pt, verts[seg[i]], EPSILON)\n                && !Point.similar(int_pt, verts[seg[i+1]], EPSILON)) {\n              seg.splice(i+1, 0, int_pt_i());\n              //console.log(\"Splitting segment\");\n            }\n            // Since seg is a straight line segment, no other part of it can intersect the current edge\n            return;\n          }\n        }\n      });\n      new_edges.forEach(e => edges.push(e));\n      for (let i = 0; i + 1 < seg.length; i++) {\n        edges.push([seg[i], seg[i+1], match[2], false]);\n      }\n    });\n\n    // now the verts and edges are constructed\n\n    /// Construct combinatorial map\n\n    // use edges as darts, but negative id means edge in the opposite direction\n    let adj_lists = [];\n    for (let i = 0; i < verts.length; i++) {\n      adj_lists[i] = [];\n    }\n    edges.forEach((edge, edge_id) => {\n      //console.log(\"edge \" + edge + \"  v0=\"+verts[edge[0]]+\"  v1=\"+verts[edge[1]]);\n      adj_lists[edge[0]].push(edge_id+1);\n      adj_lists[edge[1]].push(-edge_id-1);\n    });\n\n    // replace lists with P and X objects\n    adj_lists = adj_lists.map(list => {\n      if (list.length === 2) {\n        return P.make(...list);\n      } else if (list.length === 4) {\n        return X.make(...list);\n      } else {\n        return assert(false);\n      }\n    });\n\n    let diagram = new KnotGraph(verts, edges, adj_lists);\n\n    // sort adj_lists\n    adj_lists.forEach((list, i) => {\n      if (list instanceof P) {\n        let e0 = diagram.dart_edge(list[0]), e1 = diagram.dart_edge(list[1]);\n        assert(e0[2] === e1[2]); // same color\n        return;\n      }\n      assert(list instanceof X);\n      let vert = verts[i];\n      let lverts = list.map(dart => diagram.dart_end(dart));\n      // The angles are negative since the coordinate system has inverted y due to the canvas.\n      let angles = lverts.map(vi => -pseudo_angle(vert, verts[vi]));\n      function mswap(i, j) {\n        /* maybe swap the angle and list arrays, depending on the value of the angle */\n        if (angles[i] > angles[j]) {\n          [angles[i], angles[j]] = [angles[j], angles[i]];\n          [list[i], list[j]] = [list[j], list[i]];\n        }\n      }\n      // sorting network\n      mswap(1,3); mswap(0,2);\n      mswap(0,1); mswap(2,3);\n      mswap(1,2);\n      for (let i = 0; i < 3; i++) {\n        if (Math.abs((angles[i] - angles[i+1] + Math.PI) % (2 * Math.PI) - Math.PI) < 1e-6) {\n          // This is an unexpected coincident pair of edges\n          found_error = true;\n          knot.add_error(vert);\n          errors.push(\"The edges around the marked vertex were unexpectly coincident.  (This error has never been observed before!)\");\n          return;\n        }\n      }\n      // Put undercrossing dart as first in adjacency list\n      if (diagram.dart_edge(list[0])[3]) {\n        list.push(list.shift());\n      }\n      // Consistency check\n      let e0 = diagram.dart_edge(list[0]),\n          e1 = diagram.dart_edge(list[1]),\n          e2 = diagram.dart_edge(list[2]),\n          e3 = diagram.dart_edge(list[3]);\n      // is it a transverse crossing?\n      if (!(!e0[3] && e1[3] && !e2[3] && e3[3]) // opposite sides are both over or under\n          || !(e0[2] === e2[2] && e1[2] === e3[2])) { // opposite sides have same color\n        found_error = true;\n        knot.add_error(vert);\n        errors.push(\"The marked crossing is not transverse.\");\n        return;\n      }\n    });\n\n    if (found_error) {\n      return do_error_stuff();\n    }\n\n    // now adj_lists contains correct rotation system for each vertex\n\n    diagram.consistency_check();\n\n    // let the diagram choose orientations\n    diagram.ensure_orientation();\n\n    return new KnotDiagramView(this.width, this.height, diagram);\n  }\n}\n","/*\n\nThis is a version of StackBlur by Mario Klingemann, modified by Kyle Miller.\n\nOriginal copyright notice:\n\nStackBlur - a fast almost Gaussian Blur For Canvas\n\nVersion: \t0.5\nAuthor:\t\tMario Klingemann\nContact: \tmario@quasimondo.com\nWebsite:\thttp://www.quasimondo.com/StackBlurForCanvas\nTwitter:\t@quasimondo\n\nIn case you find this class useful - especially in commercial projects -\nI am not totally unhappy for a small donation to my PayPal account\nmario@quasimondo.de\n\nOr support me on flattr: \nhttps://flattr.com/thing/72791/StackBlur-a-fast-almost-Gaussian-Blur-Effect-for-CanvasJavascript\n\nCopyright (c) 2010 Mario Klingemann\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar mul_table = [\n  512,512,456,512,328,456,335,512,405,328,271,456,388,335,292,512,\n  454,405,364,328,298,271,496,456,420,388,360,335,312,292,273,512,\n  482,454,428,405,383,364,345,328,312,298,284,271,259,496,475,456,\n  437,420,404,388,374,360,347,335,323,312,302,292,282,273,265,512,\n  497,482,468,454,441,428,417,405,394,383,373,364,354,345,337,328,\n  320,312,305,298,291,284,278,271,265,259,507,496,485,475,465,456,\n  446,437,428,420,412,404,396,388,381,374,367,360,354,347,341,335,\n  329,323,318,312,307,302,297,292,287,282,278,273,269,265,261,512,\n  505,497,489,482,475,468,461,454,447,441,435,428,422,417,411,405,\n  399,394,389,383,378,373,368,364,359,354,350,345,341,337,332,328,\n  324,320,316,312,309,305,301,298,294,291,287,284,281,278,274,271,\n  268,265,262,259,257,507,501,496,491,485,480,475,470,465,460,456,\n  451,446,442,437,433,428,424,420,416,412,408,404,400,396,392,388,\n  385,381,377,374,370,367,363,360,357,354,350,347,344,341,338,335,\n  332,329,326,323,320,318,315,312,310,307,304,302,299,297,294,292,\n  289,287,285,282,280,278,275,273,271,269,267,265,263,261,259];\n\n\nvar shg_table = [\n\t9, 11, 12, 13, 13, 14, 14, 15, 15, 15, 15, 16, 16, 16, 16, 17, \n\t17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, \n\t19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20,\n\t20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 21,\n\t21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21,\n\t21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22, \n\t22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22,\n\t22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 23, \n\t23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23,\n\t23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23,\n\t23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, \n\t23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, \n\t24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,\n\t24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,\n\t24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,\n\t24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24 ];\n\n\nexport function stackBlurRGB( pixels, width, height, radius ) {\n  /* pixels is a Uint8Array of length 4*width*height. */\n\n\tif ( isNaN(radius) || radius < 1 ) return;\n\tradius |= 0;\n\t\n\tvar x, y, i, p, yp, yi, yw, r_sum, g_sum, b_sum,\n\t    r_out_sum, g_out_sum, b_out_sum,\n\t    r_in_sum, g_in_sum, b_in_sum,\n\t    pr, pg, pb, rbs;\n\t\n\tvar div = radius + radius + 1;\n\tvar w4 = width << 2;\n\tvar widthMinus1  = width - 1;\n\tvar heightMinus1 = height - 1;\n\tvar radiusPlus1  = radius + 1;\n\tvar sumFactor = radiusPlus1 * ( radiusPlus1 + 1 ) / 2;\n\t\n\tvar stackStart = new BlurStack();\n\tvar stack = stackStart;\n\tfor ( i = 1; i < div; i++ ) {\n\t\tstack = stack.next = new BlurStack();\n\t\tif ( i == radiusPlus1 ) var stackEnd = stack;\n\t}\n\tstack.next = stackStart;\n\tvar stackIn = null;\n\tvar stackOut = null;\n\t\n\tyw = yi = 0;\n\t\n\tvar mul_sum = mul_table[radius];\n\tvar shg_sum = shg_table[radius];\n\t\n\tfor ( y = 0; y < height; y++ ) {\n\t\tr_in_sum = g_in_sum = b_in_sum = r_sum = g_sum = b_sum = 0;\n\t\t\n\t\tr_out_sum = radiusPlus1 * ( pr = pixels[yi] );\n\t\tg_out_sum = radiusPlus1 * ( pg = pixels[yi+1] );\n\t\tb_out_sum = radiusPlus1 * ( pb = pixels[yi+2] );\n\t\t\n\t\tr_sum += sumFactor * pr;\n\t\tg_sum += sumFactor * pg;\n\t\tb_sum += sumFactor * pb;\n\t\t\n\t\tstack = stackStart;\n\t\t\n\t\tfor( i = 0; i < radiusPlus1; i++ ) {\n\t\t\tstack.r = pr;\n\t\t\tstack.g = pg;\n\t\t\tstack.b = pb;\n\t\t\tstack = stack.next;\n\t\t}\n\t\t\n\t\tfor( i = 1; i < radiusPlus1; i++ ) {\n\t\t\tp = yi + (( widthMinus1 < i ? widthMinus1 : i ) << 2 );\n\t\t\tr_sum += ( stack.r = ( pr = pixels[p])) * ( rbs = radiusPlus1 - i );\n\t\t\tg_sum += ( stack.g = ( pg = pixels[p+1])) * rbs;\n\t\t\tb_sum += ( stack.b = ( pb = pixels[p+2])) * rbs;\n\t\t\t\n\t\t\tr_in_sum += pr;\n\t\t\tg_in_sum += pg;\n\t\t\tb_in_sum += pb;\n\t\t\t\n\t\t\tstack = stack.next;\n\t\t}\n\t\t\n\t\t\n\t\tstackIn = stackStart;\n\t\tstackOut = stackEnd;\n\t\tfor ( x = 0; x < width; x++ ) {\n\t\t\tpixels[yi]   = (r_sum * mul_sum) >> shg_sum;\n\t\t\tpixels[yi+1] = (g_sum * mul_sum) >> shg_sum;\n\t\t\tpixels[yi+2] = (b_sum * mul_sum) >> shg_sum;\n\t\t\t\n\t\t\tr_sum -= r_out_sum;\n\t\t\tg_sum -= g_out_sum;\n\t\t\tb_sum -= b_out_sum;\n\t\t\t\n\t\t\tr_out_sum -= stackIn.r;\n\t\t\tg_out_sum -= stackIn.g;\n\t\t\tb_out_sum -= stackIn.b;\n\t\t\t\n\t\t\tp =  ( yw + ( ( p = x + radius + 1 ) < widthMinus1 ? p : widthMinus1 ) ) << 2;\n\t\t\t\n\t\t\tr_in_sum += ( stackIn.r = pixels[p]);\n\t\t\tg_in_sum += ( stackIn.g = pixels[p+1]);\n\t\t\tb_in_sum += ( stackIn.b = pixels[p+2]);\n\t\t\t\n\t\t\tr_sum += r_in_sum;\n\t\t\tg_sum += g_in_sum;\n\t\t\tb_sum += b_in_sum;\n\t\t\t\n\t\t\tstackIn = stackIn.next;\n\t\t\t\n\t\t\tr_out_sum += ( pr = stackOut.r );\n\t\t\tg_out_sum += ( pg = stackOut.g );\n\t\t\tb_out_sum += ( pb = stackOut.b );\n\t\t\t\n\t\t\tr_in_sum -= pr;\n\t\t\tg_in_sum -= pg;\n\t\t\tb_in_sum -= pb;\n\t\t\t\n\t\t\tstackOut = stackOut.next;\n\n\t\t\tyi += 4;\n\t\t}\n\t\tyw += width;\n\t}\n\n\t\n\tfor ( x = 0; x < width; x++ ) {\n\t\tg_in_sum = b_in_sum = r_in_sum = g_sum = b_sum = r_sum = 0;\n\t\t\n\t\tyi = x << 2;\n\t\tr_out_sum = radiusPlus1 * ( pr = pixels[yi]);\n\t\tg_out_sum = radiusPlus1 * ( pg = pixels[yi+1]);\n\t\tb_out_sum = radiusPlus1 * ( pb = pixels[yi+2]);\n\t\t\n\t\tr_sum += sumFactor * pr;\n\t\tg_sum += sumFactor * pg;\n\t\tb_sum += sumFactor * pb;\n\t\t\n\t\tstack = stackStart;\n\t\t\n\t\tfor( i = 0; i < radiusPlus1; i++ ) {\n\t\t\tstack.r = pr;\n\t\t\tstack.g = pg;\n\t\t\tstack.b = pb;\n\t\t\tstack = stack.next;\n\t\t}\n\t\t\n\t\typ = width;\n\t\t\n\t\tfor( i = 1; i <= radius; i++ ) {\n\t\t\tyi = ( yp + x ) << 2;\n\t\t\t\n\t\t\tr_sum += ( stack.r = ( pr = pixels[yi])) * ( rbs = radiusPlus1 - i );\n\t\t\tg_sum += ( stack.g = ( pg = pixels[yi+1])) * rbs;\n\t\t\tb_sum += ( stack.b = ( pb = pixels[yi+2])) * rbs;\n\t\t\t\n\t\t\tr_in_sum += pr;\n\t\t\tg_in_sum += pg;\n\t\t\tb_in_sum += pb;\n\t\t\t\n\t\t\tstack = stack.next;\n\t\t  \n\t\t\tif( i < heightMinus1 )\n\t\t\t{\n\t\t\t\typ += width;\n\t\t\t}\n\t\t}\n\t\t\n\t\tyi = x;\n\t\tstackIn = stackStart;\n\t\tstackOut = stackEnd;\n\t\tfor ( y = 0; y < height; y++ ) {\n\t\t\tp = yi << 2;\n\t\t\tpixels[p]   = (r_sum * mul_sum) >> shg_sum;\n\t\t\tpixels[p+1] = (g_sum * mul_sum) >> shg_sum;\n\t\t\tpixels[p+2] = (b_sum * mul_sum) >> shg_sum;\n\t\t\t\n\t\t\tr_sum -= r_out_sum;\n\t\t\tg_sum -= g_out_sum;\n\t\t\tb_sum -= b_out_sum;\n\t\t\t\n\t\t\tr_out_sum -= stackIn.r;\n\t\t\tg_out_sum -= stackIn.g;\n\t\t\tb_out_sum -= stackIn.b;\n\t\t\t\n\t\t\tp = ( x + (( ( p = y + radiusPlus1) < heightMinus1 ? p : heightMinus1 ) * width )) << 2;\n\t\t\t\n\t\t\tr_sum += ( r_in_sum += ( stackIn.r = pixels[p]));\n\t\t\tg_sum += ( g_in_sum += ( stackIn.g = pixels[p+1]));\n\t\t\tb_sum += ( b_in_sum += ( stackIn.b = pixels[p+2]));\n\t\t\t\n\t\t\tstackIn = stackIn.next;\n\t\t\t\n\t\t\tr_out_sum += ( pr = stackOut.r );\n\t\t\tg_out_sum += ( pg = stackOut.g );\n\t\t\tb_out_sum += ( pb = stackOut.b );\n\t\t\t\n\t\t\tr_in_sum -= pr;\n\t\t\tg_in_sum -= pg;\n\t\t\tb_in_sum -= pb;\n\t\t\t\n\t\t\tstackOut = stackOut.next;\n\t\t\t\n\t\t\tyi += width;\n\t\t}\n\t}\n}\n\nfunction BlurStack() {\n\tthis.r = 0;\n\tthis.g = 0;\n\tthis.b = 0;\n\tthis.a = 0;\n\tthis.next = null;\n}\n","// View for image import\n\nimport {assert, clamp} from \"./util.mjs\";\nimport Q from \"./kq.mjs\";\nimport {KnotRasterView} from \"./KnotRasterView.mjs\";\nimport {Point} from \"./geom2d.mjs\";\nimport {stackBlurRGB} from \"./StackBlur.mjs\";\n\nlet global_tool_state = {\n  tool: \"crop\"\n};\n\n\nexport class KnotImageImportView {\n  constructor(width, height, img) {\n    this.img = img;\n    this.width = width;\n    this.height = height;\n\n    // displacement\n    this.x = 0;\n    this.y = 0;\n\n    this.scale = Math.min(1, Math.min(width / img.width, height / img.height));\n\n    // crop region\n    this.sx = 0;\n    this.sy = 0;\n    this.swidth = img.width;\n    this.sheight = img.height;\n\n    this.invert = false;\n    this.blur = 0;\n    this.adaptive = 20;\n    this.threshold = -0.05;\n\n    this.tmp_canvas = document.createElement(\"canvas\");\n    this.tmp_canvas.width = this.width;\n    this.tmp_canvas.height = this.height;\n    this.tmp_ctxt = this.tmp_canvas.getContext(\"2d\");\n\n    this.mode_name = \"Image importing\";\n  }\n\n  copy() {\n    let view = new KnotImageImportView(this.width, this.height, this.img);\n    view.x = this.x;\n    view.y = this.y;\n    view.scale = this.scale;\n    view.sx = this.sx;\n    view.sy = this.sy;\n    view.swidth = this.swidth;\n    view.sheight = this.sheight;\n    view.invert = this.invert;\n    view.blur = this.blur;\n    view.threshold = this.threshold;\n    return view;\n  }\n\n  update_crop(pt1, pt2) {\n    let x1 = clamp(Math.min(pt1.x - this.x, pt2.x - this.x) / this.scale, 0, this.img.width),\n        x2 = clamp(Math.max(pt1.x - this.x, pt2.x - this.x) / this.scale, 0, this.img.width),\n        y1 = clamp(Math.min(pt1.y - this.y, pt2.y - this.y) / this.scale, 0, this.img.height),\n        y2 = clamp(Math.max(pt1.y - this.y, pt2.y - this.y) / this.scale, 0, this.img.height);\n\n    this.sx = x1;\n    this.sy = y1;\n    this.swidth = x2 - x1;\n    this.sheight = y2 - y1;\n  }\n\n  mousedown(pt, e, undo_stack, ctxt) {\n    let tool = global_tool_state.tool;\n    if (e.button === 2) {\n      tool = \"move\";\n      if (this.update_tool) {\n        this.update_tool(tool);\n      }\n    }\n\n    if (tool === \"crop\") {\n      this.crop_start = pt;\n      this.update_crop(this.crop_start, pt);\n      this.paint(ctxt);\n    } else if (tool === \"move\") {\n      this.move_start = pt;\n    }\n  }\n  mousemove(pt, e, undo_stack, ctxt) {\n    if (!e.buttons) {\n      this.mouseup(pt, e, undo_stack, ctxt);\n      return;\n    }\n    if (this.crop_start) {\n      this.update_crop(this.crop_start, pt);\n      this.paint(ctxt);\n    } else if (this.move_start) {\n      this.x += (pt.x - this.move_start.x);\n      this.y += (pt.y - this.move_start.y);\n      this.move_start = pt;\n      this.paint(ctxt);\n    }\n  }\n  mouseup(pt, e, undo_stack, ctxt) {\n    if (this.crop_start) {\n      this.update_crop(this.crop_start, pt);\n      this.crop_start = null;\n      this.paint(ctxt);\n    } else if (this.move_start) {\n      this.move_start = null;\n      this.paint(ctxt);\n    }\n    this.update_tool(global_tool_state.tool);\n  }\n  mouse_to_pt(pt) {\n    assert(pt instanceof Point);\n    return new Point((pt.x - this.x)/this.scale,\n                     (pt.y - this.y)/this.scale);\n  }\n  mousewheel(pt, e, undo_stack, ctxt) {\n    let delta = Math.sign(e.deltaY);\n    let kpt = this.mouse_to_pt(pt);\n    this.set_scale(this.scale * Math.pow(1.05, -delta));\n    let zkpt = this.mouse_to_pt(pt);\n    this.x += this.scale*(zkpt.x - kpt.x);\n    this.y += this.scale*(zkpt.y - kpt.y);\n    this.paint(ctxt);\n  }\n  toolbox(undo_stack, ctxt) {\n    let $div = this.$div = Q.div();\n\n    $div.append(\n      Q.div(\n        Q.span({\"data-tool\": \"move\",\n                title: \"Move image [right click]\",\n                className: \"icon-button\"},\n               Q.create(\"span\", {className: \"icon24-move\"})),\n        Q.span({\"data-tool\": \"crop\",\n                title: \"Crop image\",\n                className: \"icon-button\"},\n               Q.create(\"span\", {className: \"icon24-crop\"})),\n      )\n        .on(\"click\", e => {\n          let el = e.target.closest('.icon-button');\n          if (el) {\n            let tool = Q(el).prop('data-tool');\n            if (typeof tool === \"string\") {\n              e.preventDefault();\n              e.stopPropagation();\n              global_tool_state.tool = tool;\n              this.update_tool(tool);\n            }\n          }\n        })\n    );\n\n    this.update_tool = (toolname) => {\n      $div.query(\".icon-button\").forEach($e => {\n        let button_tool = $e.prop(\"data-tool\");\n        if (typeof button_tool === \"string\") {\n          $e.toggleClass(\"active\", button_tool === toolname);\n        }\n      });\n    };\n    this.update_tool(global_tool_state.tool);\n\n    var $scale;\n    $div.append(\n      Q.create(\"label\", {title: \"Rescale the image [mouse wheel]\"},\n               \"Scale: \",\n               $scale = Q.create(\"input\", { type: \"range\",\n                                            min: \"1\",\n                                            max: \"300\",\n                                            step: \"1\",\n                                            className: \"slider\" })\n              ));\n    $scale.on(\"input\", e => {\n      this.set_scale(e.target.value / 100);\n      this.paint(ctxt);\n    });\n\n    this.set_scale = (new_scale) => {\n      new_scale = clamp(new_scale, 0.01, 3.0);\n      $scale.value(Math.floor(this.scale * 100));\n      this.scale = new_scale;\n    };\n    this.set_scale(this.scale);\n\n    $div.append(Q.create(\"br\"));\n\n    $div.append(\n      Q.create(\"label\", { title: \"Invert the values of all the colors, for example if this is a chalk drawing.\" },\n               \"Invert colors: \",\n               Q.create(\"input\", {type: \"checkbox\"})\n               .on(\"input\", e => {\n                 this.invert = e.target.checked;\n                 this.paint(ctxt);\n               })\n              ));\n\n    $div.append(Q.create(\"br\"));\n\n    $div.append(\n      Q.create(\"label\", {title: \"Blur radius\"},\n               \"Blur: \",\n               Q.create(\"input\", { type: \"range\",\n                                   min: \"0\",\n                                   max: \"10\",\n                                   step: \"1\",\n                                   className: \"slider\" })\n               .value(this.blur)\n               .on(\"input\", e => {\n                 this.blur = e.target.value;\n                 this.paint(ctxt);\n               })\n              ));\n\n    $div.append(Q.create(\"br\"));\n\n    $div.append(\n      Q.create(\"label\", {title: \"Adaptive radius\"},\n               \"Adaptive radius: \",\n               Q.create(\"input\", { type: \"range\",\n                                   min: \"1\",\n                                   max: \"40\",\n                                   step: \"1\",\n                                   className: \"slider\" })\n               .value(this.adaptive)\n               .on(\"input\", e => {\n                 this.adaptive = e.target.value;\n                 this.paint(ctxt);\n               })\n              ));\n\n    $div.append(Q.create(\"br\"));\n\n    $div.append(\n      Q.create(\"label\", {title: \"Threshold for black\"},\n               \"Threshold: \",\n               Q.create(\"input\", {type: \"range\",\n                                  min: \"-500\",\n                                  max: \"500\",\n                                  step: \"1\",\n                                  className: \"slider\"})\n               .value(Math.floor(this.threshold * 1000))\n               .on(\"input\", e => {\n                 this.threshold = e.target.value / 1000;\n                 this.paint(ctxt);\n               })\n              ));\n\n    $div.append(Q.create(\"br\"));\n\n    $div.append(\n      Q.create(\"input\", {type: \"button\",\n                         value: \"Accept\",\n                         title: \"Take selection to painting mode\"})\n        .on(\"click\", e => {\n          this.paint(ctxt, true);\n          let view = new KnotRasterView(this.width, this.height);\n          view.fromImage(ctxt.getImageData(0, 0, this.width, this.height));\n          undo_stack.push(view);\n        })\n    );\n\n    return $div;\n  }\n\n  paint(ctxt, onlyCropped=false) {\n    ctxt.save();\n    if (onlyCropped) {\n      ctxt.fillStyle = \"#fff\";\n    } else {\n      ctxt.fillStyle = \"#ddd\";\n    }\n    ctxt.fillRect(0, 0, this.width, this.height);\n\n    let rx = this.sx*this.scale+this.x,\n        ry = this.sy*this.scale+this.y,\n        rwidth = this.swidth*this.scale,\n        rheight = this.sheight*this.scale;\n    let sx = this.sx,\n        sy = this.sy,\n        swidth = this.swidth,\n        sheight = this.sheight;\n\n    if (rx < 0) {\n      swidth += (rx) / this.scale;\n      sx = (0 - this.x) / this.scale;\n      rwidth += rx;\n      rx = 0;\n    }\n    if (rwidth > this.width) {\n      swidth -= (rwidth - this.width) / this.scale;\n      rwidth = this.width;\n    }\n    if (ry < 0) {\n      sheight += (ry) / this.scale;\n      sy = (0 - this.y) / this.scale;\n      rheight += ry;\n      ry = 0;\n    }\n    if (rheight > this.height) {\n      sheight -= (rheight - this.height) / this.scale;\n      rheight = this.height;\n    }\n\n\n    if (!onlyCropped) {\n      ctxt.globalAlpha = 0.3;\n      ctxt.drawImage(this.img,\n                     0, 0, this.img.width, this.img.height,\n                     this.x, this.y, this.scale*this.img.width, this.scale*this.img.height);\n\n      ctxt.globalAlpha = 1.0;\n      ctxt.fillStyle = \"#fff\";\n      ctxt.fillRect(rx, ry, rwidth, rheight);\n    }\n\n    let tmp_ctxt = this.tmp_ctxt;\n    tmp_ctxt.fillStyle = \"#fff\";\n    tmp_ctxt.fillRect(0, 0, rwidth + 1, rheight + 1);\n\n    tmp_ctxt.drawImage(this.img,\n                       sx, sy, swidth, sheight,\n                       0, 0, rwidth, rheight);\n\n    let imgdata = tmp_ctxt.getImageData(0, 0, Math.max(1, Math.floor(rwidth)), Math.max(1, Math.floor(rheight)));\n    let data = imgdata.data;\n\n    let width = imgdata.width;\n    let height = imgdata.height;\n\n    stackBlurRGB(data, width, height, this.blur);\n\n    let gdata = new Uint8Array(width * height);\n\n    // make grayscale (put everything into channel 1)\n    let do_invert = this.invert;\n    for (let i = 0; i < gdata.length; i++) {\n      let c = (data[4*i] + data[4*i+1] + data[4*i+2])/3;\n      if (do_invert) {\n        c = 255 - c;\n      }\n      gdata[i] = c;\n    }\n\n    stackBlurRGB(data, width, height, this.adaptive);\n\n    // threshold\n    for (let i = 0; i < gdata.length; i++) {\n      let adapt = (data[4*i] + data[4*i+1] + data[4*i+2])/3;\n      let c = gdata[i] - adapt;\n      c = (c/255 <= this.threshold) ? 0 : 255;\n      gdata[i] = c;\n    }\n\n    for (let i = 0; i < gdata.length; i++) {\n      let c = gdata[i];\n      data[4*i] = data[4*i+1] = data[4*i+2] = c;\n      data[4*i+3] = 255;\n    }\n\n    ctxt.putImageData(imgdata, rx, ry);\n\n    ctxt.restore();\n  }\n}\n","// UndoStack keeps track of changes as a list of complete views\n\nimport {assert} from \"./util.mjs\";\n\nexport class UndoStack {\n  constructor() {\n    this.versions = []; // a list of Views\n    this.i = -1;\n    this.length = 0;\n    this.listeners = [];\n  }\n  \n  _notify() {\n    this.listeners.map(f => f(this));\n  }\n  \n  get() {\n    assert(0 <= this.i && this.i < this.length);\n    return this.versions[this.i];\n  }\n  push(version) {\n    this.versions.length = this.i + 1;\n    this.versions.push(version);\n    this.i = this.versions.length - 1;\n    this.length = this.versions.length;\n    this._notify();\n  }\n  undo() {\n    if (this.i > 0) {\n      this.i--;\n      this._notify();\n    }\n  }\n  redo() {\n    if (this.i + 1 < this.versions.length) {\n      this.i++;\n      this._notify();\n    }\n  }\n}\n","import {assert} from \"./util.mjs\";\nimport \"./jones.mjs\";\nimport \"./alexander.mjs\";\nimport \"./conway.mjs\";\nimport \"./identify.mjs\";\nimport {KnotImageImportView} from \"./KnotImageImportView.mjs\";\nimport {KnotRasterView} from \"./KnotRasterView.mjs\";\nimport {UndoStack} from \"./undostack.mjs\";\nimport {WIDTH, HEIGHT} from \"./constants.mjs\";\nimport {Point} from \"./geom2d.mjs\";\nimport Q from \"./kq.mjs\";\n\nQ(function () {\n  window.addEventListener('error', function (e) {\n    let close = Q.create(\"input\", {type:\"button\", className:\"program-error-close\"}).value(\"X\");\n    let $box = Q.create(\"div\", {className:\"program-error\"},\n                        close,\n                        Q.create(\"h1\", \"Unhandled error\"),\n                        Q.create(\"p\", \"Message: \" + e.message),\n                        Q.create(\"p\", \"in \" + e.filename + \":\" + e.lineno + \":\" + e.colno),\n                        Q.create(\"p\", \"Error object: \" + JSON.stringify(e.error)));\n    Q(\"body\").append($box);\n    close.on(\"click\", e => $box.remove());\n  });\n\n  var undo_stack = new UndoStack();\n\n  undo_stack.listeners.push(undo_stack => {\n    Q(\".undo-state\").empty().append(`${undo_stack.i + 1}/${undo_stack.length}`);\n    Q(\"input.action-undo\").prop(\"disabled\", undo_stack.i <= 0);\n    Q(\"input.action-redo\").prop(\"disabled\", undo_stack.i + 1 >= undo_stack.length);\n  });\n  Q(\"input.action-undo\").on(\"click\", () => {\n    undo_stack.undo();\n  });\n  Q(\"input.action-redo\").on(\"click\", () => {\n    undo_stack.redo();\n  });\n  Q(\"input.action-clear\").on(\"click\", () => {\n    undo_stack.push(new KnotRasterView(WIDTH, HEIGHT));\n  });\n\n  var canvas = Q.create(\"canvas\").appendTo(Q(\"#editor\"));\n  canvas.prop(\"width\", WIDTH);\n  canvas.prop(\"height\", HEIGHT);\n\n  var ctxt = canvas[0].getContext('2d');\n  undo_stack.listeners.push(undo_stack => {\n    Q(\".modename\").empty().append(undo_stack.get().mode_name);\n    undo_stack.get().paint(ctxt);\n\n    let $tools = Q(\"#tools\").empty();\n    $tools.append(undo_stack.get().toolbox(undo_stack, ctxt));\n  });\n\n  undo_stack.push(new KnotRasterView(WIDTH, HEIGHT));\n\n  function mousePos(e) {\n    let rect = canvas[0].getBoundingClientRect();\n    return new Point(Math.floor(e.clientX - rect.left-1), Math.floor(e.clientY - rect.top-1));\n  }\n\n  var color = null;\n  var mouseHandler = null;\n\n  canvas.on(\"mousedown\", function (e) {\n    e.preventDefault();\n    e.stopPropagation();\n    undo_stack.get().mousedown(mousePos(e), e, undo_stack, ctxt);\n  });\n  canvas.on(\"mousemove\", function (e) {\n    e.preventDefault();\n    e.stopPropagation();\n    undo_stack.get().mousemove(mousePos(e), e, undo_stack, ctxt);\n  });\n  canvas.on(\"mouseup\", function (e) {\n    e.preventDefault();\n    e.stopPropagation();\n    undo_stack.get().mouseup(mousePos(e), e, undo_stack, ctxt);\n  });\n  canvas.on(\"contextmenu\", function (e) {\n    e.preventDefault();\n  });\n  canvas.on(\"wheel\", function (e) {\n    e.preventDefault();\n    e.stopPropagation();\n    let view = undo_stack.get();\n    if (view.mousewheel) {\n      view.mousewheel(mousePos(e), e, undo_stack, ctxt);\n    }\n  });\n\n  canvas.on(\"touchstart\", function (e) {\n    if (e.touches.length > 1) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    e.button = 0;\n    e.buttons = 1;\n    undo_stack.get().mousedown(mousePos(e.changedTouches[0]), e, undo_stack, ctxt);\n  });\n  canvas.on(\"touchmove\", function (e) {\n    if (e.touches.length > 1) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    e.button = 0;\n    e.buttons = 1;\n    undo_stack.get().mousemove(mousePos(e.changedTouches[0]), e, undo_stack, ctxt);\n  });\n  canvas.on(\"touchend\", function (e) {\n    if (e.touches.length > 0) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    e.button = 0;\n    e.buttons = 0;\n    undo_stack.get().mouseup(mousePos(e.changedTouches[0]), e, undo_stack, ctxt);\n  });\n\n\n  function process_img_upload() {\n    let img = this;\n    undo_stack.push(new KnotImageImportView(WIDTH, HEIGHT, img));\n  }\n\n  function show_drop_area(shown) {\n    Q(\"#drop-area\").css(\"display\", shown ? \"block\" : \"none\");\n  }\n\n  let drag_enter_counter = 0;\n  document.addEventListener(\"dragenter\", e => {\n    e.preventDefault();\n    e.stopPropagation();\n    drag_enter_counter++;\n    show_drop_area(drag_enter_counter > 0);\n  }, true);\n  document.addEventListener(\"dragleave\", e => {\n    e.preventDefault();\n    e.stopPropagation();\n    drag_enter_counter--;\n    show_drop_area(drag_enter_counter > 0);\n  }, true);\n  document.addEventListener(\"dragover\", e => {\n    e.preventDefault();\n    e.stopPropagation();\n    show_drop_area(true);\n  }, true);\n  document.addEventListener(\"drop\", e => {\n    e.preventDefault();\n    e.stopPropagation();\n    drag_enter_counter = 0;\n    show_drop_area(false);\n\n    let uri = e.dataTransfer.getData('text/uri-list');\n    if (uri) {\n      let uris = uri.split(\"\\n\");\n      for (let i = 0; i < uris.length; i++) {\n        if (uris[i][0] !== \"#\") {\n          let img = document.createElement(\"img\");\n          img.crossOrigin = \"Anonymous\"; // just in case the site allows it (CORS prevents most things)\n          img.onload = process_img_upload;\n          img.src = uris[i];\n          return;\n        }\n      }\n    }\n\n    let files = e.dataTransfer.files;\n    if (files.length > 0) {\n      let file = files[0];\n      let reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onloadend = () => {\n        let img = document.createElement(\"img\");\n        img.onload = process_img_upload;\n        img.src = reader.result;\n      };\n      return;\n    }\n  }, true);\n\n  document.addEventListener('paste', e => {\n    let items = (e.clipboardData || e.originalEvent.clipboardData).items;\n    for (let i = 0; i < items.length; i++) {\n      if (items[i].type.startsWith(\"image/\")) {\n        let file = items[i].getAsFile();\n        let reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onloadend = () => {\n          let img = document.createElement(\"img\");\n          img.onload = process_img_upload;\n          img.src = reader.result;\n        };\n        return;\n      }\n    }\n  }, false);\n});\n"],"names":["toString","expr.make_int_const","expr.make_var","expr.plus","expr.times","expr.pow","sort_pd_heuristic","knotdata.get_knots","global_tool_state"],"mappings":"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ACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,GAAG;AAChB,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG;AACjE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG;AACjE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG;AACjE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG;AACjE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG;AACjE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG;AACjE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG;AACjE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG;AACjE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG;AACjE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG;AACjE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG;AACjE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG;AACjE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG;AACjE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG;AACjE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG;AACjE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAC/D;AACA;AACA,IAAI,SAAS,GAAG;AAChB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;AAC9D,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;AAC/D,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;AAC/D,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;AAC/D,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;AAC/D,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;AAC/D,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;AAC/D,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;AAC/D,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;AAC/D,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;AAC/D,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;AAC/D,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EA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"}